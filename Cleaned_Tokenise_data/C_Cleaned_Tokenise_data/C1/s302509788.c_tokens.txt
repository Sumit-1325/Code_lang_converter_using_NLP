ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: x ID: y ID: d ID: remain ID: pregcd NUMBER: 0 ID: gcd NUMBER: 0 ID: i SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d" ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: remain ID: x ID: y SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: remain RPAREN: ) LBRACE: { NEWLINE: ID: d ID: x SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else LBRACE: { NEWLINE: ID: d ID: remain SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: remain ID: x ID: y SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 1 SEMI: ; ID: i ID: d SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: x ID: i NUMBER: 0 ID: remain ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: pregcd ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else LBRACE: { NEWLINE: ID: continue SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: gcd ID: pregcd RPAREN: ) LBRACE: { NEWLINE: ID: gcd ID: pregcd SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: gcd RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }