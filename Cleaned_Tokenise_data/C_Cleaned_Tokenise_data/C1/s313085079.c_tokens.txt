DIVIDE: / TIMES: * NEWLINE: TIMES: * NUMBER: 2 NEWLINE: TIMES: * NEWLINE: TIMES: * ID: input NEWLINE: TIMES: * NUMBER: 147 NUMBER: 105 NEWLINE: TIMES: * NEWLINE: TIMES: * ID: output NEWLINE: TIMES: * NUMBER: 21 NEWLINE: TIMES: * DIVIDE: / NEWLINE: ID: include ID: stdio ID: h NEWLINE: ID: int ID: gcd LPAREN: ( ID: int ID: x ID: int ID: y RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: r SEMI: ; NEWLINE: COMMENT: //ユークリッドの互除法 NEWLINE: ID: while LPAREN: ( ID: y NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: r ID: x ID: y SEMI: ; NEWLINE: ID: x ID: y SEMI: ; NEWLINE: ID: y ID: r SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return ID: x SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d" ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: y RPAREN: ) NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: gcd LPAREN: ( ID: x ID: y RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: ID: else NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: gcd LPAREN: ( ID: y ID: x RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: