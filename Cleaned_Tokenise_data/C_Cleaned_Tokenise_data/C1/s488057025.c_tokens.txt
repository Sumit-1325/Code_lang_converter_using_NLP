ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: x SEMI: ; NEWLINE: ID: int ID: y SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: y RPAREN: ) LBRACE: { NEWLINE: ID: int ID: max ID: x SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: x SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: x ID: max NUMBER: 0 ID: y ID: max RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d" ID: max RPAREN: ) SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: max MINUS: - MINUS: - SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: int ID: max ID: y SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: x SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: x ID: max NUMBER: 0 ID: y ID: max RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d" ID: max RPAREN: ) SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: max MINUS: - MINUS: - SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }