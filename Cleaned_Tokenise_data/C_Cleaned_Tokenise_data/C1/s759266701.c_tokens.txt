ID: include ID: stdio ID: h NEWLINE: ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: x ID: y ID: i ID: j SEMI: ; NEWLINE: NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: y RPAREN: ) LBRACE: { NEWLINE: ID: j ID: x ID: y SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i ID: j SEMI: ; ID: i NUMBER: 0 SEMI: ; ID: i MINUS: - MINUS: - RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: y ID: i NUMBER: 0 ID: j ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: i RPAREN: ) SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: else LBRACE: { NEWLINE: ID: j ID: y ID: x SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i ID: j SEMI: ; ID: i NUMBER: 0 SEMI: ; ID: i MINUS: - MINUS: - RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: x ID: i NUMBER: 0 ID: j ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: i RPAREN: ) SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }