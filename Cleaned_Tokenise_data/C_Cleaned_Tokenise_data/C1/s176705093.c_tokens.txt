ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: int ID: gcd LPAREN: ( ID: int ID: int RPAREN: ) SEMI: ; NEWLINE: ID: void ID: swap LPAREN: ( ID: int TIMES: * ID: int TIMES: * RPAREN: ) SEMI: ; NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: x ID: y ID: ans SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: ans ID: gcd LPAREN: ( ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: ans RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: gcd LPAREN: ( ID: int ID: x ID: int ID: y RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: r SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: y RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: swap LPAREN: ( ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: while LPAREN: ( ID: y NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: r ID: x ID: y SEMI: ; NEWLINE: ID: x ID: y SEMI: ; NEWLINE: ID: y ID: r SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return ID: x SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: void ID: swap LPAREN: ( ID: int TIMES: * ID: x ID: int TIMES: * ID: y RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: r SEMI: ; NEWLINE: ID: r TIMES: * ID: x SEMI: ; NEWLINE: TIMES: * ID: x TIMES: * ID: y SEMI: ; NEWLINE: TIMES: * ID: y ID: r SEMI: ; NEWLINE: RBRACE: } NEWLINE: