ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: x ID: y SEMI: ; NEWLINE: ID: int ID: d NUMBER: 1 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: int ID: che SEMI: ; NEWLINE: ID: int ID: min SEMI: ; NEWLINE: NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: y RPAREN: ) LBRACE: { NEWLINE: ID: che LPAREN: ( ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: min ID: y SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: che LPAREN: ( ID: y ID: x RPAREN: ) SEMI: ; NEWLINE: ID: min ID: x SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: min SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( LPAREN: ( LPAREN: ( ID: min ID: i RPAREN: ) NUMBER: 0 RPAREN: ) LPAREN: ( LPAREN: ( ID: che ID: i RPAREN: ) NUMBER: 0 RPAREN: ) RPAREN: ) LBRACE: { NEWLINE: ID: d ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: d RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: return LPAREN: ( NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: RBRACE: }