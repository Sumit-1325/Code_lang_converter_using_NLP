ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: char ID: s NUMBER: 11 LBRACE: { NUMBER: 0 RBRACE: } SEMI: ; NEWLINE: ID: char ID: input NUMBER: 11 SEMI: ; NEWLINE: ID: int ID: now NUMBER: 0 ID: i ID: len SEMI: ; NEWLINE: NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: input RPAREN: ) SEMI: ; NEWLINE: ID: len ID: strlen LPAREN: ( ID: input RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: len SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: switch LPAREN: ( LPAREN: ( ID: int RPAREN: ) ID: input ID: i RPAREN: ) LBRACE: { NEWLINE: ID: case NUMBER: 1 NEWLINE: ID: s ID: now NUMBER: 1 SEMI: ; NEWLINE: ID: now PLUS: + PLUS: + SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: ID: case NUMBER: 0 NEWLINE: ID: s ID: now NUMBER: 0 SEMI: ; NEWLINE: ID: now PLUS: + PLUS: + SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: ID: case ID: B NEWLINE: ID: if LPAREN: ( ID: now NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: s ID: now NUMBER: 0 SEMI: ; NEWLINE: ID: now MINUS: - MINUS: - SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: s ID: now NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: RBRACE: }