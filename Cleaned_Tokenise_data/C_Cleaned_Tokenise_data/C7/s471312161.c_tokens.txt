ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: char ID: S NUMBER: 11 SEMI: ; NEWLINE: ID: char ID: S2 NUMBER: 11 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: int ID: j SEMI: ; NEWLINE: ID: int ID: len SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: S RPAREN: ) SEMI: ; NEWLINE: ID: len ID: strlen LPAREN: ( ID: S RPAREN: ) SEMI: ; NEWLINE: ID: j NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: len SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: S ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: j ID: j PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: S2 ID: j MINUS: - NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: S ID: i NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: j ID: j PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: S2 ID: j MINUS: - NUMBER: 1 NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: S ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: j NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: j ID: j MINUS: - NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: j SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%s" ID: S ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "\n" RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }