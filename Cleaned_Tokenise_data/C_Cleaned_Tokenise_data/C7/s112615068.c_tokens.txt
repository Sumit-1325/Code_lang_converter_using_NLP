ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: char ID: key NUMBER: 15 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: key RPAREN: ) SEMI: ; NEWLINE: ID: int ID: ctrb NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: len NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: key ID: i NUMBER: 0 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: key ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: key ID: i MINUS: - NUMBER: 1 ID: f SEMI: ; NEWLINE: ID: ctrb PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: else LBRACE: { NEWLINE: ID: if LPAREN: ( ID: key ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: key ID: i ID: f SEMI: ; NEWLINE: ID: ctrb PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: len PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: len SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: key ID: i NUMBER: 1 ID: key ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%c" ID: key ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }