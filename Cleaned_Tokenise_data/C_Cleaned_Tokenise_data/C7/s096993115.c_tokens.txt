ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: char ID: S NUMBER: 11 SEMI: ; NEWLINE: ID: char ID: x NUMBER: 11 SEMI: ; NEWLINE: ID: int ID: loop1 ID: loop2 SEMI: ; NEWLINE: ID: loop2 NUMBER: 0 SEMI: ; NEWLINE: ID: gets LPAREN: ( ID: S RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: loop1 NUMBER: 0 SEMI: ; ID: loop1 NUMBER: 10 SEMI: ; ID: loop1 PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: S ID: loop1 NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: x ID: loop2 NUMBER: 0 SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: switch LPAREN: ( ID: S ID: loop1 RPAREN: ) LBRACE: { NEWLINE: ID: case NUMBER: 48 NEWLINE: ID: case NUMBER: 49 LBRACE: { NEWLINE: ID: x ID: loop2 ID: S ID: loop1 SEMI: ; NEWLINE: ID: loop2 PLUS: + PLUS: + SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: case NUMBER: 66 LBRACE: { NEWLINE: ID: if LPAREN: ( ID: loop2 NUMBER: 0 RPAREN: ) ID: loop2 MINUS: - MINUS: - SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%s\n" ID: x RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: