ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: char ID: s NUMBER: 11 LBRACE: { NUMBER: 0 RBRACE: } SEMI: ; NEWLINE: ID: char ID: t NUMBER: 11 LBRACE: { NUMBER: 0 RBRACE: } SEMI: ; NEWLINE: ID: int ID: p NUMBER: 0 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: strlen LPAREN: ( ID: s RPAREN: ) SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: s ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: t ID: p NUMBER: 0 SEMI: ; NEWLINE: ID: p PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: s ID: i NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: t ID: p NUMBER: 1 SEMI: ; NEWLINE: ID: p PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: s ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: p NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: p MINUS: - MINUS: - SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%s\n" ID: t RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: