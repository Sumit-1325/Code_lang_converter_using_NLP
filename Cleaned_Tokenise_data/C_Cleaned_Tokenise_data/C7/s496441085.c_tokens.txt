ID: include ID: stdio ID: h NEWLINE: NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: char ID: s NUMBER: 1111 ID: a NUMBER: 1111 LBRACE: { RBRACE: } SEMI: ; NEWLINE: ID: int ID: i ID: n ID: t NUMBER: 0 SEMI: ; NEWLINE: NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: n ID: strlen LPAREN: ( ID: s RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: s ID: i NUMBER: 1 RPAREN: ) NEWLINE: ID: a ID: t PLUS: + PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: s ID: i NUMBER: 0 RPAREN: ) NEWLINE: ID: a ID: t PLUS: + PLUS: + NUMBER: 0 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: s ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: t NUMBER: 0 RPAREN: ) NEWLINE: ID: a MINUS: - MINUS: - ID: t NUMBER: 0 SEMI: ; NEWLINE: NEWLINE: RBRACE: } NEWLINE: NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%s\n" ID: a RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }