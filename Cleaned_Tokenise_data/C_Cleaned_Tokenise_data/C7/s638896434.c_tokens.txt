ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: char ID: s NUMBER: 11 LBRACE: { NUMBER: 0 RBRACE: } SEMI: ; NEWLINE: ID: char ID: ans NUMBER: 11 LBRACE: { NUMBER: 0 RBRACE: } SEMI: ; NEWLINE: ID: int ID: i NUMBER: 0 ID: p NUMBER: 0 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: ID: while LPAREN: ( ID: s ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: switch LPAREN: ( ID: s ID: i RPAREN: ) LBRACE: { NEWLINE: ID: case NUMBER: 0 NEWLINE: ID: ans ID: p PLUS: + PLUS: + NUMBER: 0 SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: ID: case NUMBER: 1 NEWLINE: ID: ans ID: p PLUS: + PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: ID: case ID: B NEWLINE: ID: if LPAREN: ( ID: p NUMBER: 0 RPAREN: ) ID: ans ID: p MINUS: - MINUS: - NUMBER: 0 SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: ID: default NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%s\n" ID: ans RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }