ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: char ID: string NUMBER: 11 STRING: "" ID: ans NUMBER: 11 STRING: "" SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: string RPAREN: ) SEMI: ; NEWLINE: ID: int ID: lengthString ID: strlen LPAREN: ( ID: string RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: lengthString SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: string ID: i NUMBER: 1 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: ans ID: i NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( ID: string ID: i NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: ans ID: i NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: ans ID: i MINUS: - NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 11 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%c\n" ID: ans ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: