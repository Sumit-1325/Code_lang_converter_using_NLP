ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: char ID: s NUMBER: 16 SEMI: ; NEWLINE: ID: char ID: buf NUMBER: 16 SEMI: ; NEWLINE: ID: int ID: top NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: s ID: i NUMBER: 0 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: s ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: top NUMBER: 0 RPAREN: ) ID: top MINUS: - MINUS: - SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: buf ID: top ID: s ID: i SEMI: ; NEWLINE: ID: top PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: top SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) ID: printf LPAREN: ( STRING: "%c" ID: buf ID: i RPAREN: ) SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "\n" RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }