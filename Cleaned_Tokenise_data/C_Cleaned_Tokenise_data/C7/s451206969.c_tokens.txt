ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: define ID: N NUMBER: 100000 NEWLINE: ID: int ID: cmp LPAREN: ( ID: const ID: void TIMES: * ID: a ID: const ID: void TIMES: * ID: b RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: return LPAREN: ( TIMES: * LPAREN: ( ID: int TIMES: * RPAREN: ) ID: a MINUS: - TIMES: * LPAREN: ( ID: int TIMES: * RPAREN: ) ID: b RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: a NUMBER: 11 ID: b NUMBER: 10 SEMI: ; NEWLINE: ID: char ID: s NUMBER: 11 SEMI: ; NEWLINE: ID: int ID: i ID: k NUMBER: 0 ID: m NUMBER: 0 SEMI: ; NEWLINE: ID: gets LPAREN: ( ID: s RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: s ID: i SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: s ID: i NUMBER: 0 RPAREN: ) NEWLINE: ID: a ID: i NUMBER: 1 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: s ID: i NUMBER: 1 RPAREN: ) NEWLINE: ID: a ID: i NUMBER: 2 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: s ID: i ID: B RPAREN: ) NEWLINE: ID: a ID: i NUMBER: 3 SEMI: ; NEWLINE: ID: k PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: k SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a ID: i NUMBER: 3 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: a ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: a ID: i MINUS: - NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: k SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a ID: i NUMBER: 1 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: b ID: m NUMBER: 0 SEMI: ; NEWLINE: ID: m PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: a ID: i NUMBER: 2 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: b ID: m NUMBER: 1 SEMI: ; NEWLINE: ID: m PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: qsort LPAREN: ( ID: b ID: m ID: sizeof LPAREN: ( ID: int RPAREN: ) ID: cmp RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: m SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d" ID: b ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: