ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: int ID: argc ID: char TIMES: * ID: argv RPAREN: ) LBRACE: { NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: char ID: s NUMBER: 11 SEMI: ; NEWLINE: ID: char ID: a NUMBER: 11 SEMI: ; NEWLINE: ID: int ID: l ID: r SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: ID: l ID: strlen LPAREN: ( ID: s RPAREN: ) SEMI: ; NEWLINE: ID: r ID: strlen LPAREN: ( ID: a RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 10 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: a ID: i NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: l MINUS: - NUMBER: 1 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: r ID: strlen LPAREN: ( ID: a RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: s ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: r NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: a ID: r MINUS: - NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: a ID: r ID: s ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: COMMENT: //printf("%s\n", a); NEWLINE: RBRACE: } NEWLINE: DIVIDE: / TIMES: * NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: l MINUS: - NUMBER: 1 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: r ID: strlen LPAREN: ( ID: a RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: s ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: a ID: r NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: s ID: i NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: a ID: r NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: s ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: r NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: a ID: r MINUS: - NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: COMMENT: //printf("%s\n", a); NEWLINE: RBRACE: } NEWLINE: TIMES: * DIVIDE: / NEWLINE: ID: printf LPAREN: ( STRING: "%s\n" ID: a RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: