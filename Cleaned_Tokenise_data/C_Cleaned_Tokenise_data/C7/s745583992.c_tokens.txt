ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: char ID: s NUMBER: 11 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: s ID: i NUMBER: 0 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: s NUMBER: 0 ID: B RPAREN: ) LBRACE: { NEWLINE: ID: for LPAREN: ( ID: int ID: j NUMBER: 0 SEMI: ; ID: s ID: j NUMBER: 0 SEMI: ; ID: j PLUS: + PLUS: + RPAREN: ) ID: s ID: j ID: s ID: j PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: i NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( ID: s ID: i ID: B RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: s ID: i PLUS: + NUMBER: 1 NUMBER: 0 RPAREN: ) ID: s ID: i MINUS: - NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: ID: else ID: for LPAREN: ( ID: int ID: j ID: i SEMI: ; ID: s ID: j NUMBER: 0 SEMI: ; ID: j PLUS: + PLUS: + RPAREN: ) ID: s ID: j MINUS: - NUMBER: 1 ID: s ID: j PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: i NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%s" ID: s RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }