ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: include ID: math ID: h NEWLINE: ID: double ID: fun LPAREN: ( ID: double ID: a ID: double ID: b ID: double ID: x ID: double ID: y RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: double ID: p ID: q ID: r ID: s SEMI: ; NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: a MINUS: - ID: x RPAREN: ) TIMES: * ID: b ID: x TIMES: * ID: b RPAREN: ) ID: p LPAREN: ( ID: a MINUS: - ID: x RPAREN: ) TIMES: * ID: b SEMI: ; NEWLINE: ID: else ID: p ID: x TIMES: * ID: b SEMI: ; NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: b MINUS: - ID: y RPAREN: ) TIMES: * ID: a ID: y TIMES: * ID: a RPAREN: ) ID: q LPAREN: ( ID: b MINUS: - ID: y RPAREN: ) TIMES: * ID: a SEMI: ; NEWLINE: ID: else ID: q ID: y TIMES: * ID: a SEMI: ; NEWLINE: ID: if LPAREN: ( ID: p ID: q RPAREN: ) ID: return ID: p SEMI: ; NEWLINE: ID: return ID: q SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: double ID: w ID: h ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf%lf%lf%lf" ID: w ID: h ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: w DIVIDE: / NUMBER: 2 ID: x ID: h DIVIDE: / NUMBER: 2 ID: y RPAREN: ) NEWLINE: ID: printf LPAREN: ( STRING: "%.6lf 1" LPAREN: ( ID: w MINUS: - ID: x RPAREN: ) TIMES: * ID: h RPAREN: ) SEMI: ; NEWLINE: ID: else NEWLINE: ID: printf LPAREN: ( STRING: "%.6lf 0" ID: fun LPAREN: ( ID: w ID: h ID: x ID: y RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: