ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: W ID: H ID: x ID: y ID: X ID: Y ID: cou NUMBER: 0 SEMI: ; NEWLINE: ID: double ID: tate ID: yoko SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d %d %d" ID: W ID: H ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: X ID: W DIVIDE: / NUMBER: 2 SEMI: ; ID: Y ID: H DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: X ID: x RPAREN: ) LBRACE: { NEWLINE: ID: cou PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: Y ID: y RPAREN: ) LBRACE: { NEWLINE: ID: cou PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: cou NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: cou NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: tate LPAREN: ( ID: double RPAREN: ) ID: H TIMES: * ID: W MINUS: - LPAREN: ( ID: double RPAREN: ) ID: x TIMES: * ID: H SEMI: ; NEWLINE: ID: yoko LPAREN: ( ID: double RPAREN: ) ID: H TIMES: * ID: W MINUS: - LPAREN: ( ID: double RPAREN: ) ID: y TIMES: * ID: W SEMI: ; NEWLINE: ID: if LPAREN: ( ID: tate ID: yoko RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%.6f %d" ID: tate ID: cou RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%.6f %d" ID: yoko ID: cou RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: