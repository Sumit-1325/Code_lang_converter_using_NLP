ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: include ID: math ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: double ID: a ID: b ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf %lf %lf %lf" ID: a ID: b ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: a ID: b RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: x NUMBER: 0 ID: y NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: double ID: d NUMBER: 0 NUMBER: 0 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%0.6lf 0\n" ID: d RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( ID: x ID: a DIVIDE: / NUMBER: 2 NUMBER: 0 ID: y ID: a DIVIDE: / NUMBER: 2 NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%0.6lf 1\n" LPAREN: ( ID: a TIMES: * ID: b RPAREN: ) DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%0.6lf 0\n" LPAREN: ( ID: a TIMES: * ID: b RPAREN: ) DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: else NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: x NUMBER: 0 ID: y NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: double ID: d NUMBER: 0 NUMBER: 0 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%0.6lf 0\n" ID: d RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( ID: x ID: a DIVIDE: / NUMBER: 2 NUMBER: 0 ID: y ID: a DIVIDE: / NUMBER: 2 NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%0.6lf 1\n" LPAREN: ( ID: a TIMES: * ID: b RPAREN: ) DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%0.6lf 0\n" LPAREN: ( ID: a TIMES: * ID: b RPAREN: ) DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }