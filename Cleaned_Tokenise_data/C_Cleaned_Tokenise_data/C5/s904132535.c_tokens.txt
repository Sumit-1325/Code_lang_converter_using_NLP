ID: include ID: stdio ID: h NEWLINE: NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: double ID: W ID: H ID: x ID: y ID: S SEMI: ; NEWLINE: NEWLINE: ID: scanf LPAREN: ( STRING: "%lf %lf %lf %lf" ID: W ID: H ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: S LPAREN: ( ID: W TIMES: * ID: H RPAREN: ) DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%f " ID: S RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: if LPAREN: ( ID: x TIMES: * NUMBER: 2 ID: W ID: y TIMES: * NUMBER: 2 ID: H RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "1" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "0" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }