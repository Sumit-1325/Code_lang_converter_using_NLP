ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: COMMENT: // Your code here! NEWLINE: NEWLINE: ID: int ID: w ID: h ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d %d %d" ID: w ID: h ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: int ID: i ID: j NUMBER: 0 SEMI: ; NEWLINE: ID: double ID: max MINUS: - NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: ID: double ID: m1 NUMBER: 0 ID: m2 NUMBER: 0 ID: k NUMBER: 0 SEMI: ; NEWLINE: NEWLINE: ID: k ID: w TIMES: * ID: h SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 2 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: m1 ID: x TIMES: * ID: h SEMI: ; NEWLINE: ID: m2 ID: k MINUS: - ID: m1 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: m1 ID: m2 RPAREN: ) ID: max ID: m1 SEMI: ; NEWLINE: ID: else ID: max ID: m2 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( ID: i NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: m1 ID: w TIMES: * ID: y SEMI: ; NEWLINE: ID: m2 ID: k MINUS: - ID: m1 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: m1 ID: m2 RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: max ID: m1 RPAREN: ) LBRACE: { NEWLINE: ID: j NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: max ID: m1 RPAREN: ) LBRACE: { NEWLINE: ID: max ID: m1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: if LPAREN: ( ID: max ID: m2 RPAREN: ) LBRACE: { NEWLINE: ID: j NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: max ID: m2 RPAREN: ) LBRACE: { NEWLINE: ID: max ID: m2 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%lf %d\n" ID: max ID: j RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }