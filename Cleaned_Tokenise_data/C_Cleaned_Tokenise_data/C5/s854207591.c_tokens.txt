ID: include ID: stdio ID: h NEWLINE: ID: define ID: lop LPAREN: ( ID: i ID: n RPAREN: ) ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: long ID: int ID: w ID: h ID: x ID: y SEMI: ; NEWLINE: ID: int ID: m SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%ld %ld %ld %ld" ID: w ID: h ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: if LPAREN: ( ID: x PLUS: + ID: x ID: w ID: y PLUS: + ID: y ID: h RPAREN: ) LBRACE: { ID: m NUMBER: 1 SEMI: ; RBRACE: } NEWLINE: ID: else LBRACE: { ID: m NUMBER: 0 SEMI: ; RBRACE: } NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%lf %d" LPAREN: ( LPAREN: ( ID: double RPAREN: ) ID: w TIMES: * LPAREN: ( ID: double RPAREN: ) ID: h RPAREN: ) DIVIDE: / NUMBER: 2 ID: m RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }