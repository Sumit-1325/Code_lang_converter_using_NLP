ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: include ID: ctype ID: h NEWLINE: ID: define ID: max LPAREN: ( ID: a ID: b RPAREN: ) LPAREN: ( LPAREN: ( LPAREN: ( ID: a RPAREN: ) LPAREN: ( ID: b RPAREN: ) RPAREN: ) LPAREN: ( ID: a RPAREN: ) LPAREN: ( ID: b RPAREN: ) RPAREN: ) COMMENT: /* ２個の値の最大値 */ NEWLINE: ID: define ID: min LPAREN: ( ID: a ID: b RPAREN: ) LPAREN: ( LPAREN: ( LPAREN: ( ID: a RPAREN: ) LPAREN: ( ID: b RPAREN: ) RPAREN: ) LPAREN: ( ID: a RPAREN: ) LPAREN: ( ID: b RPAREN: ) RPAREN: ) COMMENT: /* ２個の値の最小値 */ NEWLINE: ID: define ID: ENTER ID: printf LPAREN: ( STRING: "\n" RPAREN: ) COMMENT: /* 改行プリント */ NEWLINE: COMMENT: /********************************************************************************************************************************/ NEWLINE: COMMENT: /* main *************************************************************************************************************************/ NEWLINE: COMMENT: /********************************************************************************************************************************/ NEWLINE: ID: int ID: DEBUG NUMBER: 1 SEMI: ; COMMENT: /* デバッグプリント 提出時は0 */ NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: float ID: ans NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: yn NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: W ID: H ID: x ID: y SEMI: ; NEWLINE: ID: float ID: Wf ID: Hf ID: xf ID: yf SEMI: ; NEWLINE: ID: float ID: ma ID: mb ID: na ID: nb ID: m ID: n SEMI: ; NEWLINE: ID: float ID: ia ID: ib ID: ja ID: jb ID: i ID: j SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d %d %d" ID: W ID: H ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: COMMENT: //tate NEWLINE: ID: ma ID: W TIMES: * LPAREN: ( ID: H MINUS: - ID: y RPAREN: ) SEMI: ; NEWLINE: ID: mb ID: W TIMES: * ID: y SEMI: ; NEWLINE: ID: m ID: min LPAREN: ( ID: ma ID: mb RPAREN: ) SEMI: ; NEWLINE: COMMENT: //yoko NEWLINE: ID: na LPAREN: ( ID: W MINUS: - ID: x RPAREN: ) TIMES: * ID: H SEMI: ; NEWLINE: ID: nb ID: x TIMES: * ID: H SEMI: ; NEWLINE: ID: n ID: min LPAREN: ( ID: na ID: nb RPAREN: ) SEMI: ; NEWLINE: COMMENT: //naname1 NEWLINE: ID: Wf ID: W SEMI: ; ID: Hf ID: H SEMI: ; ID: xf ID: x SEMI: ; ID: yf ID: y SEMI: ; NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: Wf DIVIDE: / ID: Hf RPAREN: ) LPAREN: ( ID: xf DIVIDE: / ID: yf RPAREN: ) RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%.6f 1\n" ID: Wf TIMES: * ID: Hf DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: COMMENT: //naname2 NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: yf MINUS: - NUMBER: 1 TIMES: * LPAREN: ( ID: Wf DIVIDE: / ID: Hf TIMES: * ID: xf RPAREN: ) PLUS: + ID: Wf RPAREN: ) LPAREN: ( ID: xf MINUS: - NUMBER: 1 TIMES: * LPAREN: ( ID: Hf DIVIDE: / ID: Wf TIMES: * ID: yf RPAREN: ) PLUS: + ID: Hf RPAREN: ) RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%.6f 1\n" ID: Wf TIMES: * ID: Hf DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: ans ID: max LPAREN: ( ID: m ID: n RPAREN: ) SEMI: ; NEWLINE: ID: yn LPAREN: ( ID: m ID: n RPAREN: ) NUMBER: 1 NUMBER: 0 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%.6f %d\n" ID: ans ID: yn RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: