ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: width SEMI: ; NEWLINE: ID: int ID: height SEMI: ; NEWLINE: ID: int ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: width RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: height RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: x RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: y RPAREN: ) SEMI: ; NEWLINE: ID: double ID: max LPAREN: ( ID: double RPAREN: ) ID: width TIMES: * ID: height DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%f" ID: max RPAREN: ) SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: " " RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x TIMES: * NUMBER: 2 ID: width ID: y TIMES: * NUMBER: 2 ID: height RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d" NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d" NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: