ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: double ID: w ID: h ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf%lf%lf%lf" ID: w ID: h ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: COMMENT: // cout<<(w-x)*h<<" "<<(h-y)*w; NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: long ID: long ID: int RPAREN: ) LPAREN: ( LPAREN: ( ID: w MINUS: - ID: x RPAREN: ) TIMES: * ID: h TIMES: * NUMBER: 1000000 RPAREN: ) LPAREN: ( ID: long ID: long ID: int RPAREN: ) LPAREN: ( LPAREN: ( ID: h MINUS: - ID: y RPAREN: ) TIMES: * ID: w TIMES: * NUMBER: 1000000 RPAREN: ) RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%1.6lf 1" LPAREN: ( LPAREN: ( ID: double RPAREN: ) LPAREN: ( ID: w MINUS: - ID: x RPAREN: ) TIMES: * ID: h RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( LPAREN: ( ID: long ID: long ID: int RPAREN: ) LPAREN: ( LPAREN: ( ID: w MINUS: - ID: x RPAREN: ) TIMES: * ID: h TIMES: * NUMBER: 1000000 RPAREN: ) LPAREN: ( ID: long ID: long ID: int RPAREN: ) LPAREN: ( LPAREN: ( ID: h MINUS: - ID: y RPAREN: ) TIMES: * ID: w TIMES: * NUMBER: 1000000 RPAREN: ) RPAREN: ) NEWLINE: COMMENT: // cout<<(w-x)*h; NEWLINE: ID: printf LPAREN: ( STRING: "%.6lf 0" LPAREN: ( ID: w MINUS: - ID: x RPAREN: ) TIMES: * ID: h RPAREN: ) SEMI: ; NEWLINE: ID: else NEWLINE: COMMENT: // cout<<(h-y)*w; NEWLINE: ID: printf LPAREN: ( STRING: "%.6lf 0" LPAREN: ( ID: h MINUS: - ID: y RPAREN: ) TIMES: * ID: w RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: