ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: double ID: w ID: h ID: x ID: y ID: ans SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf" ID: w RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf" ID: h RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf" ID: x RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf" ID: y RPAREN: ) SEMI: ; NEWLINE: ID: ans ID: w TIMES: * ID: h DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%.9lf " ID: ans RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: w DIVIDE: / NUMBER: 2 ID: y ID: h DIVIDE: / NUMBER: 2 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "1" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "0" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }