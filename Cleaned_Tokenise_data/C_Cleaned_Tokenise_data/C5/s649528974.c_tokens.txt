ID: include ID: stdio ID: h NEWLINE: ID: long ID: double ID: w ID: h ID: x ID: y SEMI: ; NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%Lf %Lf %Lf %Lf" ID: w ID: h ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%.6Lf " LPAREN: ( ID: w TIMES: * ID: h RPAREN: ) DIVIDE: / NUMBER: 2 NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: w DIVIDE: / NUMBER: 2 NUMBER: 0 ID: x ID: h DIVIDE: / NUMBER: 2 NUMBER: 0 ID: y RPAREN: ) LBRACE: { ID: puts LPAREN: ( STRING: "1" RPAREN: ) SEMI: ; RBRACE: } NEWLINE: ID: else LBRACE: { ID: puts LPAREN: ( STRING: "0" RPAREN: ) SEMI: ; RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: