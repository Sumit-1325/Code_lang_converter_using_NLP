ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: w ID: h ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d %d %d" ID: w ID: h ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: x ID: w DIVIDE: / NUMBER: 2 ID: y ID: h DIVIDE: / NUMBER: 2 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%f 1\n" LPAREN: ( ID: double RPAREN: ) ID: w TIMES: * LPAREN: ( ID: double RPAREN: ) ID: h DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%f 0\n" LPAREN: ( ID: double RPAREN: ) ID: w TIMES: * LPAREN: ( ID: double RPAREN: ) ID: h DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }