ID: include ID: stdio ID: h NEWLINE: ID: include ID: math ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: W ID: H ID: x ID: y SEMI: ; NEWLINE: ID: double ID: max NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: ans NUMBER: 0 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d%d%d" ID: W ID: H ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: W LPAREN: ( ID: x PLUS: + ID: x RPAREN: ) ID: H LPAREN: ( ID: y PLUS: + ID: y RPAREN: ) RPAREN: ) LBRACE: { NEWLINE: ID: ans NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: DIVIDE: / TIMES: * NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: x NUMBER: 0 ID: y NUMBER: 0 RPAREN: ) LPAREN: ( ID: x NUMBER: 0 ID: y ID: H RPAREN: ) LPAREN: ( ID: x ID: W ID: y NUMBER: 0 RPAREN: ) LPAREN: ( ID: x ID: W ID: y ID: H RPAREN: ) RPAREN: ) LBRACE: { NEWLINE: COMMENT: // max = (W * H) / 2; NEWLINE: ID: ans NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: TIMES: * DIVIDE: / NEWLINE: ID: max LPAREN: ( ID: W TIMES: * ID: H RPAREN: ) DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%f %d" ID: max ID: ans RPAREN: ) SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "\n" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: