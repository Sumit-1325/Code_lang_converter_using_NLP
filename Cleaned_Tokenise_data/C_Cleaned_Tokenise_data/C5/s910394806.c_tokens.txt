ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: double ID: w ID: h SEMI: ; NEWLINE: ID: int ID: x ID: y SEMI: ; NEWLINE: ID: double ID: s NUMBER: 0 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lf" STRING: "%lf" STRING: "%d" STRING: "%d" ID: w ID: h ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: s LPAREN: ( ID: w TIMES: * ID: h RPAREN: ) DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%f" ID: s RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: w ID: x TIMES: * NUMBER: 2 RPAREN: ) LPAREN: ( ID: h ID: y TIMES: * NUMBER: 2 RPAREN: ) RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: " 1\n" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else NEWLINE: LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: " 0\n" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }