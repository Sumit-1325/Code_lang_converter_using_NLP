ID: include ID: stdio ID: h NEWLINE: ID: typedef ID: long ID: long ID: int ID: ll SEMI: ; NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: ll ID: W ID: H ID: x ID: y SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%lld%lld%lld%lld" ID: W ID: H ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: double ID: area SEMI: ; NEWLINE: ID: int ID: ok SEMI: ; NEWLINE: ID: area ID: W TIMES: * ID: H DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: ID: if LPAREN: ( LPAREN: ( ID: x TIMES: * NUMBER: 2 ID: W RPAREN: ) LPAREN: ( ID: y TIMES: * NUMBER: 2 ID: H RPAREN: ) RPAREN: ) LBRACE: { NEWLINE: ID: ok NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: ok NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%lf %d\n" ID: area ID: ok RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }