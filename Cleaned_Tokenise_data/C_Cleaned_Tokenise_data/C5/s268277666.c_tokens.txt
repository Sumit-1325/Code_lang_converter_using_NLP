ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: long ID: W ID: H ID: x ID: y SEMI: ; NEWLINE: ID: int ID: sp SEMI: ; NEWLINE: ID: double ID: dim SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%ld %ld %ld %ld" ID: W ID: H ID: x ID: y RPAREN: ) SEMI: ; NEWLINE: ID: dim LPAREN: ( ID: double RPAREN: ) ID: W TIMES: * ID: H DIVIDE: / NUMBER: 2 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: W ID: H ID: x ID: W DIVIDE: / NUMBER: 2 ID: y ID: H DIVIDE: / NUMBER: 2 RPAREN: ) LBRACE: { NEWLINE: ID: sp NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: sp NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%lf %d" ID: dim ID: sp RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }