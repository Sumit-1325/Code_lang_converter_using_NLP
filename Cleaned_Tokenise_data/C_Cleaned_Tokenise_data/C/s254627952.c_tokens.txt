ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: a SEMI: ; NEWLINE: ID: int ID: b SEMI: ; NEWLINE: ID: int ID: x SEMI: ; NEWLINE: ID: int ID: keta NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 0 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: a ID: b RPAREN: ) SEMI: ; NEWLINE: ID: x ID: a PLUS: + ID: b SEMI: ; NEWLINE: ID: for LPAREN: ( ID: keta NUMBER: 1 SEMI: ; LPAREN: ( ID: x DIVIDE: / NUMBER: 10 RPAREN: ) NUMBER: 0 SEMI: ; ID: keta PLUS: + PLUS: + RPAREN: ) LBRACE: { ID: x ID: x DIVIDE: / NUMBER: 10 SEMI: ; RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: keta RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }