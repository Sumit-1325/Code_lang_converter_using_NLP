ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: a ID: b ID: c ID: digit SEMI: ; NEWLINE: ID: while LPAREN: ( ID: scanf LPAREN: ( STRING: "%d %d" ID: a ID: b RPAREN: ) ID: EOF RPAREN: ) LBRACE: { NEWLINE: ID: digit NUMBER: 0 SEMI: ; NEWLINE: ID: c ID: a PLUS: + ID: b SEMI: ; NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: c DIVIDE: / NUMBER: 10 NUMBER: 0 RPAREN: ) ID: break SEMI: ; NEWLINE: ID: else LBRACE: { NEWLINE: ID: digit PLUS: + PLUS: + SEMI: ; NEWLINE: ID: c DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: digit PLUS: + NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }