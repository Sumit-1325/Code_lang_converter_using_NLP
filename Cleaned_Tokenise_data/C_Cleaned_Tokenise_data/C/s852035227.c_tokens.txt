ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: int ID: a ID: b ID: o ID: j ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: if LPAREN: ( ID: scanf LPAREN: ( STRING: "%d%d" ID: a ID: b RPAREN: ) ID: EOF RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: break SEMI: ; NEWLINE: NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: j NUMBER: 1 SEMI: ; NEWLINE: ID: o ID: a PLUS: + ID: b SEMI: ; NEWLINE: ID: while LPAREN: ( ID: o NUMBER: 10 RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: j PLUS: + PLUS: + SEMI: ; NEWLINE: NEWLINE: ID: o DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: j RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }