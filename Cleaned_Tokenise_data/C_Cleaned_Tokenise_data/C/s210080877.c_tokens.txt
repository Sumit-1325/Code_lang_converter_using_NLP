ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: i ID: num NUMBER: 3 ID: flag NUMBER: 1 ID: keta NUMBER: 0 ID: escape SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d" ID: num NUMBER: 0 ID: num NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: num NUMBER: 2 ID: num NUMBER: 0 PLUS: + ID: num NUMBER: 1 SEMI: ; NEWLINE: NEWLINE: ID: while LPAREN: ( ID: flag RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: num NUMBER: 2 ID: num NUMBER: 2 DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: NEWLINE: ID: keta PLUS: + NUMBER: 1 SEMI: ; NEWLINE: NEWLINE: ID: if LPAREN: ( ID: num NUMBER: 2 NUMBER: 0 RPAREN: ) NEWLINE: ID: flag NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: keta RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }