ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: a ID: b ID: c ID: d ID: i SEMI: ; NEWLINE: ID: int ID: count SEMI: ; NEWLINE: ID: int ID: max_data NUMBER: 200 SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 1 SEMI: ; ID: i ID: max_data SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: a MINUS: - NUMBER: 1 SEMI: ; NEWLINE: ID: b MINUS: - NUMBER: 1 SEMI: ; NEWLINE: ID: count NUMBER: 0 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d" ID: a ID: b RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: if LPAREN: ( ID: a NUMBER: 0 ID: b NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: c ID: a PLUS: + ID: b SEMI: ; NEWLINE: ID: d LPAREN: ( ID: int RPAREN: ) ID: log10 LPAREN: ( LPAREN: ( ID: double RPAREN: ) ID: c RPAREN: ) PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: d RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }