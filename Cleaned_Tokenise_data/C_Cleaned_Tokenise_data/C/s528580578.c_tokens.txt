ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: a ID: b ID: c SEMI: ; NEWLINE: ID: while LPAREN: ( ID: scanf LPAREN: ( STRING: "%d %d" ID: a ID: b RPAREN: ) ID: EOF RPAREN: ) LBRACE: { NEWLINE: ID: c ID: a PLUS: + ID: b SEMI: ; NEWLINE: ID: if LPAREN: ( NUMBER: 0 ID: c ID: c NUMBER: 10 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "1" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( NUMBER: 10 ID: c ID: c NUMBER: 100 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "2" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( NUMBER: 100 ID: c ID: c NUMBER: 1000 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "3" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( NUMBER: 1000 ID: c ID: c NUMBER: 10000 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "4" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( NUMBER: 10000 ID: c ID: c NUMBER: 100000 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "5" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: if LPAREN: ( NUMBER: 100000 ID: c ID: c NUMBER: 1000000 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "6" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "7" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }