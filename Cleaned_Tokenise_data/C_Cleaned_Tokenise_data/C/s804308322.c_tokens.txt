ID: include ID: stdio ID: h NEWLINE: ID: int ID: count LPAREN: ( ID: int ID: num RPAREN: ) SEMI: ; NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: num NUMBER: 2 SEMI: ; NEWLINE: NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d" ID: num ID: num PLUS: + NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: count LPAREN: ( ID: num NUMBER: 0 PLUS: + ID: num NUMBER: 1 RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: RBRACE: } NEWLINE: ID: int ID: count LPAREN: ( ID: int ID: num RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: ans NUMBER: 0 SEMI: ; NEWLINE: NEWLINE: ID: while LPAREN: ( ID: num NUMBER: 0 RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: ans PLUS: + PLUS: + SEMI: ; NEWLINE: ID: num DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: return ID: ans SEMI: ; NEWLINE: RBRACE: }