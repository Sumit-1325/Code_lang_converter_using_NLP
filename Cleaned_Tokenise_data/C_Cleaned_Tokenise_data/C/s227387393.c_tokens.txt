ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: a NUMBER: 20 ID: i NUMBER: 0 ID: n NUMBER: 0 ID: b NUMBER: 1 ID: c NUMBER: 1 SEMI: ; NEWLINE: ID: while LPAREN: ( ID: i NUMBER: 3 RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: b ID: c RPAREN: ) SEMI: ; NEWLINE: ID: a ID: i ID: b PLUS: + ID: c SEMI: ; NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 3 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: n NUMBER: 1 SEMI: ; NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: a ID: i ID: a ID: i DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: a ID: i NUMBER: 1 RPAREN: ) ID: break SEMI: ; NEWLINE: ID: n PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: n RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }