ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: a NUMBER: 200 ID: b NUMBER: 200 ID: i NUMBER: 0 ID: count NUMBER: 0 ID: c ID: count_waru NUMBER: 0 SEMI: ; NEWLINE: ID: while LPAREN: ( LPAREN: ( ID: scanf LPAREN: ( STRING: "%d%d" ID: a ID: i ID: b ID: i RPAREN: ) RPAREN: ) ID: EOF RPAREN: ) LBRACE: { NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: ID: count PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: count SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: c ID: a ID: i PLUS: + ID: b ID: i SEMI: ; NEWLINE: ID: while LPAREN: ( ID: c NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: c DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: count_waru PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: count_waru RPAREN: ) SEMI: ; NEWLINE: ID: count_waru NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }