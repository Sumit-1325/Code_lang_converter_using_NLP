ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: int ID: a ID: b ID: c ID: d ID: n ID: i SEMI: ; NEWLINE: ID: for LPAREN: ( SEMI: ; SEMI: ; RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d" ID: a ID: b RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: c ID: a PLUS: + ID: b SEMI: ; NEWLINE: NEWLINE: ID: d ID: c NUMBER: 10 SEMI: ; NEWLINE: NEWLINE: ID: n ID: c MINUS: - ID: d SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 1000000 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: n NUMBER: 1 RPAREN: ) ID: break SEMI: ; NEWLINE: ID: n ID: n DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: i RPAREN: ) SEMI: ; NEWLINE: NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }