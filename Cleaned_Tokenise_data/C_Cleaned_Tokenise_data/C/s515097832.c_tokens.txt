NEWLINE: ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: a SEMI: ; NEWLINE: ID: int ID: b SEMI: ; NEWLINE: ID: int ID: c NUMBER: 100 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: int ID: j SEMI: ; NEWLINE: ID: int ID: k SEMI: ; NEWLINE: NEWLINE: ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: while LPAREN: ( ID: scanf LPAREN: ( STRING: "%d" ID: a RPAREN: ) ID: EOF RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: b RPAREN: ) SEMI: ; NEWLINE: ID: c ID: i ID: a PLUS: + ID: b SEMI: ; NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: j NUMBER: 0 SEMI: ; ID: j ID: i SEMI: ; ID: j PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: k NUMBER: 1 SEMI: ; NEWLINE: ID: while LPAREN: ( LPAREN: ( ID: c ID: j DIVIDE: / NUMBER: 10 RPAREN: ) NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: c ID: j ID: c ID: j DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: k PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: k RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }