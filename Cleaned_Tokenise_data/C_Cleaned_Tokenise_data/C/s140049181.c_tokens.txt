ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: i ID: n NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: data NUMBER: 400 SEMI: ; NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: scanf LPAREN: ( STRING: "%d %d" ID: data ID: n ID: data ID: n PLUS: + NUMBER: 1 RPAREN: ) ID: EOF RPAREN: ) NEWLINE: ID: break SEMI: ; NEWLINE: ID: n PLUS: + NUMBER: 2 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + NUMBER: 2 RPAREN: ) LBRACE: { NEWLINE: ID: int ID: sum ID: data ID: i PLUS: + ID: data ID: i PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: int ID: digit NUMBER: 0 SEMI: ; NEWLINE: ID: while LPAREN: ( ID: sum NUMBER: 10 RPAREN: ) LBRACE: { NEWLINE: ID: sum DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: digit PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: digit RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 1 SEMI: ; NEWLINE: RBRACE: }