ID: include ID: stdio ID: h NEWLINE: ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: a ID: b ID: c ID: count ID: n SEMI: ; NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a NUMBER: 0 RPAREN: ) ID: break SEMI: ; NEWLINE: ID: n NUMBER: 0 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: a ID: b RPAREN: ) SEMI: ; NEWLINE: ID: c ID: a PLUS: + ID: b SEMI: ; NEWLINE: ID: count NUMBER: 0 SEMI: ; NEWLINE: ID: while LPAREN: ( ID: c NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: c DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: count PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: count RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }