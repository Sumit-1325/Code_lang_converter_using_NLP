ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: i ID: a ID: x NUMBER: 10 ID: b ID: c SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 3 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d%d" ID: a ID: b RPAREN: ) SEMI: ; NEWLINE: ID: x ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: x ID: i ID: a PLUS: + ID: b SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: b NUMBER: 1 SEMI: ; ID: c NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 3 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: while LPAREN: ( NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: x ID: i DIVIDE: / ID: b NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: c PLUS: + PLUS: + SEMI: ; NEWLINE: ID: b TIMES: * NUMBER: 10 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: else ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: c RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }