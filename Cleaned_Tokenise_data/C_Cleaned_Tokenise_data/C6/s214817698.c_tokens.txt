ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: n ID: i ID: j ID: keta NUMBER: 4 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: i NUMBER: 1 SEMI: ; NEWLINE: ID: while LPAREN: ( ID: n NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: keta ID: i ID: n NUMBER: 10 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: keta ID: i NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: keta ID: i NUMBER: 9 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: keta ID: i NUMBER: 9 RPAREN: ) LBRACE: { NEWLINE: ID: keta ID: i NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: n DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: j ID: i MINUS: - NUMBER: 1 SEMI: ; ID: j NUMBER: 0 SEMI: ; ID: j MINUS: - MINUS: - RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d" ID: keta ID: j RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: