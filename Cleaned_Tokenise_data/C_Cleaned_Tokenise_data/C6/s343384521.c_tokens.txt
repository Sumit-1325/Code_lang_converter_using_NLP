ID: include ID: stdio ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: a ID: b ID: c ID: str SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: str RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: str NUMBER: 0 NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: a NUMBER: 9 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: NEWLINE: ID: if LPAREN: ( ID: str NUMBER: 0 NUMBER: 9 RPAREN: ) LBRACE: { NEWLINE: ID: a NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: NEWLINE: ID: a ID: str NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } RBRACE: } NEWLINE: NEWLINE: ID: if LPAREN: ( ID: str NUMBER: 1 NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: b NUMBER: 9 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: NEWLINE: ID: if LPAREN: ( ID: str NUMBER: 1 NUMBER: 9 RPAREN: ) LBRACE: { NEWLINE: ID: b NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: NEWLINE: ID: b ID: str NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } RBRACE: } SEMI: ; NEWLINE: ID: if LPAREN: ( ID: str NUMBER: 2 NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: c NUMBER: 9 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: NEWLINE: ID: if LPAREN: ( ID: str NUMBER: 2 NUMBER: 9 RPAREN: ) LBRACE: { NEWLINE: ID: c NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: NEWLINE: ID: c ID: str NUMBER: 2 SEMI: ; NEWLINE: RBRACE: } RBRACE: } SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%d" NUMBER: 100 TIMES: * ID: a PLUS: + NUMBER: 10 TIMES: * ID: b PLUS: + ID: c RPAREN: ) SEMI: ; NEWLINE: RBRACE: }