ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n NUMBER: 0 ID: a100 NUMBER: 0 ID: a10 NUMBER: 0 ID: a1 NUMBER: 0 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: a100 ID: n DIVIDE: / NUMBER: 100 SEMI: ; NEWLINE: ID: a10 LPAREN: ( ID: n NUMBER: 100 RPAREN: ) DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: a1 ID: n NUMBER: 10 SEMI: ; NEWLINE: NEWLINE: NEWLINE: ID: if LPAREN: ( ID: a100 NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: a100 NUMBER: 9 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: a100 NUMBER: 9 RPAREN: ) LBRACE: { NEWLINE: ID: a100 NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: if LPAREN: ( ID: a10 NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: a10 NUMBER: 9 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: a10 NUMBER: 9 RPAREN: ) LBRACE: { NEWLINE: ID: a10 NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: if LPAREN: ( ID: a1 NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: a1 NUMBER: 9 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: a1 NUMBER: 9 RPAREN: ) LBRACE: { NEWLINE: ID: a1 NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%d%d%d\n" ID: a100 ID: a10 ID: a1 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: