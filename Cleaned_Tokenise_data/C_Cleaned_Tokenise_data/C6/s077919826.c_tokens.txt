ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: int ID: a ID: b ID: c ID: d SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: b ID: a DIVIDE: / NUMBER: 100 SEMI: ; NEWLINE: ID: c LPAREN: ( ID: a MINUS: - ID: b TIMES: * NUMBER: 100 RPAREN: ) DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: d ID: a NUMBER: 10 SEMI: ; NEWLINE: NEWLINE: ID: if LPAREN: ( ID: b NUMBER: 1 RPAREN: ) ID: b NUMBER: 9 SEMI: ; NEWLINE: ID: else ID: b NUMBER: 1 SEMI: ; NEWLINE: NEWLINE: ID: if LPAREN: ( ID: c NUMBER: 1 RPAREN: ) ID: c NUMBER: 9 SEMI: ; NEWLINE: ID: else ID: c NUMBER: 1 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: d NUMBER: 1 RPAREN: ) ID: d NUMBER: 9 SEMI: ; NEWLINE: ID: else ID: d NUMBER: 1 SEMI: ; NEWLINE: NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: b TIMES: * NUMBER: 100 PLUS: + ID: c TIMES: * NUMBER: 10 PLUS: + ID: d RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: