ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N ID: a NUMBER: 3 ID: i SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i NUMBER: 3 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: a ID: i ID: N NUMBER: 10 SEMI: ; NEWLINE: ID: N LPAREN: ( ID: N MINUS: - ID: a ID: i RPAREN: ) DIVIDE: / NUMBER: 10 SEMI: ; NEWLINE: ID: if LPAREN: ( ID: a ID: i NUMBER: 1 RPAREN: ) LBRACE: { ID: a ID: i NUMBER: 9 SEMI: ; RBRACE: } NEWLINE: ID: else LBRACE: { ID: a ID: i NUMBER: 1 SEMI: ; RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d" ID: a NUMBER: 2 TIMES: * NUMBER: 100 PLUS: + ID: a NUMBER: 1 TIMES: * NUMBER: 10 PLUS: + ID: a NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: