ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n ID: count ID: a NUMBER: 1000 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: count NUMBER: 0 SEMI: ; ID: count ID: n SEMI: ; ID: count PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: count RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: count LPAREN: ( ID: n MINUS: - NUMBER: 1 RPAREN: ) SEMI: ; ID: count NUMBER: 0 SEMI: ; ID: count MINUS: - MINUS: - RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d " ID: a ID: count RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "\n" RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }