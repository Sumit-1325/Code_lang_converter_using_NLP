ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: include ID: math ID: h NEWLINE: ID: define ID: MIN LPAREN: ( ID: X ID: Y RPAREN: ) LPAREN: ( LPAREN: ( LPAREN: ( ID: X RPAREN: ) LPAREN: ( ID: Y RPAREN: ) RPAREN: ) LPAREN: ( ID: X RPAREN: ) LPAREN: ( ID: Y RPAREN: ) RPAREN: ) NEWLINE: ID: define ID: MAX LPAREN: ( ID: X ID: Y RPAREN: ) LPAREN: ( LPAREN: ( LPAREN: ( ID: X RPAREN: ) LPAREN: ( ID: Y RPAREN: ) RPAREN: ) LPAREN: ( ID: X RPAREN: ) LPAREN: ( ID: Y RPAREN: ) RPAREN: ) NEWLINE: ID: define ID: ll ID: long ID: long NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: arr NUMBER: 101 ID: a ID: i SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: a SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: arr PLUS: + ID: i RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i ID: a MINUS: - NUMBER: 1 SEMI: ; ID: i NUMBER: 0 SEMI: ; ID: i MINUS: - MINUS: - RPAREN: ) NEWLINE: ID: printf LPAREN: ( STRING: "%d%c" TIMES: * LPAREN: ( ID: arr PLUS: + ID: i RPAREN: ) LPAREN: ( ID: i NUMBER: 0 RPAREN: ) ID: n RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: