ID: include ID: stdlib ID: h NEWLINE: ID: include ID: stdio ID: h NEWLINE: ID: void ID: Constraints LPAREN: ( ID: int ID: n ID: int ID: a RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( LPAREN: ( NUMBER: 0 ID: a ID: i ID: a ID: i NUMBER: 1000 ID: n NUMBER: 100 RPAREN: ) RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "条件を満たす入力をしてください。\n" RPAREN: ) SEMI: ; NEWLINE: ID: exit LPAREN: ( NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: void ID: ScanArray LPAREN: ( ID: int ID: n ID: int ID: a RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: void ID: Chenger LPAREN: ( ID: int ID: n ID: int ID: a RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: tmp SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i LPAREN: ( ID: n DIVIDE: / NUMBER: 2 RPAREN: ) SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: back ID: n MINUS: - NUMBER: 1 MINUS: - ID: i SEMI: ; NEWLINE: ID: tmp ID: a ID: i SEMI: ; NEWLINE: ID: a ID: i ID: a ID: back SEMI: ; NEWLINE: ID: a ID: back ID: tmp SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: void ID: PrintArray LPAREN: ( ID: int ID: n ID: int ID: a RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: i ID: n MINUS: - NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: " " RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "\n" RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( ID: int ID: argc ID: const ID: char TIMES: * ID: argv RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: int ID: a ID: n SEMI: ; NEWLINE: ID: ScanArray LPAREN: ( ID: n ID: a RPAREN: ) SEMI: ; NEWLINE: ID: Chenger LPAREN: ( ID: n ID: a RPAREN: ) SEMI: ; NEWLINE: ID: PrintArray LPAREN: ( ID: n ID: a RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: