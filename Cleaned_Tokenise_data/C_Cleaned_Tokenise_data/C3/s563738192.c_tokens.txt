ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n SEMI: ; NEWLINE: ID: int ID: x NUMBER: 1000 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: int ID: z SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: x ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: z NUMBER: 1 SEMI: ; ID: z ID: n SEMI: ; ID: z PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: z ID: n RPAREN: ) LBRACE: { ID: printf LPAREN: ( STRING: "%d\n" ID: x ID: i MINUS: - ID: z RPAREN: ) SEMI: ; RBRACE: } NEWLINE: ID: else LBRACE: { ID: printf LPAREN: ( STRING: "%d " ID: x ID: i MINUS: - ID: z RPAREN: ) SEMI: ; RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }