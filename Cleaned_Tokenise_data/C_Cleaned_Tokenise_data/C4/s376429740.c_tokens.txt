ID: include ID: stdio ID: h NEWLINE: ID: define ID: SIZE NUMBER: 200000 NEWLINE: ID: typedef ID: struct ID: zip LBRACE: { NEWLINE: ID: int ID: num SEMI: ; NEWLINE: ID: int ID: a SEMI: ; NEWLINE: RBRACE: } ID: zip_t ID: SIZE SEMI: ; NEWLINE: ID: void ID: bubble_sort LPAREN: ( ID: zip_t ID: set ID: int ID: N RPAREN: ) LBRACE: { NEWLINE: ID: zip_t ID: swap SEMI: ; NEWLINE: ID: int ID: i ID: j SEMI: ; NEWLINE: ID: for LPAREN: ( ID: j NUMBER: 0 SEMI: ; ID: j ID: N MINUS: - NUMBER: 1 SEMI: ; ID: j PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N MINUS: - ID: j MINUS: - NUMBER: 1 SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: set ID: i MINUS: - ID: a ID: set ID: i PLUS: + NUMBER: 1 MINUS: - ID: a RPAREN: ) LBRACE: { NEWLINE: TIMES: * ID: swap TIMES: * ID: set ID: i PLUS: + NUMBER: 1 SEMI: ; NEWLINE: TIMES: * ID: set ID: i PLUS: + NUMBER: 1 TIMES: * ID: set ID: i SEMI: ; NEWLINE: TIMES: * ID: set ID: i TIMES: * ID: swap SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N ID: i SEMI: ; NEWLINE: ID: zip_t ID: set ID: SIZE SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: set ID: i MINUS: - ID: a RPAREN: ) SEMI: ; NEWLINE: ID: set ID: i MINUS: - ID: num ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: bubble_sort LPAREN: ( ID: set ID: N RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: set ID: N MINUS: - NUMBER: 1 MINUS: - ID: num ID: i RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: set ID: N MINUS: - NUMBER: 1 MINUS: - ID: a RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: set ID: N MINUS: - NUMBER: 2 MINUS: - ID: a RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }