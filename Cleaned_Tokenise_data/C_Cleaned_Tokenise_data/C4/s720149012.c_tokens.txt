ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: N SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: int ID: a ID: N PLUS: + NUMBER: 1 SEMI: ; NEWLINE: ID: int ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: while LPAREN: ( ID: i ID: N RPAREN: ) NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i PLUS: + PLUS: + RPAREN: ) SEMI: ; NEWLINE: ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: max NUMBER: 1 SEMI: ; NEWLINE: ID: int ID: max_index SEMI: ; NEWLINE: ID: while LPAREN: ( ID: i ID: N RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a ID: i ID: max RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: max ID: a ID: i SEMI: ; NEWLINE: ID: max_index ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: second NUMBER: 1 SEMI: ; NEWLINE: ID: int ID: sec_index SEMI: ; NEWLINE: ID: while LPAREN: ( ID: i ID: N RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i ID: max_index ID: a ID: i ID: second RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: second ID: a ID: i SEMI: ; NEWLINE: ID: sec_index ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: j SEMI: ; NEWLINE: ID: while LPAREN: ( ID: i ID: N RPAREN: ) NEWLINE: LBRACE: { NEWLINE: COMMENT: // printf("%d ", a[i]); NEWLINE: ID: if LPAREN: ( ID: i ID: max_index RPAREN: ) NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: a ID: max_index RPAREN: ) SEMI: ; NEWLINE: ID: else ID: if LPAREN: ( ID: i ID: max_index RPAREN: ) NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: a ID: sec_index RPAREN: ) SEMI: ; NEWLINE: ID: i PLUS: + PLUS: + SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return LPAREN: ( NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: