ID: include ID: stdio ID: h NEWLINE: COMMENT: // max1 >= max2 NEWLINE: ID: int ID: main LPAREN: ( ID: int ID: argc ID: char TIMES: * ID: argv RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n ID: max1 ID: max2 ID: pos1 ID: pos2 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: int ID: a ID: n SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: a NUMBER: 0 ID: a NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: max1 ID: a NUMBER: 0 SEMI: ; NEWLINE: ID: pos1 NUMBER: 0 SEMI: ; NEWLINE: ID: max2 ID: a NUMBER: 1 SEMI: ; NEWLINE: ID: pos2 NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: max1 ID: a NUMBER: 1 SEMI: ; NEWLINE: ID: pos1 NUMBER: 1 SEMI: ; NEWLINE: ID: max2 ID: a NUMBER: 0 SEMI: ; NEWLINE: ID: pos2 NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 2 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: max1 ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: max1 ID: a ID: i SEMI: ; NEWLINE: ID: pos1 ID: i SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: max2 ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: max2 ID: a ID: i SEMI: ; NEWLINE: ID: pos2 ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: pos1 ID: i RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: max1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: max2 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }