ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: int ID: remax LPAREN: ( ID: int TIMES: * ID: a ID: int ID: q ID: int ID: N RPAREN: ) LBRACE: { NEWLINE: ID: int ID: max NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: t NUMBER: 0 SEMI: ; ID: t ID: N SEMI: ; ID: t PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: t ID: q RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a ID: t ID: max RPAREN: ) ID: max ID: a ID: t SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return ID: max SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N NUMBER: 0 ID: i SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: int TIMES: * ID: a SEMI: ; NEWLINE: ID: a ID: calloc LPAREN: ( ID: N ID: sizeof LPAREN: ( ID: int RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: remax LPAREN: ( ID: a ID: i ID: N RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }