ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: long ID: int ID: n SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%ld" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: long ID: int ID: a ID: n ID: r1 NUMBER: 0 ID: r2 NUMBER: 0 ID: i SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%ld" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: a ID: r1 ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: r2 ID: r1 SEMI: ; NEWLINE: ID: r1 ID: i SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: a ID: r2 ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: r2 ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i ID: r1 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%ld\n" ID: a ID: r2 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%ld\n" ID: a ID: r1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }