ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: a ID: j ID: max ID: smax SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a RPAREN: ) SEMI: ; NEWLINE: ID: int ID: b ID: a SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d %d" ID: b NUMBER: 0 ID: b NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: b NUMBER: 0 ID: b NUMBER: 1 RPAREN: ) LBRACE: { ID: max ID: b NUMBER: 0 SEMI: ; NEWLINE: ID: smax ID: b NUMBER: 1 SEMI: ; RBRACE: } NEWLINE: ID: else LBRACE: { ID: max ID: b NUMBER: 1 SEMI: ; NEWLINE: ID: smax ID: b NUMBER: 0 SEMI: ; RBRACE: } NEWLINE: ID: for LPAREN: ( ID: j NUMBER: 2 SEMI: ; ID: j ID: a SEMI: ; PLUS: + PLUS: + ID: j RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: b ID: j RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: b ID: j ID: max RPAREN: ) ID: max ID: b ID: j SEMI: ; NEWLINE: ID: else ID: if LPAREN: ( ID: b ID: j ID: smax RPAREN: ) ID: smax ID: b ID: j SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: j NUMBER: 0 SEMI: ; ID: j ID: a SEMI: ; PLUS: + PLUS: + ID: j RPAREN: ) NEWLINE: LBRACE: { ID: if LPAREN: ( ID: b ID: j ID: max RPAREN: ) ID: printf LPAREN: ( STRING: "%d\n" ID: smax RPAREN: ) SEMI: ; NEWLINE: ID: else ID: printf LPAREN: ( STRING: "%d\n" ID: max RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }