ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: int ID: argc ID: char ID: const TIMES: * ID: argv RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N SEMI: ; NEWLINE: ID: int ID: A NUMBER: 200000 SEMI: ; NEWLINE: ID: int ID: m NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: m1 SEMI: ; NEWLINE: ID: int ID: m2 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d\n" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d\n" ID: A ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: m ID: A ID: i RPAREN: ) LBRACE: { NEWLINE: ID: m ID: A ID: i SEMI: ; NEWLINE: ID: m1 ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: m NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i ID: m1 RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: m ID: A ID: i RPAREN: ) LBRACE: { NEWLINE: ID: m2 ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i ID: m1 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: A ID: m1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: A ID: m2 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: