ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n SEMI: ; NEWLINE: ID: int ID: a NUMBER: 200000 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: int ID: k SEMI: ; NEWLINE: ID: int ID: max ID: second_max SEMI: ; NEWLINE: NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: max ID: a NUMBER: 0 SEMI: ; NEWLINE: ID: second_max ID: a NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: max ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: second_max ID: max SEMI: ; NEWLINE: ID: max ID: a ID: i SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: second_max ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: second_max ID: a ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: max ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: second_max RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: max RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }