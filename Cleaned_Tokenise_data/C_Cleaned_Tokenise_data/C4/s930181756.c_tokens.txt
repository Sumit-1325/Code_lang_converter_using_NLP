ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: i ID: j ID: k SEMI: ; NEWLINE: ID: int ID: N ID: A NUMBER: 210000 SEMI: ; NEWLINE: ID: int ID: maxl NUMBER: 210000 ID: maxr NUMBER: 210000 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: A ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: maxl NUMBER: 0 ID: A NUMBER: 0 SEMI: ; NEWLINE: ID: maxr ID: N MINUS: - NUMBER: 1 ID: A ID: N MINUS: - NUMBER: 1 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 1 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: maxl ID: i MINUS: - NUMBER: 1 ID: A ID: i RPAREN: ) LBRACE: { NEWLINE: ID: maxl ID: i ID: maxl ID: i MINUS: - NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: maxl ID: i ID: A ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i ID: N MINUS: - NUMBER: 2 SEMI: ; ID: i NUMBER: 0 SEMI: ; ID: i MINUS: - MINUS: - RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: maxr ID: i PLUS: + NUMBER: 1 ID: A ID: i RPAREN: ) LBRACE: { NEWLINE: ID: maxr ID: i ID: maxr ID: i PLUS: + NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: maxr ID: i ID: A ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: maxr ID: i PLUS: + NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: i ID: N MINUS: - NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: maxl ID: N MINUS: - NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: if LPAREN: ( ID: maxl ID: i MINUS: - NUMBER: 1 ID: maxr ID: i PLUS: + NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: maxl ID: i MINUS: - NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: maxr ID: i PLUS: + NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }