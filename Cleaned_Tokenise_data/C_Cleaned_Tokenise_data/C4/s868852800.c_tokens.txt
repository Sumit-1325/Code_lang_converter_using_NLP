COMMENT: /* 134c */ NEWLINE: ID: include ID: stdio ID: h NEWLINE: ID: include ID: math ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: n ID: i ID: a NUMBER: 200000 ID: j ID: m ID: c SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: for LPAREN: ( ID: j ID: i PLUS: + NUMBER: 1 SEMI: ; ID: j ID: n SEMI: ; ID: j PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a ID: i ID: a ID: j RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a NUMBER: 0 ID: a ID: j RPAREN: ) LBRACE: { NEWLINE: ID: c ID: j SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: m ID: a ID: i SEMI: ; NEWLINE: ID: a ID: i ID: a ID: j SEMI: ; NEWLINE: ID: a ID: j ID: m SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: i ID: c RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: a NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: i ID: c RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: a NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: