ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: int ID: a NUMBER: 200000 SEMI: ; NEWLINE: ID: int ID: i SEMI: ; NEWLINE: ID: int ID: max1 NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: max2 NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: NEWLINE: ID: if LPAREN: ( ID: max1 ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: max2 ID: max1 SEMI: ; NEWLINE: ID: max1 ID: a ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: else ID: if LPAREN: ( ID: max2 ID: a ID: i ID: a ID: i ID: max1 RPAREN: ) LBRACE: { NEWLINE: ID: max2 ID: a ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a ID: i ID: max1 RPAREN: ) NEWLINE: ID: a ID: i ID: max2 SEMI: ; NEWLINE: ID: else NEWLINE: ID: a ID: i ID: max1 SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }