ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: include ID: string ID: h NEWLINE: ID: int ID: a NUMBER: 200005 SEMI: ; NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N ID: i ID: num ID: first ID: second SEMI: ; NEWLINE: ID: char ID: str NUMBER: 100 TIMES: * ID: p SEMI: ; NEWLINE: NEWLINE: ID: fgets LPAREN: ( ID: str ID: sizeof LPAREN: ( ID: str RPAREN: ) ID: stdin RPAREN: ) SEMI: ; NEWLINE: ID: N ID: atoi LPAREN: ( ID: str RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 ID: first NUMBER: 0 ID: second NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: fgets LPAREN: ( ID: str ID: sizeof LPAREN: ( ID: str RPAREN: ) ID: stdin RPAREN: ) SEMI: ; NEWLINE: ID: a ID: i ID: atoi LPAREN: ( ID: str RPAREN: ) SEMI: ; NEWLINE: ID: if LPAREN: ( ID: first ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: second ID: first ID: first ID: a ID: i SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: second ID: a ID: i RPAREN: ) LBRACE: { NEWLINE: ID: second ID: a ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: a ID: i ID: first RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: second RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: first RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: NEWLINE: RBRACE: }