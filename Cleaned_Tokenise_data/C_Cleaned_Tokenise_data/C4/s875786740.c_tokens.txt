ID: include ID: stdio ID: h NEWLINE: ID: void ID: sort1 LPAREN: ( ID: int ID: data ID: int ID: n RPAREN: ) LBRACE: { NEWLINE: ID: int ID: i ID: j ID: x ID: y SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 1 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: x ID: data ID: i SEMI: ; NEWLINE: ID: for LPAREN: ( ID: j ID: i MINUS: - NUMBER: 1 SEMI: ; ID: j NUMBER: 0 SEMI: ; ID: j MINUS: - MINUS: - RPAREN: ) LBRACE: { NEWLINE: ID: y ID: data ID: j SEMI: ; NEWLINE: ID: if LPAREN: ( ID: y ID: x RPAREN: ) NEWLINE: ID: data ID: j PLUS: + NUMBER: 1 ID: y SEMI: ; NEWLINE: ID: else LBRACE: { NEWLINE: ID: data ID: j PLUS: + NUMBER: 1 ID: x SEMI: ; NEWLINE: ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: RBRACE: } NEWLINE: ID: if LPAREN: ( ID: j MINUS: - NUMBER: 1 RPAREN: ) ID: data NUMBER: 0 ID: x SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: int ID: a ID: n ID: b ID: n SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: ID: b ID: i ID: a ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: sort1 LPAREN: ( ID: b ID: n RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: int ID: max NUMBER: 0 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: j NUMBER: 0 SEMI: ; ID: j ID: n SEMI: ; ID: j PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: j ID: i RPAREN: ) ID: continue SEMI: ; NEWLINE: ID: if LPAREN: ( ID: max ID: a ID: j RPAREN: ) LBRACE: { NEWLINE: ID: max ID: a ID: j SEMI: ; NEWLINE: ID: if LPAREN: ( ID: max ID: b ID: n MINUS: - NUMBER: 1 RPAREN: ) ID: break SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: max RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: