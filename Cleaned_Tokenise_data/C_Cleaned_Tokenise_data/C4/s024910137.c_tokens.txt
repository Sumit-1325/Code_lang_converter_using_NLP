COMMENT: //atcoder clange NEWLINE: ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; COMMENT: //数値の取得 NEWLINE: ID: int ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: A ID: N SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: A ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: save NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: max1 NUMBER: 0 SEMI: ; NEWLINE: NEWLINE: DIVIDE: / TIMES: * NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: save ID: A ID: i SEMI: ; NEWLINE: ID: A ID: i NUMBER: 0 SEMI: ; NEWLINE: ID: nummax ID: max LPAREN: ( ID: A ID: N RPAREN: ) SEMI: ; NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: nummax RPAREN: ) SEMI: ; NEWLINE: ID: A ID: i ID: save SEMI: ; NEWLINE: RBRACE: } NEWLINE: TIMES: * DIVIDE: / NEWLINE: ID: int ID: no_1 NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: no_2 NUMBER: 0 SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: no_1 ID: A ID: i RPAREN: ) LBRACE: { NEWLINE: ID: no_2 ID: no_1 SEMI: ; NEWLINE: ID: no_1 ID: A ID: i SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: no_2 ID: A ID: i RPAREN: ) LBRACE: { NEWLINE: ID: no_2 ID: A ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: A ID: i ID: no_1 RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: no_2 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: no_1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: NEWLINE: