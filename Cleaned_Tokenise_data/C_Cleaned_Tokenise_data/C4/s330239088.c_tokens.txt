ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: i ID: N ID: A NUMBER: 200001 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 1 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) ID: scanf LPAREN: ( STRING: "%d" LPAREN: ( ID: A ID: i RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: int ID: max NUMBER: 2 LBRACE: { RBRACE: } SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 1 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: A ID: i ID: max NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: max NUMBER: 1 ID: max NUMBER: 0 SEMI: ; NEWLINE: ID: max NUMBER: 0 ID: A ID: i SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: A ID: i ID: max NUMBER: 1 RPAREN: ) ID: max NUMBER: 1 ID: A ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 1 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: A ID: i ID: max NUMBER: 0 RPAREN: ) ID: printf LPAREN: ( STRING: "%d\n" ID: max NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: ID: else ID: printf LPAREN: ( STRING: "%d\n" ID: max NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: fflush LPAREN: ( ID: stdout RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: }