ID: include ID: stdio ID: h NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: N SEMI: ; NEWLINE: ID: int ID: max NUMBER: 2 SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: int ID: A ID: N SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: A ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: max NUMBER: 0 NUMBER: 1 SEMI: ; NEWLINE: ID: max NUMBER: 1 NUMBER: 1 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: A ID: i ID: max NUMBER: 0 RPAREN: ) LBRACE: { NEWLINE: ID: max NUMBER: 1 ID: max NUMBER: 0 SEMI: ; NEWLINE: ID: max NUMBER: 0 ID: A ID: i SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( ID: A ID: i ID: max NUMBER: 1 RPAREN: ) LBRACE: { NEWLINE: ID: max NUMBER: 1 ID: A ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: max NUMBER: 0 ID: A ID: i RPAREN: ) ID: printf LPAREN: ( STRING: "%d\n" ID: max NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: ID: else ID: printf LPAREN: ( STRING: "%d\n" ID: max NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: