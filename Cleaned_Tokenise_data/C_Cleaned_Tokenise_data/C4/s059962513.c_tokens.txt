ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: int ID: int_compar LPAREN: ( ID: const ID: int TIMES: * ID: a ID: const ID: int TIMES: * ID: b RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: if LPAREN: ( TIMES: * ID: a TIMES: * ID: b RPAREN: ) LBRACE: { NEWLINE: ID: return MINUS: - NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( TIMES: * ID: a TIMES: * ID: b RPAREN: ) LBRACE: { NEWLINE: ID: return NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) NEWLINE: LBRACE: { NEWLINE: ID: int ID: n SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: int TIMES: * ID: arr ID: calloc LPAREN: ( ID: n ID: sizeof LPAREN: ( ID: int RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: arr ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int TIMES: * ID: sorted ID: calloc LPAREN: ( ID: n ID: sizeof LPAREN: ( ID: int RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: sorted ID: i ID: arr ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: qsort LPAREN: ( ID: sorted ID: n ID: sizeof LPAREN: ( ID: int RPAREN: ) LPAREN: ( ID: int LPAREN: ( TIMES: * RPAREN: ) LPAREN: ( ID: const ID: void TIMES: * ID: const ID: void TIMES: * RPAREN: ) RPAREN: ) LPAREN: ( TIMES: * ID: int_compar RPAREN: ) RPAREN: ) SEMI: ; NEWLINE: ID: int ID: max ID: sorted NUMBER: 0 SEMI: ; NEWLINE: ID: int ID: second_max ID: sorted NUMBER: 1 SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: arr ID: i ID: max RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: second_max RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: max RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: