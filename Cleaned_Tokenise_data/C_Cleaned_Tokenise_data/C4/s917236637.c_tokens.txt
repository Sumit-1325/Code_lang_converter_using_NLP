ID: include ID: stdio ID: h NEWLINE: ID: int ID: compare_long LPAREN: ( ID: const ID: void TIMES: * ID: a ID: const ID: void TIMES: * ID: b RPAREN: ) LBRACE: { NEWLINE: ID: long TIMES: * ID: x LPAREN: ( ID: long TIMES: * RPAREN: ) ID: a SEMI: ; NEWLINE: ID: long TIMES: * ID: y LPAREN: ( ID: long TIMES: * RPAREN: ) ID: b SEMI: ; NEWLINE: ID: if LPAREN: ( TIMES: * ID: x TIMES: * ID: y RPAREN: ) LBRACE: { NEWLINE: ID: return MINUS: - NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else ID: if LPAREN: ( TIMES: * ID: x TIMES: * ID: y RPAREN: ) LBRACE: { NEWLINE: ID: return NUMBER: 1 SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( RPAREN: ) LBRACE: { NEWLINE: ID: long ID: N SEMI: ; NEWLINE: ID: long TIMES: * ID: A TIMES: * ID: cpy_A SEMI: ; NEWLINE: ID: long ID: i SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%ld" ID: N RPAREN: ) SEMI: ; NEWLINE: ID: A LPAREN: ( ID: long TIMES: * RPAREN: ) ID: malloc LPAREN: ( ID: sizeof LPAREN: ( ID: long RPAREN: ) TIMES: * ID: N RPAREN: ) SEMI: ; NEWLINE: ID: cpy_A LPAREN: ( ID: long TIMES: * RPAREN: ) ID: malloc LPAREN: ( ID: sizeof LPAREN: ( ID: long RPAREN: ) TIMES: * ID: N RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: scanf LPAREN: ( STRING: "%ld" ID: A ID: i RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: memcpy LPAREN: ( ID: cpy_A ID: A ID: sizeof LPAREN: ( ID: long RPAREN: ) TIMES: * ID: N RPAREN: ) SEMI: ; NEWLINE: ID: qsort LPAREN: ( ID: A ID: N ID: sizeof LPAREN: ( ID: A NUMBER: 0 RPAREN: ) ID: compare_long RPAREN: ) SEMI: ; NEWLINE: NEWLINE: ID: for LPAREN: ( ID: i NUMBER: 0 SEMI: ; ID: i ID: N SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: if LPAREN: ( ID: A NUMBER: 0 ID: cpy_A ID: i RPAREN: ) LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%ld\n" ID: A NUMBER: 1 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } ID: else LBRACE: { NEWLINE: ID: printf LPAREN: ( STRING: "%ld\n" ID: A NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: RBRACE: } NEWLINE: RBRACE: } NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: