ID: include ID: stdio ID: h NEWLINE: ID: include ID: stdlib ID: h NEWLINE: ID: int ID: cmp LPAREN: ( ID: const ID: void TIMES: * ID: a ID: const ID: void TIMES: * ID: b RPAREN: ) LBRACE: { NEWLINE: ID: return TIMES: * TIMES: * LPAREN: ( ID: int TIMES: * TIMES: * RPAREN: ) ID: b MINUS: - TIMES: * TIMES: * LPAREN: ( ID: int TIMES: * TIMES: * RPAREN: ) ID: a SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: int ID: main LPAREN: ( ID: void RPAREN: ) LBRACE: { NEWLINE: ID: int ID: n TIMES: * TIMES: * ID: a SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: n RPAREN: ) SEMI: ; NEWLINE: ID: a ID: malloc LPAREN: ( ID: sizeof LPAREN: ( ID: int TIMES: * RPAREN: ) TIMES: * ID: n RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) LBRACE: { NEWLINE: ID: a ID: i ID: malloc LPAREN: ( ID: sizeof LPAREN: ( ID: int RPAREN: ) TIMES: * NUMBER: 2 RPAREN: ) SEMI: ; NEWLINE: ID: scanf LPAREN: ( STRING: "%d" ID: a ID: i RPAREN: ) SEMI: ; NEWLINE: ID: a ID: i NUMBER: 1 ID: i SEMI: ; NEWLINE: RBRACE: } NEWLINE: ID: qsort LPAREN: ( ID: a ID: n ID: sizeof LPAREN: ( ID: int TIMES: * RPAREN: ) ID: cmp RPAREN: ) SEMI: ; NEWLINE: ID: for LPAREN: ( ID: int ID: i NUMBER: 0 SEMI: ; ID: i ID: n SEMI: ; ID: i PLUS: + PLUS: + RPAREN: ) NEWLINE: ID: printf LPAREN: ( STRING: "%d\n" ID: a NUMBER: 0 NUMBER: 1 ID: i ID: a NUMBER: 1 NUMBER: 0 ID: a NUMBER: 0 NUMBER: 0 RPAREN: ) SEMI: ; NEWLINE: ID: return NUMBER: 0 SEMI: ; NEWLINE: RBRACE: } NEWLINE: