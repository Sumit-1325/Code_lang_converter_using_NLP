# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <bits/stdc++.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc)  (Token.Text.Whitespace) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) using (Token.Keyword)   (Token.Text.Whitespace) int64 (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) long (Token.Keyword.Type)   (Token.Text.Whitespace) long (Token.Keyword.Type) ; (Token.Punctuation)  (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) mod (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) 998244353 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) int64 (Token.Name)   (Token.Text.Whitespace) infll (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) ( (Token.Punctuation) 1L (Token.Literal.Number.Float) L (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) 60 (Token.Literal.Number.Integer) ) (Token.Punctuation)   (Token.Text.Whitespace) - (Token.Operator)   (Token.Text.Whitespace) 1 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) inf (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) ( (Token.Punctuation) 1 (Token.Literal.Number.Integer)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) 30 (Token.Literal.Number.Integer) ) (Token.Punctuation)   (Token.Text.Whitespace) - (Token.Operator)   (Token.Text.Whitespace) 1 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) struct (Token.Keyword)   (Token.Text.Whitespace) IoSetup (Token.Name.Class)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) IoSetup (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cin (Token.Name) . (Token.Punctuation) tie (Token.Name) ( (Token.Punctuation) nullptr (Token.Keyword) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) ios (Token.Name) : (Token.Operator) : (Token.Operator) sync_with_stdio (Token.Name) ( (Token.Punctuation) false (Token.Name.Builtin) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) fixed (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) setprecision (Token.Name) ( (Token.Punctuation) 10 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cerr (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) fixed (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) setprecision (Token.Name) ( (Token.Punctuation) 10 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)   (Token.Text.Whitespace) iosetup (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T1 (Token.Name.Class) , (Token.Punctuation)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T2 (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) ostream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) operator (Token.Keyword) < (Token.Operator) < (Token.Operator) ( (Token.Punctuation) ostream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) os (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) pair (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T1 (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) T2 (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) & (Token.Operator) p (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) os (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) p (Token.Name) . (Token.Punctuation) first (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) " (Token.Literal.String)   (Token.Literal.String) " (Token.Literal.String)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) p (Token.Name) . (Token.Punctuation) second (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) os (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T1 (Token.Name.Class) , (Token.Punctuation)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T2 (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) istream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) operator (Token.Keyword) > (Token.Operator) > (Token.Operator) ( (Token.Punctuation) istream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) is (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) pair (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T1 (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) T2 (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) & (Token.Operator) p (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) is (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) p (Token.Name) . (Token.Punctuation) first (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) p (Token.Name) . (Token.Punctuation) second (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) is (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) ostream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) operator (Token.Keyword) < (Token.Operator) < (Token.Operator) ( (Token.Punctuation) ostream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) os (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) & (Token.Operator) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) for (Token.Keyword) ( (Token.Punctuation) int (Token.Keyword.Type)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) < (Token.Operator)   (Token.Text.Whitespace) ( (Token.Punctuation) int (Token.Keyword.Type) ) (Token.Punctuation)   (Token.Text.Whitespace) v (Token.Name) . (Token.Punctuation) size (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name) + (Token.Operator) + (Token.Operator) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) os (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) v (Token.Name) [ (Token.Punctuation) i (Token.Name) ] (Token.Punctuation)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) ( (Token.Punctuation) i (Token.Name)   (Token.Text.Whitespace) + (Token.Operator)   (Token.Text.Whitespace) 1 (Token.Literal.Number.Integer)   (Token.Text.Whitespace) ! (Token.Operator) = (Token.Operator)   (Token.Text.Whitespace) v (Token.Name) . (Token.Punctuation) size (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) ? (Token.Operator)   (Token.Text.Whitespace) " (Token.Literal.String)   (Token.Literal.String) " (Token.Literal.String)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) " (Token.Literal.String) " (Token.Literal.String) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) os (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) istream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) operator (Token.Keyword) > (Token.Operator) > (Token.Operator) ( (Token.Punctuation) istream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) is (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) & (Token.Operator) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) for (Token.Keyword) ( (Token.Punctuation) T (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) in (Token.Name)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) is (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) in (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) is (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T1 (Token.Name.Class) , (Token.Punctuation)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T2 (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) inline (Token.Keyword.Reserved)   (Token.Text.Whitespace) bool (Token.Keyword.Type)   (Token.Text.Whitespace) chmax (Token.Name) ( (Token.Punctuation) T1 (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) a (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) T2 (Token.Name)   (Token.Text.Whitespace) b (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)   (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) a (Token.Name)   (Token.Text.Whitespace) < (Token.Operator)   (Token.Text.Whitespace) b (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) & (Token.Operator)   (Token.Text.Whitespace) ( (Token.Punctuation) a (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) b (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) true (Token.Name.Builtin) ) (Token.Punctuation) ; (Token.Punctuation)   (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T1 (Token.Name.Class) , (Token.Punctuation)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T2 (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) inline (Token.Keyword.Reserved)   (Token.Text.Whitespace) bool (Token.Keyword.Type)   (Token.Text.Whitespace) chmin (Token.Name) ( (Token.Punctuation) T1 (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) a (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) T2 (Token.Name)   (Token.Text.Whitespace) b (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)   (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) a (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) b (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) & (Token.Operator)   (Token.Text.Whitespace) ( (Token.Punctuation) a (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) b (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) true (Token.Name.Builtin) ) (Token.Punctuation) ; (Token.Punctuation)   (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) int64 (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) make_v (Token.Name) ( (Token.Punctuation) size_t (Token.Keyword.Type)   (Token.Text.Whitespace) a (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) ( (Token.Punctuation) a (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class) , (Token.Punctuation)   (Token.Text.Whitespace) typename (Token.Keyword) . (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation)   (Token.Text.Whitespace) Ts (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) auto (Token.Keyword)   (Token.Text.Whitespace) make_v (Token.Name) ( (Token.Punctuation) size_t (Token.Keyword.Type)   (Token.Text.Whitespace) a (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) Ts (Token.Name) . (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation)   (Token.Text.Whitespace) ts (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) decltype (Token.Keyword) ( (Token.Punctuation) make_v (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) ( (Token.Punctuation) ts (Token.Name) . (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) > (Token.Operator) ( (Token.Punctuation) a (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) make_v (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) ( (Token.Punctuation) ts (Token.Name) . (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class) , (Token.Punctuation)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) V (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) enable_if (Token.Name.Class) < (Token.Operator)   (Token.Text.Whitespace) is_class (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) : (Token.Operator) : (Token.Operator) value (Token.Name)   (Token.Text.Whitespace) = (Token.Operator) = (Token.Operator)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer)   (Token.Text.Whitespace) > (Token.Operator) : (Token.Operator) : (Token.Operator) type (Token.Name)   (Token.Text.Whitespace) fill_v (Token.Name) ( (Token.Punctuation) T (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) t (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) V (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) t (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) v (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class) , (Token.Punctuation)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) V (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) enable_if (Token.Name.Class) < (Token.Operator)   (Token.Text.Whitespace) is_class (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) : (Token.Operator) : (Token.Operator) value (Token.Name)   (Token.Text.Whitespace) ! (Token.Operator) = (Token.Operator)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer)   (Token.Text.Whitespace) > (Token.Operator) : (Token.Operator) : (Token.Operator) type (Token.Name)   (Token.Text.Whitespace) fill_v (Token.Name) ( (Token.Punctuation) T (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) t (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) V (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) for (Token.Keyword) ( (Token.Punctuation) auto (Token.Keyword)   (Token.Text.Whitespace) & (Token.Operator) e (Token.Name)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) t (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) fill_v (Token.Name) ( (Token.Punctuation) e (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) v (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) F (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) struct (Token.Keyword)   (Token.Text.Whitespace) FixPoint (Token.Name.Class)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) F (Token.Name)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) FixPoint (Token.Name) ( (Token.Punctuation) F (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) & (Token.Operator) f (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) F (Token.Name) ( (Token.Punctuation) forward (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) F (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) ( (Token.Punctuation) f (Token.Name) ) (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)    (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword) . (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation)   (Token.Text.Whitespace) Args (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace)    (Token.Text.Whitespace) decltype (Token.Keyword) ( (Token.Punctuation) auto (Token.Keyword) ) (Token.Punctuation)   (Token.Text.Whitespace) operator (Token.Keyword) ( (Token.Punctuation) ) (Token.Punctuation) ( (Token.Punctuation) Args (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) & (Token.Operator) . (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation)   (Token.Text.Whitespace) args (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) F (Token.Name) : (Token.Operator) : (Token.Operator) operator (Token.Keyword) ( (Token.Punctuation) ) (Token.Punctuation) ( (Token.Punctuation) * (Token.Operator) this (Token.Keyword) , (Token.Punctuation)   (Token.Text.Whitespace) forward (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) Args (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) ( (Token.Punctuation) args (Token.Name) ) (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation) . (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator)   (Token.Text.Whitespace) typename (Token.Keyword)   (Token.Text.Whitespace) F (Token.Name.Class)   (Token.Text.Whitespace) > (Token.Operator)  (Token.Text.Whitespace) inline (Token.Keyword.Reserved)   (Token.Text.Whitespace) decltype (Token.Keyword) ( (Token.Punctuation) auto (Token.Keyword) ) (Token.Punctuation)   (Token.Text.Whitespace) MFP (Token.Name) ( (Token.Punctuation) F (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) & (Token.Operator) f (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) FixPoint (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) F (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) { (Token.Punctuation) forward (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) F (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) ( (Token.Punctuation) f (Token.Name) ) (Token.Punctuation) } (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) N (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cin (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) N (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) A (Token.Name) ( (Token.Punctuation) N (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cin (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) A (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator)   (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) mx (Token.Name) ( (Token.Punctuation) A (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) sort (Token.Name) ( (Token.Punctuation) mx (Token.Name) . (Token.Punctuation) rbegin (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) , (Token.Punctuation)   (Token.Text.Whitespace) mx (Token.Name) . (Token.Punctuation) rend (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) for (Token.Keyword) ( (Token.Punctuation) int (Token.Keyword.Type)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) < (Token.Operator)   (Token.Text.Whitespace) N (Token.Name) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name) + (Token.Operator) + (Token.Operator) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) mx (Token.Name) [ (Token.Punctuation) mx (Token.Name) [ (Token.Punctuation) 0 (Token.Literal.Number.Integer) ] (Token.Punctuation)   (Token.Text.Whitespace) = (Token.Operator) = (Token.Operator)   (Token.Text.Whitespace) A (Token.Name) [ (Token.Punctuation) i (Token.Name) ] (Token.Punctuation) ] (Token.Punctuation)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)