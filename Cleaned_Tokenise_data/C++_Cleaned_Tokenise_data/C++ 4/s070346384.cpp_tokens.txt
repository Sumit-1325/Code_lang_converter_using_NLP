# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <bits/stdc++.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace) # (Token.Comment.Preproc) define rep(i, n) for (int i = 0; i < (int)(n); i++) (Token.Comment.Preproc)  (Token.Comment.Preproc)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cin (Token.Name) . (Token.Punctuation) tie (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) ios (Token.Name) : (Token.Operator) : (Token.Operator) sync_with_stdio (Token.Name) ( (Token.Punctuation) false (Token.Name.Builtin) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)   (Token.Text.Whitespace) cin (Token.Name) > (Token.Operator) > (Token.Operator) n (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator) int (Token.Keyword.Type) > (Token.Operator)   (Token.Text.Whitespace) A (Token.Name) ( (Token.Punctuation) n (Token.Name) , (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) , (Token.Punctuation) B (Token.Name) ( (Token.Punctuation) n (Token.Name) , (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) rep (Token.Name) ( (Token.Punctuation) i (Token.Name) , (Token.Punctuation) n (Token.Name) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cin (Token.Name) > (Token.Operator) > (Token.Operator) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) i (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) B (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) i (Token.Name) ) (Token.Punctuation) = (Token.Operator) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) i (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) sort (Token.Name) ( (Token.Punctuation) B (Token.Name) . (Token.Punctuation) begin (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) , (Token.Punctuation) B (Token.Name) . (Token.Punctuation) end (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) reverse (Token.Name) ( (Token.Punctuation) B (Token.Name) . (Token.Punctuation) begin (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) , (Token.Punctuation) B (Token.Name) . (Token.Punctuation) end (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) MAX (Token.Name) = (Token.Operator) B (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) B (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) ! (Token.Operator) = (Token.Operator) B (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) rep (Token.Name) ( (Token.Punctuation) i (Token.Name) , (Token.Punctuation) n (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) ( (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) i (Token.Name) ) (Token.Punctuation) = (Token.Operator) = (Token.Operator) MAX (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) ? (Token.Operator) cout (Token.Name) < (Token.Operator) < (Token.Operator) B (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation) < (Token.Operator) < (Token.Operator) endl (Token.Name)   (Token.Text.Whitespace) : (Token.Operator) cout (Token.Name) < (Token.Operator) < (Token.Operator) MAX (Token.Name) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation) else (Token.Keyword)   (Token.Text.Whitespace) rep (Token.Name) ( (Token.Punctuation) i (Token.Name) , (Token.Punctuation) n (Token.Name) ) (Token.Punctuation) cout (Token.Name) < (Token.Operator) < (Token.Operator) MAX (Token.Name) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)