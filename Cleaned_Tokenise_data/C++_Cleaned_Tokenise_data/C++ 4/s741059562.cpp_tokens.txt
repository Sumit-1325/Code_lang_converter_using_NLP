# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <bits/stdc++.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc)  (Token.Text.Whitespace) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) typedef (Token.Keyword)   (Token.Text.Whitespace) unsigned (Token.Keyword.Type)   (Token.Text.Whitespace) long (Token.Keyword.Type)   (Token.Text.Whitespace) long (Token.Keyword.Type)   (Token.Text.Whitespace) ll (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation)  (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)     (Token.Text.Whitespace) n (Token.Name)   (Token.Text.Whitespace) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cin (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) n (Token.Name)   (Token.Text.Whitespace) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) a (Token.Name) [ (Token.Punctuation) n (Token.Name) ] (Token.Punctuation)   (Token.Text.Whitespace) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)      (Token.Text.Whitespace) for (Token.Keyword) ( (Token.Punctuation) int (Token.Keyword.Type)   (Token.Text.Whitespace) i (Token.Name) = (Token.Operator) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation) i (Token.Name) < (Token.Operator) n (Token.Name) ; (Token.Punctuation) i (Token.Name) + (Token.Operator) + (Token.Operator) ) (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) cin (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) a (Token.Name) [ (Token.Punctuation) i (Token.Name) ] (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type) * (Token.Operator)   (Token.Text.Whitespace) m (Token.Name) = (Token.Operator) max_element (Token.Name) ( (Token.Punctuation) a (Token.Name) , (Token.Punctuation) a (Token.Name) + (Token.Operator) n (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) a1 (Token.Name) = (Token.Operator) * (Token.Operator) m (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) * (Token.Operator) m (Token.Name) = (Token.Operator) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type) * (Token.Operator)   (Token.Text.Whitespace) m1 (Token.Name) = (Token.Operator) max_element (Token.Name) ( (Token.Punctuation) a (Token.Name) , (Token.Punctuation) a (Token.Name) + (Token.Operator) n (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) a2 (Token.Name) = (Token.Operator) * (Token.Operator) m1 (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) * (Token.Operator) m (Token.Name) = (Token.Operator) a1 (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) for (Token.Keyword) ( (Token.Punctuation) int (Token.Keyword.Type)   (Token.Text.Whitespace) i (Token.Name) = (Token.Operator) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation) i (Token.Name) < (Token.Operator) n (Token.Name) ; (Token.Punctuation) i (Token.Name) + (Token.Operator) + (Token.Operator) ) (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) if (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) a (Token.Name) [ (Token.Punctuation) i (Token.Name) ] (Token.Punctuation) < (Token.Operator) a1 (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) a1 (Token.Name) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) else (Token.Keyword)  (Token.Text.Whitespace)          (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)              (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) a2 (Token.Name) < (Token.Operator) < (Token.Operator) endl (Token.Name)   (Token.Text.Whitespace) ; (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)      (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)