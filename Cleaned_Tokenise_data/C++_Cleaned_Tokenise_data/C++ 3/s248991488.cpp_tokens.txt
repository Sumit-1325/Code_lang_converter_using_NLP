# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <iostream> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <stdio.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <vector> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <algorithm> (Token.Comment.PreprocFile)  (Token.Comment.Preproc)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) cin (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)      (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) vector (Token.Name) < (Token.Operator) int (Token.Keyword.Type) > (Token.Operator)   (Token.Text.Whitespace) a (Token.Name) ( (Token.Punctuation) n (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) for (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) int (Token.Keyword.Type)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) < (Token.Operator)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name) + (Token.Operator) + (Token.Operator) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) scanf (Token.Name) ( (Token.Punctuation) " (Token.Literal.String) %d (Token.Literal.String) " (Token.Literal.String) , (Token.Punctuation)   (Token.Text.Whitespace) & (Token.Operator) a (Token.Name) [ (Token.Punctuation) i (Token.Name) ] (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) reverse (Token.Name) ( (Token.Punctuation) a (Token.Name) . (Token.Punctuation) begin (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) , (Token.Punctuation)   (Token.Text.Whitespace) a (Token.Name) . (Token.Punctuation) end (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)      (Token.Text.Whitespace) for (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) int (Token.Keyword.Type)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name)   (Token.Text.Whitespace) < (Token.Operator)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)   (Token.Text.Whitespace) i (Token.Name) + (Token.Operator) + (Token.Operator) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) a (Token.Name) [ (Token.Punctuation) i (Token.Name) ] (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) if (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) i (Token.Name)   (Token.Text.Whitespace) < (Token.Operator)   (Token.Text.Whitespace) n (Token.Name)   (Token.Text.Whitespace) - (Token.Operator)   (Token.Text.Whitespace) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)              (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) ' (Token.Literal.String.Char)   (Token.Literal.String.Char) ' (Token.Literal.String.Char) ; (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)