# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) "stdio.h" (Token.Comment.PreprocFile)  (Token.Comment.Preproc)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) doubler (Token.Name) ) (Token.Punctuation)  (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) double (Token.Keyword.Type)   (Token.Text.Whitespace) len (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) double (Token.Keyword.Type)   (Token.Text.Whitespace) s (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) double (Token.Keyword.Type)   (Token.Text.Whitespace) pai (Token.Name) = (Token.Operator) 3.141592 (Token.Literal.Number.Float) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)      (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) ( (Token.Punctuation) r (Token.Name)   (Token.Text.Whitespace) < (Token.Operator)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation)   (Token.Text.Whitespace) | (Token.Operator) | (Token.Operator)   (Token.Text.Whitespace) ( (Token.Punctuation) r (Token.Name)   (Token.Text.Whitespace) > (Token.Operator)   (Token.Text.Whitespace) 10000 (Token.Literal.Number.Integer) ) (Token.Punctuation) ) (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)      (Token.Text.Whitespace) s (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) r (Token.Name) * (Token.Operator) r (Token.Name) * (Token.Operator) pai (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) len (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) 2.0 (Token.Literal.Number.Float) * (Token.Operator) r (Token.Name) * (Token.Operator) pai (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)     (Token.Text.Whitespace) printf (Token.Name) ( (Token.Punctuation) " (Token.Literal.String) %lf %lf (Token.Literal.String) \n (Token.Literal.String.Escape) " (Token.Literal.String) , (Token.Punctuation)   (Token.Text.Whitespace) s (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) len (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)     (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)