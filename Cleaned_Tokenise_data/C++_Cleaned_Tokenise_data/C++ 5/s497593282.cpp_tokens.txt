# (Token.Comment.Preproc) include (Token.Comment.Preproc) <bits/stdc++.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) W (Token.Name) , (Token.Punctuation) H (Token.Name) , (Token.Punctuation) x (Token.Name) , (Token.Punctuation) y (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) cin (Token.Name) > (Token.Operator) > (Token.Operator) W (Token.Name) > (Token.Operator) > (Token.Operator) H (Token.Name) > (Token.Operator) > (Token.Operator) x (Token.Name) > (Token.Operator) > (Token.Operator) y (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) W (Token.Name) % (Token.Operator) x (Token.Name) = (Token.Operator) = (Token.Operator) 0 (Token.Literal.Number.Integer) & (Token.Operator) & (Token.Operator) H (Token.Name) % (Token.Operator) y (Token.Name) ! (Token.Operator) = (Token.Operator) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) cout (Token.Name) < (Token.Operator) < (Token.Operator) fixed (Token.Name) < (Token.Operator) < (Token.Operator) setprecision (Token.Name) ( (Token.Punctuation) 6 (Token.Literal.Number.Integer) ) (Token.Punctuation) < (Token.Operator) < (Token.Operator) x (Token.Name) * (Token.Operator) H (Token.Name) * (Token.Operator) 1.0 (Token.Literal.Number.Float) < (Token.Operator) < (Token.Operator) " (Token.Literal.String)   (Token.Literal.String) " (Token.Literal.String) < (Token.Operator) < (Token.Operator) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) else (Token.Keyword)   (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) H (Token.Name) % (Token.Operator) y (Token.Name) = (Token.Operator) = (Token.Operator) 0 (Token.Literal.Number.Integer) & (Token.Operator) & (Token.Operator) W (Token.Name) % (Token.Operator) x (Token.Name) ! (Token.Operator) = (Token.Operator) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation)   (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) fixed (Token.Name) < (Token.Operator) < (Token.Operator) setprecision (Token.Name) ( (Token.Punctuation) 6 (Token.Literal.Number.Integer) ) (Token.Punctuation) < (Token.Operator) < (Token.Operator) y (Token.Name) * (Token.Operator) W (Token.Name) * (Token.Operator) 1.0 (Token.Literal.Number.Float) < (Token.Operator) < (Token.Operator) " (Token.Literal.String)   (Token.Literal.String) " (Token.Literal.String) < (Token.Operator) < (Token.Operator) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) else (Token.Keyword)   (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) fixed (Token.Name) < (Token.Operator) < (Token.Operator) setprecision (Token.Name) ( (Token.Punctuation) 6 (Token.Literal.Number.Integer) ) (Token.Punctuation) < (Token.Operator) < (Token.Operator) x (Token.Name) * (Token.Operator) H (Token.Name) * (Token.Operator) 1.0 (Token.Literal.Number.Float) < (Token.Operator) < (Token.Operator) " (Token.Literal.String)   (Token.Literal.String) " (Token.Literal.String) < (Token.Operator) < (Token.Operator) 1 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)