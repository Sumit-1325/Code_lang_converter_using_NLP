# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <iostream> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <algorithm> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <stdlib.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <string> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <string.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <set> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <queue> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <math.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <stdbool.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc)  (Token.Text.Whitespace) # (Token.Comment.Preproc) define LL long long (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define inf 0x3f3f3f3f (Token.Comment.Preproc)  (Token.Comment.Preproc) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) MAXN (Token.Name) = (Token.Operator) 1000005 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) w (Token.Name) , (Token.Punctuation) h (Token.Name) , (Token.Punctuation) x (Token.Name) , (Token.Punctuation) y (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cin (Token.Name) > (Token.Operator) > (Token.Operator) w (Token.Name) > (Token.Operator) > (Token.Operator) h (Token.Name) > (Token.Operator) > (Token.Operator) x (Token.Name) > (Token.Operator) > (Token.Operator) y (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) double (Token.Keyword.Type)   (Token.Text.Whitespace) m (Token.Name) = (Token.Operator) ( (Token.Punctuation) double (Token.Keyword.Type) ) (Token.Punctuation) w (Token.Name) / (Token.Operator) 2 (Token.Literal.Number.Integer) * (Token.Operator) h (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) printf (Token.Name) ( (Token.Punctuation) " (Token.Literal.String) %.6lf  (Token.Literal.String) " (Token.Literal.String) , (Token.Punctuation) m (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) x (Token.Name) * (Token.Operator) 2 (Token.Literal.Number.Integer) = (Token.Operator) = (Token.Operator) w (Token.Name) & (Token.Operator) & (Token.Operator) y (Token.Name) * (Token.Operator) 2 (Token.Literal.Number.Integer) = (Token.Operator) = (Token.Operator) h (Token.Name) ) (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) puts (Token.Name) ( (Token.Punctuation) " (Token.Literal.String) 1 (Token.Literal.String) " (Token.Literal.String) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) else (Token.Keyword)   (Token.Text.Whitespace) puts (Token.Name) ( (Token.Punctuation) " (Token.Literal.String) 0 (Token.Literal.String) " (Token.Literal.String) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)