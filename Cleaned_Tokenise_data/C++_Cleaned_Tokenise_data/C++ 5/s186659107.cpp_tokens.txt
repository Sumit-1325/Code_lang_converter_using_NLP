# (Token.Comment.Preproc) include (Token.Comment.Preproc) <cstdio> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) void (Token.Keyword.Type) ) (Token.Punctuation)  (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) long (Token.Keyword.Type)   (Token.Text.Whitespace) long (Token.Keyword.Type)   (Token.Text.Whitespace) w (Token.Name) , (Token.Punctuation) h (Token.Name) , (Token.Punctuation) x (Token.Name) , (Token.Punctuation) y (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) scanf (Token.Name) ( (Token.Punctuation) " (Token.Literal.String) %lld %lld %lld %lld (Token.Literal.String) " (Token.Literal.String)   (Token.Text.Whitespace) , (Token.Punctuation) & (Token.Operator) w (Token.Name) , (Token.Punctuation) & (Token.Operator) h (Token.Name) , (Token.Punctuation) & (Token.Operator) x (Token.Name) , (Token.Punctuation) & (Token.Operator) y (Token.Name) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) printf (Token.Name) ( (Token.Punctuation) " (Token.Literal.String) %.9f %lld (Token.Literal.String) " (Token.Literal.String)   (Token.Text.Whitespace) , (Token.Punctuation) w (Token.Name) * (Token.Operator) h (Token.Name) / (Token.Operator) 2.0 (Token.Literal.Number.Float) , (Token.Punctuation) ( (Token.Punctuation) w (Token.Name) = (Token.Operator) = (Token.Operator) 2 (Token.Literal.Number.Integer) * (Token.Operator) x (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) & (Token.Operator)   (Token.Text.Whitespace) h (Token.Name) = (Token.Operator) = (Token.Operator) 2 (Token.Literal.Number.Integer) * (Token.Operator) y (Token.Name) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)