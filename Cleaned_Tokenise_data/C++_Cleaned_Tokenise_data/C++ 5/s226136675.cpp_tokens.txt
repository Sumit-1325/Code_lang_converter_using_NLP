# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <bits/stdc++.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) void (Token.Keyword.Type) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace)  (Token.Text.Whitespace)    (Token.Text.Whitespace) long (Token.Keyword.Type)   (Token.Text.Whitespace) long (Token.Keyword.Type)   (Token.Text.Whitespace) W (Token.Name) , (Token.Punctuation) H (Token.Name) , (Token.Punctuation) x (Token.Name) , (Token.Punctuation) y (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cin (Token.Name) > (Token.Operator) > (Token.Operator) W (Token.Name) > (Token.Operator) > (Token.Operator) H (Token.Name) > (Token.Operator) > (Token.Operator) x (Token.Name) > (Token.Operator) > (Token.Operator) y (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator) long (Token.Keyword.Type)   (Token.Text.Whitespace) long (Token.Keyword.Type) > (Token.Operator)   (Token.Text.Whitespace) V (Token.Name) = (Token.Operator) { (Token.Punctuation) x (Token.Name) * (Token.Operator) y (Token.Name) , (Token.Punctuation) ( (Token.Punctuation) W (Token.Name) - (Token.Operator) x (Token.Name) ) (Token.Punctuation) * (Token.Operator) y (Token.Name) , (Token.Punctuation) x (Token.Name) * (Token.Operator) ( (Token.Punctuation) H (Token.Name) - (Token.Operator) y (Token.Name) ) (Token.Punctuation) , (Token.Punctuation) ( (Token.Punctuation) W (Token.Name) - (Token.Operator) x (Token.Name) ) (Token.Punctuation) * (Token.Operator) ( (Token.Punctuation) H (Token.Name) - (Token.Operator) y (Token.Name) ) (Token.Punctuation) } (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace)    (Token.Text.Whitespace) sort (Token.Name) ( (Token.Punctuation) V (Token.Name) . (Token.Punctuation) begin (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) , (Token.Punctuation) V (Token.Name) . (Token.Punctuation) end (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace)  (Token.Text.Whitespace)    (Token.Text.Whitespace) if (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) W (Token.Name) * (Token.Operator) y (Token.Name) ! (Token.Operator) = (Token.Operator) H (Token.Name) * (Token.Operator) x (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) & (Token.Operator)   (Token.Text.Whitespace) W (Token.Name) * (Token.Operator) H (Token.Name) ! (Token.Operator) = (Token.Operator) x (Token.Name) * (Token.Operator) H (Token.Name) + (Token.Operator) y (Token.Name) * (Token.Operator) W (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) abs (Token.Name) ( (Token.Punctuation) V (Token.Name) [ (Token.Punctuation) 0 (Token.Literal.Number.Integer) ] (Token.Punctuation) + (Token.Operator) V (Token.Name) [ (Token.Punctuation) 2 (Token.Literal.Number.Integer) ] (Token.Punctuation) ) (Token.Punctuation) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) 0 (Token.Literal.Number.Integer) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace)  (Token.Text.Whitespace)    (Token.Text.Whitespace) else (Token.Keyword)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) abs (Token.Name) ( (Token.Punctuation) V (Token.Name) [ (Token.Punctuation) 0 (Token.Literal.Number.Integer) ] (Token.Punctuation) + (Token.Operator) V (Token.Name) [ (Token.Punctuation) 2 (Token.Literal.Number.Integer) ] (Token.Punctuation) ) (Token.Punctuation) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) 1 (Token.Literal.Number.Integer) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)