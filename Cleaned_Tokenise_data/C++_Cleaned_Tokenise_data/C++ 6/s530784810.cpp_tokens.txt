# (Token.Comment.Preproc) define _USE_MATH_DEFINES (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <bits/stdc++.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define int long long (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define rep(i,n) for(int i=0;i<n;i++) (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define Rep(i,a,b) for(int i=a;i<b;i++) (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define REP(i,a,b) for(int i=a;i<=b;i++) (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define rev(i,n) for(int i=n-1;i>=0;i--) (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define vi vector<int> (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define pb push_back (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define pi pair<int,int> (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define vp vector<pair<int,int>> (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define mp make_pair (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define all(v) (v).begin(),(v).end() (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define fi first (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define se second (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define MEMSET(a) memset(a,0,sizeof(a)) (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define inf (1ll<<60) (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define Yes(f) cout<<(f?"Yes":"No")<<endl (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define yes(f) cout<<(f?"yes":"no")<<endl (Token.Comment.Preproc)  (Token.Comment.Preproc) # (Token.Comment.Preproc) define YES(f) cout<<(f?"YES":"NO")<<endl (Token.Comment.Preproc)  (Token.Comment.Preproc)  (Token.Text.Whitespace) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) mod (Token.Name) = (Token.Operator) 1e9 (Token.Literal.Number.Float) + (Token.Operator) 7 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) void (Token.Keyword.Type)   (Token.Text.Whitespace) run (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) void (Token.Keyword.Type)   (Token.Text.Whitespace) init (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) ios (Token.Name) : (Token.Operator) : (Token.Operator) sync_with_stdio (Token.Name) ( (Token.Punctuation) false (Token.Name.Builtin) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cin (Token.Name) . (Token.Punctuation) tie (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) fixed (Token.Name) < (Token.Operator) < (Token.Operator) setprecision (Token.Name) ( (Token.Punctuation) 12 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) signed (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) init (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) run (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) void (Token.Keyword.Type)   (Token.Text.Whitespace) run (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) a (Token.Name) = (Token.Operator) 3 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) while (Token.Keyword) ( (Token.Punctuation) a (Token.Name) - (Token.Operator) - (Token.Operator) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) cin (Token.Name) > (Token.Operator) > (Token.Operator) n (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)          (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) ( (Token.Punctuation) n (Token.Name) = (Token.Operator) = (Token.Operator) 1 (Token.Literal.Number.Integer) ? (Token.Operator) 9 (Token.Literal.Number.Integer) : (Token.Operator) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)