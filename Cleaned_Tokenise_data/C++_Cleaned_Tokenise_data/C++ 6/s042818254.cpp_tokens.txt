# (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <algorithm> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <array> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <bitset> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <complex> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <functional> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <iomanip> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <iostream> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <map> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <numeric> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <set> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <stack> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <unordered_map> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <unordered_set> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc)   (Token.Text.Whitespace) <queue> (Token.Comment.PreprocFile)  (Token.Comment.Preproc)  (Token.Text.Whitespace) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) struct (Token.Keyword)   (Token.Text.Whitespace) BoolName (Token.Name.Class)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) numpunct (Token.Name) < (Token.Operator) char (Token.Keyword.Type) > (Token.Operator)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) t (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) f (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) BoolName (Token.Name)   (Token.Text.Whitespace) ( (Token.Punctuation) string (Token.Name)   (Token.Text.Whitespace) t (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) " (Token.Literal.String) Yes (Token.Literal.String) " (Token.Literal.String) , (Token.Punctuation)   (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) f (Token.Name)   (Token.Text.Whitespace) = (Token.Operator)   (Token.Text.Whitespace) " (Token.Literal.String) No (Token.Literal.String) " (Token.Literal.String) ) (Token.Punctuation)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) t (Token.Name) ( (Token.Punctuation) t (Token.Name) ) (Token.Punctuation) , (Token.Punctuation)   (Token.Text.Whitespace) f (Token.Name) ( (Token.Punctuation) f (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) do_truename (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) { (Token.Punctuation) return (Token.Keyword)   (Token.Text.Whitespace) t (Token.Name) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) do_falsename (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) { (Token.Punctuation) return (Token.Keyword)   (Token.Text.Whitespace) f (Token.Name) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) struct (Token.Keyword)   (Token.Text.Whitespace) Initializer (Token.Name.Class)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) Initializer (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cin (Token.Name) . (Token.Punctuation) tie (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) ios (Token.Name) : (Token.Operator) : (Token.Operator) sync_with_stdio (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) fixed (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) setprecision (Token.Name) ( (Token.Punctuation) 15 (Token.Literal.Number.Integer) ) (Token.Punctuation)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) boolalpha (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)      (Token.Text.Whitespace) cout (Token.Name) . (Token.Punctuation) imbue (Token.Name) ( (Token.Punctuation) locale (Token.Name) ( (Token.Punctuation) cout (Token.Name) . (Token.Punctuation) getloc (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) , (Token.Punctuation)   (Token.Text.Whitespace) new (Token.Keyword)   (Token.Text.Whitespace) BoolName (Token.Name) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)   (Token.Text.Whitespace) initializer (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class) > (Token.Operator)   (Token.Text.Whitespace) istream (Token.Name) & (Token.Operator)   (Token.Text.Whitespace) operator (Token.Keyword) > (Token.Operator) > (Token.Operator) ( (Token.Punctuation) istream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) s (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator) T (Token.Name) > (Token.Operator)   (Token.Text.Whitespace) & (Token.Operator) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) for (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) T (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) t (Token.Name)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) s (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) t (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) s (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) template (Token.Keyword) < (Token.Operator) typename (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name.Class) > (Token.Operator)   (Token.Text.Whitespace) ostream (Token.Name) & (Token.Operator)   (Token.Text.Whitespace) operator (Token.Keyword) < (Token.Operator) < (Token.Operator) ( (Token.Punctuation) ostream (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) s (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) const (Token.Keyword)   (Token.Text.Whitespace) vector (Token.Name) < (Token.Operator) T (Token.Name) > (Token.Operator)   (Token.Text.Whitespace) & (Token.Operator) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) for (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) const (Token.Keyword)   (Token.Text.Whitespace) T (Token.Name)   (Token.Text.Whitespace) & (Token.Operator) t (Token.Name)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) v (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) s (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) t (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) s (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) void (Token.Keyword.Type)   (Token.Text.Whitespace) set_bool_name (Token.Name) ( (Token.Punctuation) string (Token.Name)   (Token.Text.Whitespace) t (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) f (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cout (Token.Name) . (Token.Punctuation) imbue (Token.Name) ( (Token.Punctuation) locale (Token.Name) ( (Token.Punctuation) cout (Token.Name) . (Token.Punctuation) getloc (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation) , (Token.Punctuation)   (Token.Text.Whitespace) new (Token.Keyword)   (Token.Text.Whitespace) BoolName (Token.Name) ( (Token.Punctuation) t (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) f (Token.Name) ) (Token.Punctuation) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name) ( (Token.Punctuation) ) (Token.Punctuation)   (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cin (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) n (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) for (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) char (Token.Keyword.Type)   (Token.Text.Whitespace) c (Token.Name)   (Token.Text.Whitespace) : (Token.Operator)   (Token.Text.Whitespace) n (Token.Name) ) (Token.Punctuation)   (Token.Text.Whitespace) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) char (Token.Keyword.Type) ( (Token.Punctuation) c (Token.Name)   (Token.Text.Whitespace) ^ (Token.Operator)   (Token.Text.Whitespace) ' (Token.Literal.String.Char) 1 (Token.Literal.String.Char) ' (Token.Literal.String.Char)   (Token.Text.Whitespace) ^ (Token.Operator)   (Token.Text.Whitespace) ' (Token.Literal.String.Char) 9 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cout (Token.Name)   (Token.Text.Whitespace) < (Token.Operator) < (Token.Operator)   (Token.Text.Whitespace) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)