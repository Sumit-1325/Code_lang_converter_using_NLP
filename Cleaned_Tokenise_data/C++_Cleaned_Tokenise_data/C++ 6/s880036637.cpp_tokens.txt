# (Token.Comment.Preproc) include (Token.Comment.Preproc) <bits/stdc++.h> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) A (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) = (Token.Operator) ' (Token.Literal.String.Char) 1 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ) (Token.Punctuation) { (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) ' (Token.Literal.String.Char) 9 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) else (Token.Keyword) { (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) ' (Token.Literal.String.Char) 1 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) = (Token.Operator) ' (Token.Literal.String.Char) 1 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ) (Token.Punctuation) { (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) ' (Token.Literal.String.Char) 9 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) else (Token.Keyword) { (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) ' (Token.Literal.String.Char) 1 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) if (Token.Keyword) ( (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 2 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) = (Token.Operator) ' (Token.Literal.String.Char) 1 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ) (Token.Punctuation) { (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 2 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) ' (Token.Literal.String.Char) 9 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) else (Token.Keyword) { (Token.Punctuation) A (Token.Name) . (Token.Punctuation) at (Token.Name) ( (Token.Punctuation) 2 (Token.Literal.Number.Integer) ) (Token.Punctuation) = (Token.Operator) ' (Token.Literal.String.Char) 1 (Token.Literal.String.Char) ' (Token.Literal.String.Char) ; (Token.Punctuation) } (Token.Punctuation)  (Token.Text.Whitespace)    (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) A (Token.Name) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)