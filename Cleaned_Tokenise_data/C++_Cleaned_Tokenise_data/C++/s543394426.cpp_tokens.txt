# (Token.Comment.Preproc) include (Token.Comment.Preproc) <iostream> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc) <sstream> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) # (Token.Comment.Preproc) include (Token.Comment.Preproc) <cmath> (Token.Comment.PreprocFile)  (Token.Comment.Preproc) using (Token.Keyword)   (Token.Text.Whitespace) namespace (Token.Keyword)   (Token.Text.Whitespace) std (Token.Name.Namespace) ; (Token.Punctuation)  (Token.Text.Whitespace)   (Token.Text.Whitespace)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) main (Token.Name.Function) ( (Token.Punctuation) ) (Token.Punctuation) { (Token.Punctuation)  (Token.Text.Whitespace) string (Token.Name)   (Token.Text.Whitespace) s (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) int (Token.Keyword.Type)   (Token.Text.Whitespace) a (Token.Name) , (Token.Punctuation) b (Token.Name) , (Token.Punctuation) c (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) while (Token.Keyword)   (Token.Text.Whitespace) ( (Token.Punctuation) getline (Token.Name) ( (Token.Punctuation) cin (Token.Name) , (Token.Punctuation)   (Token.Text.Whitespace) s (Token.Name)   (Token.Text.Whitespace) ) (Token.Punctuation) ) (Token.Punctuation)  (Token.Text.Whitespace) { (Token.Punctuation)  (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) istringstream (Token.Name)   (Token.Text.Whitespace) iss1 (Token.Name) ( (Token.Punctuation) s (Token.Name) . (Token.Punctuation) substr (Token.Name) ( (Token.Punctuation) 0 (Token.Literal.Number.Integer) , (Token.Punctuation) SpaceInd (Token.Name) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) iss1 (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) a (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace)   (Token.Text.Whitespace)  (Token.Text.Whitespace) std (Token.Name) : (Token.Operator) : (Token.Operator) istringstream (Token.Name)   (Token.Text.Whitespace) iss2 (Token.Name) ( (Token.Punctuation) s (Token.Name) . (Token.Punctuation) substr (Token.Name) ( (Token.Punctuation) SpaceInd (Token.Name) + (Token.Operator) 1 (Token.Literal.Number.Integer) ) (Token.Punctuation) ) (Token.Punctuation) ; (Token.Punctuation)  (Token.Text.Whitespace) iss2 (Token.Name)   (Token.Text.Whitespace) > (Token.Operator) > (Token.Operator)   (Token.Text.Whitespace) b (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) cout (Token.Name) < (Token.Operator) < (Token.Operator) ( (Token.Punctuation) int (Token.Keyword.Type) ) (Token.Punctuation) log10 (Token.Name) ( (Token.Punctuation) a (Token.Name) + (Token.Operator) b (Token.Name) ) (Token.Punctuation) < (Token.Operator) < (Token.Operator) endl (Token.Name) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace) return (Token.Keyword)   (Token.Text.Whitespace) 0 (Token.Literal.Number.Integer) ; (Token.Punctuation)  (Token.Text.Whitespace) } (Token.Punctuation)  (Token.Text.Whitespace)