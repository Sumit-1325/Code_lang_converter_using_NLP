ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: i
ID: j
ID: tmp
SEMI: ;
NEWLINE: 

COMMENT: /* ??°??????????´????????????? */
NEWLINE: 

ID: int
ID: number
NUMBER: 100
SEMI: ;
NEWLINE: 

COMMENT: /* ??°???????????°?????\??? */
NEWLINE: 

ID: int
ID: total
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: total
RPAREN: )
SEMI: ;
NEWLINE: 

COMMENT: /* ?????????????´?????????°????????\??? */
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: total
SEMI: ;
PLUS: +
PLUS: +
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: number
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

COMMENT: /* ??°???????????????????????? */
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: total
SEMI: ;
PLUS: +
PLUS: +
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: for
LPAREN: (
ID: j
ID: i
PLUS: +
NUMBER: 1
SEMI: ;
ID: j
ID: total
SEMI: ;
PLUS: +
PLUS: +
ID: j
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: number
ID: i
ID: number
ID: j
RPAREN: )
LBRACE: {
NEWLINE: 

ID: tmp
ID: number
ID: j
SEMI: ;
NEWLINE: 

ID: number
ID: j
ID: number
ID: i
SEMI: ;
NEWLINE: 

ID: number
ID: i
ID: tmp
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

COMMENT: /* ???????????????????????°???????????? */
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: total
SEMI: ;
PLUS: +
PLUS: +
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d "
ID: number
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
