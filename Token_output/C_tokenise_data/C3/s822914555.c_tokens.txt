ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: n
SEMI: ;
NEWLINE: 

ID: int
ID: a
NUMBER: 1000
SEMI: ;
NEWLINE: 

ID: int
ID: b
SEMI: ;
NEWLINE: 

ID: int
ID: c
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: b
NUMBER: 0
SEMI: ;
ID: b
ID: n
SEMI: ;
ID: b
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
ID: b
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: c
ID: b
MINUS: -
NUMBER: 1
SEMI: ;
ID: c
NUMBER: 0
SEMI: ;
ID: c
MINUS: -
MINUS: -
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: c
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: a
NUMBER: 0
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: printf
LPAREN: (
STRING: "%d "
ID: a
ID: c
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "\n"
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

NEWLINE: 

ID: return
LPAREN: (
NUMBER: 0
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
