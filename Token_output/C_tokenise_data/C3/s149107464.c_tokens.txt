ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: n
ID: a
NUMBER: 1000
LBRACE: {
NUMBER: 0
RBRACE: }
ID: tmp
ID: i
ID: j
ID: k
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: j
NUMBER: 0
SEMI: ;
ID: j
ID: n
DIVIDE: /
NUMBER: 2
SEMI: ;
ID: j
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: tmp
ID: a
ID: j
SEMI: ;
NEWLINE: 

ID: a
ID: j
ID: a
ID: n
MINUS: -
ID: j
MINUS: -
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: a
ID: n
MINUS: -
ID: j
MINUS: -
NUMBER: 1
ID: tmp
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: k
NUMBER: 0
SEMI: ;
ID: k
ID: n
SEMI: ;
ID: k
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d "
ID: a
ID: k
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
