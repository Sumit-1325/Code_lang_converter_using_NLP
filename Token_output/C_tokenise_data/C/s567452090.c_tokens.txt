ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: i
ID: data
NUMBER: 6
ID: sum
NUMBER: 3
ID: t
NUMBER: 3
LBRACE: {
NUMBER: 0
NUMBER: 0
NUMBER: 0
RBRACE: }
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 6
SEMI: ;
ID: i
PLUS: +
NUMBER: 2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: data
ID: i
ID: data
ID: i
PLUS: +
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 

ID: sum
ID: i
DIVIDE: /
NUMBER: 2
ID: data
ID: i
PLUS: +
ID: data
ID: i
PLUS: +
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 3
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: while
LPAREN: (
ID: sum
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: sum
ID: i
DIVIDE: /
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: t
ID: i
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 3
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: t
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
