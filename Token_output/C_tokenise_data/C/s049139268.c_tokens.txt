ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: A
NUMBER: 200
SEMI: ;
NEWLINE: 

ID: int
ID: B
NUMBER: 200
SEMI: ;
NEWLINE: 

ID: int
ID: C
NUMBER: 200
SEMI: ;
NEWLINE: 

ID: int
ID: x
SEMI: ;
NEWLINE: 

ID: int
ID: keta
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: i
SEMI: ;
NEWLINE: 


ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: scanf
LPAREN: (
STRING: "%d %d"
ID: A
ID: i
ID: B
ID: i
RPAREN: )
ID: EOF
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: A
ID: i
ID: B
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 


ID: x
ID: A
ID: i
PLUS: +
ID: B
ID: i
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: keta
NUMBER: 1
SEMI: ;
LPAREN: (
ID: x
DIVIDE: /
NUMBER: 10
RPAREN: )
NUMBER: 0
SEMI: ;
ID: keta
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
ID: x
ID: x
DIVIDE: /
NUMBER: 10
SEMI: ;
RBRACE: }
NEWLINE: 

ID: C
ID: i
ID: keta
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: C
ID: i
ID: EOF
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: C
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 



ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
