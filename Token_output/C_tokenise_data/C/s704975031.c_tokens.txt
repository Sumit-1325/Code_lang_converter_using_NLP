ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: a
NUMBER: 200
ID: b
NUMBER: 200
SEMI: ;
NEWLINE: 

ID: int
ID: c
NUMBER: 200
ID: i
ID: j
ID: n
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: scanf
LPAREN: (
STRING: "%d%d"
ID: a
ID: i
ID: b
ID: i
RPAREN: )
ID: EOF
RPAREN: )
LBRACE: {
NEWLINE: 

ID: i
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

ID: c
ID: i
ID: a
ID: i
PLUS: +
ID: b
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: n
ID: i
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: j
NUMBER: 0
SEMI: ;
ID: j
ID: n
SEMI: ;
ID: j
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: c
ID: j
NUMBER: 0
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: c
ID: j
ID: c
ID: j
DIVIDE: /
NUMBER: 10
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


