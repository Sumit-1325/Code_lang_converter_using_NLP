ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: i
ID: n
ID: m
ID: temp
ID: count
ID: digit
NUMBER: 200
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 200
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: n
ID: m
RPAREN: )
SEMI: ;
NEWLINE: 

ID: count
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: temp
ID: n
PLUS: +
ID: m
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: temp
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: temp
ID: temp
DIVIDE: /
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: count
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: digit
ID: i
ID: count
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: i
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: i
NUMBER: 200
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: digit
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: i
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
