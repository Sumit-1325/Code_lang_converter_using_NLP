ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: a
ID: i
NUMBER: 0
ID: u
NUMBER: 0
ID: e
NUMBER: 0
ID: o
ID: yama
NUMBER: 100
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: o
ID: a
PLUS: +
ID: i
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: u
NUMBER: 0
SEMI: ;
ID: o
NUMBER: 0
SEMI: ;
ID: u
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: o
DIVIDE: /
NUMBER: 10
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: yama
ID: e
ID: o
SEMI: ;
NEWLINE: 

ID: e
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: u
NUMBER: 0
SEMI: ;
ID: u
ID: e
SEMI: ;
ID: u
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: yama
ID: u
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

NEWLINE: 

NEWLINE: 

RBRACE: }
