ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 


ID: int
ID: num1
NUMBER: 200
ID: num2
NUMBER: 200
SEMI: ;
NEWLINE: 


ID: int
ID: i
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
NUMBER: 200
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: num
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: num
RPAREN: )
SEMI: ;
NEWLINE: 

ID: num1
ID: i
ID: num
SEMI: ;
NEWLINE: 


ID: scanf
LPAREN: (
STRING: "%d"
ID: num
RPAREN: )
SEMI: ;
NEWLINE: 

ID: num2
ID: i
ID: num
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
NUMBER: 200
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: keta1
NUMBER: 0
ID: keta2
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: num1
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: num1
ID: i
DIVIDE: /
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: keta1
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: while
LPAREN: (
ID: num2
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: num2
ID: i
DIVIDE: /
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: keta2
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: keta1
PLUS: +
ID: keta2
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


