ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: double
ID: w
ID: h
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%lf %lf %lf %lf"
ID: w
ID: h
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%lf "
LPAREN: (
ID: w
TIMES: *
ID: h
RPAREN: )
DIVIDE: /
NUMBER: 2
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: x
TIMES: *
NUMBER: 2
ID: w
ID: y
TIMES: *
NUMBER: 2
ID: h
RPAREN: )
ID: printf
LPAREN: (
STRING: "1"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: x
TIMES: *
NUMBER: 2
ID: w
ID: y
TIMES: *
NUMBER: 2
ID: h
RPAREN: )
ID: printf
LPAREN: (
STRING: "0"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: x
NUMBER: 0
ID: x
ID: w
ID: y
NUMBER: 0
ID: y
ID: h
RPAREN: )
ID: printf
LPAREN: (
STRING: "0"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: x
TIMES: *
ID: h
ID: y
TIMES: *
ID: w
LPAREN: (
ID: w
MINUS: -
ID: x
RPAREN: )
TIMES: *
ID: h
ID: y
TIMES: *
ID: w
RPAREN: )
ID: printf
LPAREN: (
STRING: "0"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
ID: printf
LPAREN: (
STRING: "1"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
RBRACE: }
