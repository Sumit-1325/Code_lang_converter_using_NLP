ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: w
ID: h
ID: x
ID: y
ID: i
SEMI: ;
NEWLINE: 

ID: float
ID: ans
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d%d%d%d"
ID: w
ID: h
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: x
ID: y
RPAREN: )
LBRACE: {
NEWLINE: 

ID: ans
LPAREN: (
LPAREN: (
ID: w
MINUS: -
ID: x
RPAREN: )
TIMES: *
NUMBER: 2
NUMBER: 0
RPAREN: )
TIMES: *
ID: h
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: ans
LPAREN: (
LPAREN: (
ID: h
MINUS: -
ID: y
RPAREN: )
TIMES: *
NUMBER: 2
NUMBER: 0
RPAREN: )
TIMES: *
ID: w
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%f "
ID: ans
DIVIDE: /
NUMBER: 2
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: w
ID: h
ID: x
ID: y
RPAREN: )
NEWLINE: 

ID: printf
LPAREN: (
STRING: "0\n"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
NEWLINE: 

ID: printf
LPAREN: (
STRING: "1\n"
RPAREN: )
SEMI: ;
NEWLINE: 


ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
