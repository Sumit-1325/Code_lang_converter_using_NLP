ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: string
ID: h
NEWLINE: 

ID: include
ID: math
ID: h
NEWLINE: 

ID: include
ID: stdlib
ID: h
NEWLINE: 


ID: typedef
ID: struct
LBRACE: {
NEWLINE: 

ID: int
ID: x
SEMI: ;
NEWLINE: 

ID: int
ID: y
SEMI: ;
NEWLINE: 

RBRACE: }
ID: posi_t
SEMI: ;
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: w
ID: h
SEMI: ;
NEWLINE: 

ID: posi_t
ID: posi
NUMBER: 2
LBRACE: {
NUMBER: 0
RBRACE: }
SEMI: ;
NEWLINE: 


ID: scanf
LPAREN: (
STRING: "%d %d %d %d"
ID: w
ID: h
ID: posi
NUMBER: 0
ID: x
ID: posi
NUMBER: 0
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: posi
NUMBER: 1
ID: x
ID: w
MINUS: -
ID: posi
NUMBER: 0
ID: x
SEMI: ;
NEWLINE: 

ID: posi
NUMBER: 1
ID: y
ID: h
MINUS: -
ID: posi
NUMBER: 0
ID: y
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%.10Lf"
LPAREN: (
ID: long
ID: double
RPAREN: )
ID: w
TIMES: *
ID: h
DIVIDE: /
NUMBER: 2
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: posi
NUMBER: 1
ID: x
ID: posi
NUMBER: 0
ID: x
ID: posi
NUMBER: 1
ID: y
ID: posi
NUMBER: 0
ID: y
RPAREN: )
NEWLINE: 

ID: printf
LPAREN: (
STRING: " 1"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
ID: printf
LPAREN: (
STRING: " 0"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


