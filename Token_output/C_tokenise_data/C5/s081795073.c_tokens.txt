ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: math
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: w
ID: h
ID: x
ID: y
ID: z
SEMI: ;
NEWLINE: 

ID: double
ID: s
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d %d %d"
ID: w
ID: h
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 


ID: if
LPAREN: (
LPAREN: (
ID: double
RPAREN: )
ID: x
LPAREN: (
LPAREN: (
ID: double
RPAREN: )
ID: w
DIVIDE: /
NUMBER: 2
RPAREN: )
LPAREN: (
ID: double
RPAREN: )
ID: y
LPAREN: (
LPAREN: (
ID: double
RPAREN: )
ID: h
DIVIDE: /
NUMBER: 2
RPAREN: )
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: z
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
LBRACE: {
NEWLINE: 

ID: z
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: s
LPAREN: (
LPAREN: (
ID: double
RPAREN: )
ID: w
TIMES: *
LPAREN: (
ID: double
RPAREN: )
ID: h
RPAREN: )
DIVIDE: /
NUMBER: 2
SEMI: ;
NEWLINE: 


ID: printf
LPAREN: (
STRING: "%f %d"
ID: s
ID: z
RPAREN: )
SEMI: ;
NEWLINE: 


ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
