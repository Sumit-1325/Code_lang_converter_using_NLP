ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: w
ID: h
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: w
ID: h
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: long
ID: double
ID: ans
LPAREN: (
ID: w
TIMES: *
ID: h
RPAREN: )
DIVIDE: /
NUMBER: 2
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%10llf"
ID: ans
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: if
LPAREN: (
ID: w
NUMBER: 2
NUMBER: 0
ID: h
NUMBER: 2
NUMBER: 0
ID: x
ID: w
DIVIDE: /
NUMBER: 2
ID: y
ID: h
DIVIDE: /
NUMBER: 2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: " 1"
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: " 0"
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
