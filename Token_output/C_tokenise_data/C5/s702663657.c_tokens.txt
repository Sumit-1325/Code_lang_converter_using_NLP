ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: stdlib
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: long
ID: int
ID: W
ID: H
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: double
ID: S
SEMI: ;
NEWLINE: 


ID: scanf
LPAREN: (
STRING: "%d"
ID: W
RPAREN: )
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: H
RPAREN: )
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: x
RPAREN: )
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 


ID: S
ID: W
TIMES: *
ID: H
DIVIDE: /
NUMBER: 2
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%lf\n"
ID: S
RPAREN: )
SEMI: ;
NEWLINE: 


ID: if
LPAREN: (
LPAREN: (
ID: x
ID: W
DIVIDE: /
NUMBER: 2
NUMBER: 0
RPAREN: )
LPAREN: (
ID: y
ID: H
DIVIDE: /
NUMBER: 2
NUMBER: 0
RPAREN: )
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "1"
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "0"
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
