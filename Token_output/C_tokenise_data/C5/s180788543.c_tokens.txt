ID: include
ID: stdio
ID: h
NEWLINE: 

ID: define
ID: MAX
LPAREN: (
ID: a
ID: b
RPAREN: )
ID: a
ID: b
ID: a
ID: b
NEWLINE: 

ID: define
ID: MIN
LPAREN: (
ID: a
ID: b
RPAREN: )
ID: a
ID: b
ID: a
ID: b
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: x
ID: y
ID: a
ID: b
ID: maxa
ID: maxb
ID: max
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d%d%d%d"
ID: x
ID: y
ID: a
ID: b
RPAREN: )
SEMI: ;
NEWLINE: 

ID: maxa
ID: MIN
LPAREN: (
ID: a
TIMES: *
ID: y
LPAREN: (
ID: x
MINUS: -
ID: a
RPAREN: )
TIMES: *
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: maxb
ID: MIN
LPAREN: (
ID: x
TIMES: *
ID: b
LPAREN: (
ID: y
MINUS: -
ID: b
RPAREN: )
TIMES: *
ID: x
RPAREN: )
SEMI: ;
NEWLINE: 

ID: max
ID: MAX
LPAREN: (
ID: maxa
ID: maxb
RPAREN: )
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%lf "
LPAREN: (
ID: double
RPAREN: )
ID: max
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: maxa
ID: maxb
RPAREN: )
NEWLINE: 

ID: printf
LPAREN: (
STRING: "1\n"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
NEWLINE: 

ID: printf
LPAREN: (
STRING: "0\n"
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

