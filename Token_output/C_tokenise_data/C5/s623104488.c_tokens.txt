ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: W
ID: H
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d%d%d%d"
ID: W
ID: H
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: double
ID: s
SEMI: ;
NEWLINE: 

ID: s
ID: W
TIMES: *
ID: H
DIVIDE: /
NUMBER: 2
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: W
NUMBER: 2
NUMBER: 1
ID: H
NUMBER: 2
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: s
PLUS: +
NUMBER: 0
NUMBER: 5
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%lf "
ID: s
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: if
LPAREN: (
ID: W
ID: x
TIMES: *
NUMBER: 2
ID: H
ID: y
TIMES: *
NUMBER: 2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "1"
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "0"
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

