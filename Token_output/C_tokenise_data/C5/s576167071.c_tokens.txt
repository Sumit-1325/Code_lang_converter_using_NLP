ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: W
SEMI: ;
NEWLINE: 

ID: int
ID: H
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: W
ID: H
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: float
ID: S
SEMI: ;
NEWLINE: 

ID: int
ID: D
SEMI: ;
NEWLINE: 

ID: S
ID: W
TIMES: *
ID: H
DIVIDE: /
NUMBER: 2
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%f "
ID: S
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: x
ID: W
ID: y
ID: H
ID: x
NUMBER: 0
ID: y
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: D
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: x
ID: W
DIVIDE: /
NUMBER: 2
ID: y
ID: H
DIVIDE: /
NUMBER: 2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: D
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: D
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: D
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
