ID: include
ID: stdio
ID: h
NEWLINE: 



ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: double
ID: w
ID: h
SEMI: ;
NEWLINE: 

ID: int
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%lf%lf%d%d"
ID: w
ID: h
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%lf"
LPAREN: (
ID: w
TIMES: *
ID: h
RPAREN: )
DIVIDE: /
NUMBER: 2
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: x
TIMES: *
NUMBER: 2
ID: w
ID: y
TIMES: *
NUMBER: 2
ID: h
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: " %d"
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: " %d"
NUMBER: 0
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

