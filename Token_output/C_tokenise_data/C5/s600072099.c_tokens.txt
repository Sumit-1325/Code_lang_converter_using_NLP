ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: string
ID: h
NEWLINE: 

ID: include
ID: stdlib
ID: h
NEWLINE: 

ID: include
ID: math
ID: h
NEWLINE: 

ID: include
ID: stdbool
ID: h
NEWLINE: 

ID: define
ID: LL
ID: long
ID: long
NEWLINE: 

ID: define
ID: INF
NUMBER: 1
NUMBER: 31
MINUS: -
NUMBER: 1
NEWLINE: 

ID: define
ID: MIN
LPAREN: (
ID: x
ID: y
RPAREN: )
LPAREN: (
LPAREN: (
ID: x
RPAREN: )
LPAREN: (
ID: y
RPAREN: )
LPAREN: (
ID: x
RPAREN: )
LPAREN: (
ID: y
RPAREN: )
RPAREN: )
NEWLINE: 

ID: define
ID: MAX
LPAREN: (
ID: x
ID: y
RPAREN: )
LPAREN: (
LPAREN: (
ID: x
RPAREN: )
LPAREN: (
ID: y
RPAREN: )
LPAREN: (
ID: y
RPAREN: )
LPAREN: (
ID: x
RPAREN: )
RPAREN: )
NEWLINE: 

ID: define
ID: FOR
LPAREN: (
ID: i
ID: a
ID: n
RPAREN: )
ID: for
LPAREN: (
ID: i
ID: a
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: define
ID: MOD
NUMBER: 1000000007
NEWLINE: 

ID: define
ID: NUM
NUMBER: 100005
NEWLINE: 

ID: void
ID: swap
LPAREN: (
ID: int
TIMES: *
ID: a
ID: int
TIMES: *
ID: b
RPAREN: )
LBRACE: {
ID: int
ID: tmp
TIMES: *
ID: a
SEMI: ;
TIMES: *
ID: a
TIMES: *
ID: b
SEMI: ;
TIMES: *
ID: b
ID: tmp
SEMI: ;
RBRACE: }
NEWLINE: 

ID: int
ID: cmp
LPAREN: (
ID: const
ID: void
TIMES: *
ID: a
ID: const
ID: void
TIMES: *
ID: b
RPAREN: )
LBRACE: {
ID: return
TIMES: *
LPAREN: (
ID: int
TIMES: *
RPAREN: )
ID: a
MINUS: -
TIMES: *
LPAREN: (
ID: int
TIMES: *
RPAREN: )
ID: b
SEMI: ;
RBRACE: }
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: W
ID: H
ID: x
ID: y
ID: i
ID: a
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: double
ID: ans
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d%d%d%d"
ID: W
ID: H
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: W
NUMBER: 2
NUMBER: 0
ID: H
NUMBER: 2
NUMBER: 0
ID: W
DIVIDE: /
NUMBER: 2
ID: x
ID: H
DIVIDE: /
NUMBER: 2
ID: y
RPAREN: )
ID: a
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: ans
LPAREN: (
ID: double
RPAREN: )
ID: W
TIMES: *
LPAREN: (
ID: double
RPAREN: )
ID: H
DIVIDE: /
NUMBER: 2
SEMI: ;
NEWLINE: 


ID: printf
LPAREN: (
STRING: "%lf %d\n"
ID: ans
ID: a
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

