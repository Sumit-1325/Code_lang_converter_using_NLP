ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

COMMENT: // Your code here!
NEWLINE: 

ID: int
ID: n
SEMI: ;
NEWLINE: 

ID: int
ID: a
NUMBER: 200000
SEMI: ;
NEWLINE: 

ID: int
ID: fst
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: scn
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: fn
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: sn
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: a
ID: i
ID: fst
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scn
ID: fst
SEMI: ;
NEWLINE: 

ID: sn
ID: fn
SEMI: ;
NEWLINE: 

ID: fst
ID: a
ID: i
SEMI: ;
NEWLINE: 

ID: fn
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
ID: if
LPAREN: (
ID: a
ID: i
ID: scn
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scn
ID: a
ID: i
SEMI: ;
NEWLINE: 

ID: sn
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: i
ID: fn
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: scn
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: fst
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
