ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: a
ID: i
ID: b
ID: a
ID: max
ID: j
ID: k
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
ID: a
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: b
ID: i
MINUS: -
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: a
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: max
ID: b
ID: i
SEMI: ;
NEWLINE: 

LBRACE: {
ID: for
LPAREN: (
ID: j
NUMBER: 0
SEMI: ;
ID: j
ID: i
MINUS: -
NUMBER: 1
SEMI: ;
ID: j
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: if
LPAREN: (
ID: b
ID: j
PLUS: +
NUMBER: 1
ID: b
ID: j
RPAREN: )
NEWLINE: 

ID: max
ID: b
ID: j
PLUS: +
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: k
ID: i
PLUS: +
NUMBER: 1
SEMI: ;
ID: k
ID: a
SEMI: ;
ID: k
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: if
LPAREN: (
ID: b
ID: k
PLUS: +
NUMBER: 1
ID: b
ID: k
RPAREN: )
NEWLINE: 

ID: max
ID: b
ID: k
PLUS: +
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: b
ID: j
PLUS: +
NUMBER: 1
ID: b
ID: k
PLUS: +
NUMBER: 1
RPAREN: )
NEWLINE: 

ID: max
ID: b
ID: j
PLUS: +
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: else
NEWLINE: 

ID: max
ID: b
ID: k
PLUS: +
NUMBER: 1
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
