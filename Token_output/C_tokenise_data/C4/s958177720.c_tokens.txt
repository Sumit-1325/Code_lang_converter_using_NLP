ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: N
SEMI: ;
NEWLINE: 

ID: int
ID: A
NUMBER: 200000
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: N
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: mx
MINUS: -
NUMBER: 1
ID: mx2
MINUS: -
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: N
SEMI: ;
PLUS: +
PLUS: +
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: A
PLUS: +
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: mx
ID: A
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: mx2
ID: mx
SEMI: ;
NEWLINE: 

ID: mx
ID: A
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
ID: if
LPAREN: (
ID: mx2
ID: A
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: mx2
ID: A
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: N
SEMI: ;
PLUS: +
PLUS: +
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: A
ID: i
ID: mx
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: mx2
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: mx
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
