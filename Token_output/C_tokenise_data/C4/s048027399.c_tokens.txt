COMMENT: // abc134c: Exception Handling
NEWLINE: 

ID: include
ID: stdio
ID: h
NEWLINE: 


ID: define
ID: rep
LPAREN: (
ID: i
ID: s
ID: e
RPAREN: )
ID: for
LPAREN: (
ID: int
ID: i
ID: s
SEMI: ;
ID: i
ID: e
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: define
ID: in
LPAREN: (
ID: n
RPAREN: )
ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
NEWLINE: 

ID: define
ID: outi
LPAREN: (
ID: d
RPAREN: )
ID: printf
LPAREN: (
STRING: "%d\n"
ID: d
RPAREN: )
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: n
SEMI: ;
ID: in
LPAREN: (
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: ix
MINUS: -
NUMBER: 1
ID: f
NUMBER: 0
ID: s
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: rep
LPAREN: (
ID: i
NUMBER: 0
ID: n
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: a
SEMI: ;
ID: in
LPAREN: (
ID: a
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: a
ID: f
RPAREN: )
LBRACE: {
ID: s
ID: f
SEMI: ;
ID: f
ID: a
SEMI: ;
ID: ix
ID: i
SEMI: ;
RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: a
ID: s
RPAREN: )
ID: s
ID: a
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: rep
LPAREN: (
ID: i
NUMBER: 0
ID: n
RPAREN: )
ID: outi
LPAREN: (
ID: i
ID: ix
ID: s
ID: f
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
