ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: n
ID: i
ID: max
NUMBER: 0
ID: j
NUMBER: 0
ID: second
NUMBER: 0
ID: num
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: f
ID: n
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: f
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: j
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: max
ID: f
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: max
ID: f
ID: i
SEMI: ;
NEWLINE: 

ID: num
ID: i
SEMI: ;
NEWLINE: 

ID: j
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: j
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
LPAREN: (
ID: max
ID: f
ID: i
RPAREN: )
LPAREN: (
ID: second
ID: f
ID: i
RPAREN: )
RPAREN: )
LBRACE: {
NEWLINE: 

ID: second
ID: f
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: i
ID: num
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: second
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: max
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: j
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: max
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: j
NUMBER: 2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: max
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
