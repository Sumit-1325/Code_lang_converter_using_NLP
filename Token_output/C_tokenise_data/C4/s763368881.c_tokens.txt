ID: include
ID: stdio
ID: h
NEWLINE: 


ID: void
ID: swap
LPAREN: (
ID: int
TIMES: *
ID: swapa
ID: int
TIMES: *
ID: swapb
RPAREN: )
SEMI: ;
NEWLINE: 

ID: void
ID: quick_sort
LPAREN: (
ID: int
ID: b
ID: int
ID: left
ID: int
ID: right
RPAREN: )
SEMI: ;
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: a
NUMBER: 200000
ID: n
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: quick_sort
LPAREN: (
ID: a
NUMBER: 0
ID: n
MINUS: -
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: a
ID: n
MINUS: -
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: void
ID: swap
LPAREN: (
ID: int
TIMES: *
ID: swapa
ID: int
TIMES: *
ID: swapb
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: temp
SEMI: ;
NEWLINE: 

ID: temp
TIMES: *
ID: swapa
SEMI: ;
NEWLINE: 

TIMES: *
ID: swapa
TIMES: *
ID: swapb
SEMI: ;
NEWLINE: 

TIMES: *
ID: swapb
ID: temp
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: void
ID: quick_sort
LPAREN: (
ID: int
ID: b
ID: int
ID: left
ID: int
ID: right
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: lp
ID: rp
ID: mid
SEMI: ;
NEWLINE: 

ID: mid
ID: b
ID: left
SEMI: ;
NEWLINE: 

ID: lp
ID: left
SEMI: ;
NEWLINE: 

ID: rp
ID: right
SEMI: ;
NEWLINE: 


ID: while
LPAREN: (
ID: lp
ID: rp
RPAREN: )
LBRACE: {
NEWLINE: 

ID: while
LPAREN: (
ID: b
ID: lp
ID: mid
ID: lp
ID: rp
RPAREN: )
LBRACE: {
NEWLINE: 

ID: lp
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: while
LPAREN: (
ID: mid
ID: b
ID: rp
ID: lp
ID: rp
RPAREN: )
LBRACE: {
NEWLINE: 

ID: rp
MINUS: -
MINUS: -
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: lp
ID: rp
RPAREN: )
LBRACE: {
NEWLINE: 

ID: swap
LPAREN: (
ID: b
ID: lp
ID: b
ID: rp
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: swap
LPAREN: (
ID: b
ID: left
ID: b
ID: rp
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: left
ID: rp
MINUS: -
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: quick_sort
LPAREN: (
ID: b
ID: left
ID: rp
MINUS: -
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: rp
PLUS: +
NUMBER: 1
ID: right
RPAREN: )
LBRACE: {
NEWLINE: 

ID: quick_sort
LPAREN: (
ID: d
ID: rp
PLUS: +
NUMBER: 1
ID: right
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

