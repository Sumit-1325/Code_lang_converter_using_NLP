ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: max1
LPAREN: (
ID: int
TIMES: *
ID: a
ID: int
ID: n
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: max_num
ID: a
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 1
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: max_num
ID: a
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: max_num
ID: a
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
LPAREN: (
ID: max_num
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: n
ID: alt
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: a
ID: n
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: alt
ID: a
ID: i
SEMI: ;
NEWLINE: 

ID: a
ID: i
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: max1
LPAREN: (
ID: a
ID: n
RPAREN: )
RPAREN: )
SEMI: ;
NEWLINE: 

ID: a
ID: i
ID: alt
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
LPAREN: (
NUMBER: 0
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
