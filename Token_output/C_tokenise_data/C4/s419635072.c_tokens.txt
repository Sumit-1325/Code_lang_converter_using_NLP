ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: n
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: a
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: b
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: i
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: hai
NUMBER: 250000
SEMI: ;
NEWLINE: 

ID: int
ID: max
NUMBER: 0
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: max
ID: hai
NUMBER: 0
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: a
NUMBER: 1
SEMI: ;
ID: a
ID: n
SEMI: ;
ID: a
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: b
RPAREN: )
SEMI: ;
NEWLINE: 

ID: hai
ID: a
ID: b
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: hai
NUMBER: 250000
MINUS: -
ID: hai
ID: i
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: a
NUMBER: 1
SEMI: ;
ID: a
ID: n
MINUS: -
NUMBER: 1
SEMI: ;
ID: a
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: hai
ID: a
ID: max
RPAREN: )
LBRACE: {
NEWLINE: 

ID: max
ID: hai
ID: a
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

