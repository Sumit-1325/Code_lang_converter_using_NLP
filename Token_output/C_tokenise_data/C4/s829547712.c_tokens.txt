ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 


ID: int
ID: n
SEMI: ;
NEWLINE: 

ID: int
ID: a
NUMBER: 200000
SEMI: ;
NEWLINE: 

COMMENT: //input
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 


ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


COMMENT: //calc
NEWLINE: 


ID: int
ID: max
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: semimax
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: j
NUMBER: 0
SEMI: ;
ID: j
ID: n
SEMI: ;
ID: j
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: max
ID: a
ID: j
RPAREN: )
LBRACE: {
NEWLINE: 

ID: max
ID: a
ID: j
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
ID: if
LPAREN: (
ID: semimax
ID: a
ID: j
RPAREN: )
LBRACE: {
NEWLINE: 

ID: semimax
ID: a
ID: j
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

COMMENT: //output
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: max
ID: a
ID: i
RPAREN: )
LBRACE: {
COMMENT: //a[i] is biggest
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: semimax
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
LBRACE: {
COMMENT: //a[i] is not biggest
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: max
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 




ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

