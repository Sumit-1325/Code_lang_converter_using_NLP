ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: string
ID: h
NEWLINE: 

NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: long
ID: long
ID: int
ID: n
SEMI: ;
NEWLINE: 

ID: long
ID: long
ID: int
ID: max
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: long
ID: long
ID: int
ID: next
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: long
ID: long
ID: int
ID: a
NUMBER: 20005000
SEMI: ;
NEWLINE: 

ID: long
ID: long
ID: int
ID: ans
SEMI: ;
NEWLINE: 

ID: long
ID: long
ID: int
ID: i
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%lld"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%lld"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: max
ID: a
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: next
ID: max
SEMI: ;
NEWLINE: 

ID: max
ID: a
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
ID: if
LPAREN: (
ID: next
ID: a
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: next
ID: a
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: ans
ID: max
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: ans
ID: a
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: ans
ID: next
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%lld\n"
ID: ans
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

