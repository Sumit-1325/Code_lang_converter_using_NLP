ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: max2
LPAREN: (
ID: int
ID: len
ID: int
TIMES: *
ID: nums
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: i
ID: _max
ID: nums
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
ID: len
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: nums
ID: i
ID: _max
RPAREN: )
NEWLINE: 

ID: _max
ID: nums
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
ID: _max
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: n
ID: a
NUMBER: 200000
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: n
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: temp
ID: a
ID: i
SEMI: ;
NEWLINE: 

ID: a
ID: i
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: max2
LPAREN: (
ID: n
ID: a
RPAREN: )
RPAREN: )
SEMI: ;
NEWLINE: 

ID: a
ID: i
ID: temp
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
