ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: stdlib
ID: h
NEWLINE: 

NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
TIMES: *
ID: a
SEMI: ;
NEWLINE: 

ID: int
ID: N
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: N
RPAREN: )
SEMI: ;
NEWLINE: 

ID: a
LPAREN: (
ID: int
RPAREN: )
ID: malloc
LPAREN: (
ID: sizoof
LPAREN: (
ID: int
RPAREN: )
TIMES: *
ID: N
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: i
ID: m1
NUMBER: 0
ID: m2
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: N
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: a
PLUS: +
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: m1
LPAREN: (
ID: m1
ID: a
ID: i
RPAREN: )
ID: m1
ID: a
ID: i
SEMI: ;
NEWLINE: 

ID: m2
LPAREN: (
ID: m1
ID: a
ID: i
ID: a
ID: i
ID: m2
RPAREN: )
ID: a
ID: i
ID: m2
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: N
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: m1
ID: a
ID: i
RPAREN: )
ID: printf
LPAREN: (
STRING: "%d"
ID: m1
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
ID: printf
LPAREN: (
STRING: "%d"
ID: m2
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
