ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: N
ID: A
NUMBER: 200005
ID: i
ID: M1
ID: M2
ID: I
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: N
RPAREN: )
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: A
NUMBER: 1
RPAREN: )
SEMI: ;
ID: scanf
LPAREN: (
STRING: "%d"
ID: A
NUMBER: 2
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: A
NUMBER: 1
ID: A
NUMBER: 2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: M1
ID: A
NUMBER: 1
SEMI: ;
ID: M2
ID: A
NUMBER: 2
SEMI: ;
NEWLINE: 

ID: I
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: M1
ID: A
NUMBER: 2
SEMI: ;
ID: M2
ID: A
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: I
NUMBER: 2
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 3
SEMI: ;
ID: i
ID: N
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: A
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: A
ID: i
ID: M1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: M2
ID: M1
SEMI: ;
NEWLINE: 

ID: M1
ID: A
ID: i
SEMI: ;
NEWLINE: 

ID: I
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: A
ID: i
ID: M2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: M2
ID: A
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: M1
ID: M2
RPAREN: )
LBRACE: {
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
ID: N
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
ID: printf
LPAREN: (
STRING: "%d\n"
ID: M1
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
ID: N
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: i
ID: I
RPAREN: )
ID: printf
LPAREN: (
STRING: "%d\n"
ID: M2
RPAREN: )
SEMI: ;
NEWLINE: 

ID: else
ID: printf
LPAREN: (
STRING: "%d\n"
ID: M1
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

