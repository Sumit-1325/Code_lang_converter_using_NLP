DIVIDE: /
TIMES: *
NEWLINE: 

ID: Algorithms
ID: and
ID: Data
ID: Structures
NUMBER: 1
NEWLINE: 

ID: Insertion
ID: Sort
NEWLINE: 

ID: Name
ID: Ryuya
ID: Asada
NEWLINE: 

ID: ID
ID: s1260064
NEWLINE: 

TIMES: *
DIVIDE: /
NEWLINE: 



ID: include
ID: stdio
ID: h
NEWLINE: 



ID: int
ID: gcd
LPAREN: (
ID: int
ID: int
RPAREN: )
SEMI: ;
NEWLINE: 



ID: int
ID: main
LPAREN: (
ID: int
ID: argc
ID: char
TIMES: *
ID: argv
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: a
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: b
NUMBER: 0
SEMI: ;
NEWLINE: 


ID: scanf
LPAREN: (
STRING: "%d %d"
ID: a
ID: b
RPAREN: )
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: gcd
LPAREN: (
ID: a
ID: b
RPAREN: )
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 



ID: int
ID: gcd
LPAREN: (
ID: int
ID: a
ID: int
ID: b
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: b
NUMBER: 0
RPAREN: )
NEWLINE: 

ID: return
ID: a
SEMI: ;
NEWLINE: 


ID: return
ID: gcd
LPAREN: (
ID: b
ID: a
ID: b
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

