DIVIDE: /
TIMES: *
NEWLINE: 

TIMES: *
ID: Argorithms
ID: and
ID: Data
ID: Structures
NEWLINE: 

TIMES: *
ID: Lectuire
NUMBER: 1
NEWLINE: 

TIMES: *
ID: Greatest
ID: Common
ID: Divisor
NEWLINE: 

TIMES: *
DIVIDE: /
NEWLINE: 


ID: include
ID: stdio
ID: h
NEWLINE: 


ID: define
ID: Swap_int
LPAREN: (
ID: a
ID: b
RPAREN: )
LBRACE: {
ID: int
ID: temp
ID: a
SEMI: ;
ID: a
ID: b
SEMI: ;
ID: b
ID: temp
SEMI: ;
RBRACE: }
NEWLINE: 



ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: x
ID: y
ID: d
SEMI: ;
NEWLINE: 


ID: scanf
LPAREN: (
STRING: "%d %d"
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: x
ID: y
RPAREN: )
ID: Swap_int
LPAREN: (
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 


ID: while
LPAREN: (
ID: y
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: d
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: y
ID: d
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: x
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
