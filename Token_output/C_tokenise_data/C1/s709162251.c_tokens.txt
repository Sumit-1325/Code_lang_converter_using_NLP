ID: include
ID: stdio
ID: h
NEWLINE: 


ID: define
ID: MAX
NUMBER: 10
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

COMMENT: // Your code here!
NEWLINE: 

ID: char
ID: tmp
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: int
ID: num1
ID: num2
ID: answer
NUMBER: 0
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: while
LPAREN: (
LPAREN: (
ID: tmp
ID: getchar
LPAREN: (
RPAREN: )
RPAREN: )
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: num1
LPAREN: (
ID: num1
TIMES: *
NUMBER: 10
RPAREN: )
PLUS: +
LPAREN: (
ID: tmp
MINUS: -
NUMBER: 0
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: while
LPAREN: (
LPAREN: (
ID: tmp
ID: getchar
LPAREN: (
RPAREN: )
RPAREN: )
ID: n
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: num2
LPAREN: (
ID: num2
TIMES: *
NUMBER: 10
RPAREN: )
PLUS: +
LPAREN: (
ID: tmp
MINUS: -
NUMBER: 0
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
SEMI: ;
NEWLINE: 

NEWLINE: 

NEWLINE: 

ID: while
LPAREN: (
ID: answer
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: num2
ID: num1
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: answer
ID: num1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: num2
ID: num1
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: num2
ID: num2
ID: num1
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: num2
NUMBER: 0
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: answer
ID: num1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: num1
ID: num1
ID: num2
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: num1
NUMBER: 0
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: answer
ID: num2
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: answer
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


