ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: a
ID: b
ID: i
ID: c
ID: d
ID: e
ID: f
ID: g
SEMI: ;
NEWLINE: 

ID: e
NUMBER: 1
SEMI: ;
NEWLINE: 

NEWLINE: 

NEWLINE: 

NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d %d"
ID: a
ID: b
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: a
ID: b
RPAREN: )
LBRACE: {
NEWLINE: 

ID: f
ID: a
SEMI: ;
NEWLINE: 

ID: a
ID: b
SEMI: ;
NEWLINE: 

ID: b
ID: f
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: b
ID: a
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: e
ID: a
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: g
ID: b
ID: a
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 1
SEMI: ;
ID: i
ID: g
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: g
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: c
ID: i
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: if
LPAREN: (
ID: b
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: d
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: c
ID: d
RPAREN: )
LBRACE: {
NEWLINE: 

ID: e
ID: c
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: e
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
