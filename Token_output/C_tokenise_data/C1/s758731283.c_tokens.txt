ID: include
ID: stdio
ID: h
NEWLINE: 


ID: void
ID: gcd
LPAREN: (
ID: int
ID: int
RPAREN: )
SEMI: ;
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: x
ID: y
SEMI: ;
NEWLINE: 


ID: scanf
LPAREN: (
STRING: "%d %d"
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

ID: gcd
LPAREN: (
ID: x
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: void
ID: gcd
LPAREN: (
ID: int
ID: x
ID: int
ID: y
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: n
ID: r
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: x
ID: y
RPAREN: )
LBRACE: {
NEWLINE: 

ID: while
LPAREN: (
ID: y
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: r
ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: x
ID: y
SEMI: ;
NEWLINE: 

ID: y
ID: r
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: x
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: while
LPAREN: (
ID: x
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: r
ID: y
ID: x
SEMI: ;
NEWLINE: 

ID: y
ID: x
SEMI: ;
NEWLINE: 

ID: x
ID: r
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: y
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

NEWLINE: 

