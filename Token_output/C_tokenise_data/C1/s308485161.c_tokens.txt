ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: euclid
LPAREN: (
ID: int
ID: a
ID: int
ID: b
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: temp
SEMI: ;
NEWLINE: 


ID: if
LPAREN: (
ID: a
ID: b
RPAREN: )
LBRACE: {
ID: temp
ID: a
SEMI: ;
ID: a
ID: b
SEMI: ;
ID: b
ID: temp
SEMI: ;
RBRACE: }
NEWLINE: 

ID: if
LPAREN: (
ID: b
NUMBER: 1
RPAREN: )
ID: return
MINUS: -
NUMBER: 1
SEMI: ;
NEWLINE: 


ID: if
LPAREN: (
ID: a
ID: b
NUMBER: 0
RPAREN: )
ID: return
ID: b
SEMI: ;
NEWLINE: 

ID: return
ID: euclid
LPAREN: (
ID: b
ID: a
ID: b
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: main
LPAREN: (
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: a
ID: b
ID: n
SEMI: ;
NEWLINE: 


ID: while
LPAREN: (
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: scanf
LPAREN: (
STRING: "%d, %d"
ID: a
ID: b
RPAREN: )
NUMBER: 2
RPAREN: )
ID: break
SEMI: ;
NEWLINE: 


ID: if
LPAREN: (
LPAREN: (
ID: n
ID: euclid
LPAREN: (
ID: a
ID: b
RPAREN: )
RPAREN: )
NUMBER: 0
RPAREN: )
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
