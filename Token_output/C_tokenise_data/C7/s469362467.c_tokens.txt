ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: len
NUMBER: 0
ID: i
NUMBER: 0
ID: j
SEMI: ;
NEWLINE: 

ID: char
ID: s
NUMBER: 11
ID: t
NUMBER: 11
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%s"
ID: s
RPAREN: )
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: s
ID: len
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
ID: len
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: t
ID: i
PLUS: +
PLUS: +
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
ID: if
LPAREN: (
ID: s
ID: len
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: t
ID: i
PLUS: +
PLUS: +
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
ID: if
LPAREN: (
ID: s
ID: len
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: t
MINUS: -
MINUS: -
ID: i
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: len
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: j
NUMBER: 0
SEMI: ;
ID: j
ID: i
SEMI: ;
ID: j
MINUS: -
MINUS: -
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c"
ID: t
ID: j
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "\n"
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
