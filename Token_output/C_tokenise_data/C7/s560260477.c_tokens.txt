ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: search
LPAREN: (
ID: char
ID: editor
RPAREN: )
SEMI: ;
NEWLINE: 


ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: char
ID: str
NUMBER: 11
SEMI: ;
NEWLINE: 

ID: char
ID: editor
NUMBER: 11
STRING: "          "
SEMI: ;
NEWLINE: 

ID: int
ID: n
NUMBER: 0
ID: i
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%s"
ID: str
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: str
ID: i
NUMBER: 0
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: str
ID: i
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: editor
ID: n
ID: str
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: n
MINUS: -
NUMBER: 1
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: editor
ID: n
MINUS: -
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: n
ID: search
LPAREN: (
ID: editor
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%s"
ID: editor
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: int
ID: search
LPAREN: (
ID: char
ID: editor
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: i
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: editor
ID: i
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: return
ID: i
SEMI: ;
NEWLINE: 

RBRACE: }
