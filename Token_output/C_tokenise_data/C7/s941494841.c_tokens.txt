ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: stdlib
ID: h
NEWLINE: 

ID: include
ID: string
ID: h
NEWLINE: 

ID: include
ID: math
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: char
ID: s
NUMBER: 11
SEMI: ;
NEWLINE: 

ID: int
ID: a
NUMBER: 20
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%s"
ID: s
RPAREN: )
SEMI: ;
NEWLINE: 

ID: int
ID: count
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: s
ID: i
NUMBER: 0
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: a
ID: count
NUMBER: 0
SEMI: ;
ID: count
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: s
ID: i
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: a
ID: count
NUMBER: 1
SEMI: ;
ID: count
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: count
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: a
ID: count
NUMBER: 3
SEMI: ;
ID: count
MINUS: -
MINUS: -
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
ID: continue
SEMI: ;
RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: a
ID: i
NUMBER: 3
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 




