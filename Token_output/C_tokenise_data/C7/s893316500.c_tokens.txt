ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: char
ID: str
NUMBER: 15
SEMI: ;
NEWLINE: 

ID: char
ID: modstr
NUMBER: 15
SEMI: ;
NEWLINE: 

ID: int
ID: length
NUMBER: 0
SEMI: ;
NEWLINE: 

LPAREN: (
ID: scanf
LPAREN: (
STRING: "%s"
ID: str
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: str
ID: i
NUMBER: 0
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: length
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: int
ID: j
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: length
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: str
ID: i
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: modstr
ID: j
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: j
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: str
ID: i
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: modstr
ID: i
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: j
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: str
ID: i
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: j
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

ID: j
MINUS: -
MINUS: -
SEMI: ;
NEWLINE: 

ID: modstr
ID: j
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%s"
ID: modstr
RPAREN: )
SEMI: ;
NEWLINE: 

NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
