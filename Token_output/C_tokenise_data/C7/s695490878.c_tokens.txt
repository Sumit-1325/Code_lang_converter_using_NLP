NEWLINE: 

ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: char
ID: s
NUMBER: 10000
ID: a
NUMBER: 10000
SEMI: ;
NEWLINE: 

ID: int
ID: i
ID: j
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%s"
ID: s
RPAREN: )
SEMI: ;
NEWLINE: 

ID: i
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: j
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: s
ID: i
NUMBER: 0
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
ID: i
NUMBER: 0
RPAREN: )
NEWLINE: 

ID: a
ID: j
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: else
NEWLINE: 

ID: if
LPAREN: (
ID: s
ID: i
NUMBER: 1
RPAREN: )
NEWLINE: 

ID: a
ID: j
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: else
NEWLINE: 

ID: if
LPAREN: (
ID: s
ID: i
ID: B
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: j
NUMBER: 0
RPAREN: )
NEWLINE: 

ID: goto
ID: x
SEMI: ;
NEWLINE: 

ID: else
NEWLINE: 

LBRACE: {
ID: j
ID: j
MINUS: -
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: goto
ID: x
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: j
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

ID: x
NEWLINE: 

ID: i
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%s"
ID: a
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

