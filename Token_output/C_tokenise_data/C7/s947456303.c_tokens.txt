ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 

ID: char
ID: box
NUMBER: 10
ID: a
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: int
ID: cnt
NUMBER: 0
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: a
ID: i
STRING: "\0"
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%c"
ID: a
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: a
ID: i
NUMBER: 0
ID: a
ID: i
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: box
ID: cnt
ID: a
ID: i
SEMI: ;
NEWLINE: 

ID: cnt
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
ID: else
ID: if
LPAREN: (
ID: key
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: box
ID: i
MINUS: -
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: i
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: box
ID: i
STRING: "\0"
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%s"
ID: box
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
