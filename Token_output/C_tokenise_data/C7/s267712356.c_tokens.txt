ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: char
ID: s
NUMBER: 4
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 4
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%c"
ID: s
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 


ID: if
LPAREN: (
ID: s
NUMBER: 0
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 1
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 2
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: ""
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c"
ID: s
NUMBER: 3
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: ""
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c"
ID: s
NUMBER: 3
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 2
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: ""
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c"
ID: s
NUMBER: 3
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: ""
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c"
ID: s
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 1
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 2
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: ""
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c"
ID: s
NUMBER: 3
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: ""
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c%c"
ID: s
NUMBER: 2
ID: s
NUMBER: 3
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 2
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: ""
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c%c"
ID: s
NUMBER: 0
ID: s
NUMBER: 3
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
NUMBER: 3
ID: B
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c%c"
ID: s
NUMBER: 0
ID: s
NUMBER: 1
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 


ID: else
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%c%c%c%c"
ID: s
NUMBER: 0
ID: s
NUMBER: 1
ID: s
NUMBER: 2
ID: s
NUMBER: 3
RPAREN: )
SEMI: ;
NEWLINE: 


RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
