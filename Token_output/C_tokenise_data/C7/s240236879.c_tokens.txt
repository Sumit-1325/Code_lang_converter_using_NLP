ID: include
ID: stdio
ID: h
NEWLINE: 

ID: include
ID: string
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: int
ID: i
ID: len
ID: l
NUMBER: 0
ID: l1
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: char
ID: a
NUMBER: 50
ID: b
NUMBER: 50
ID: c
NUMBER: 50
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%s"
ID: a
RPAREN: )
SEMI: ;
NEWLINE: 

ID: len
ID: strlen
LPAREN: (
ID: a
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: len
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: a
ID: i
NUMBER: 0
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: b
ID: l
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: l
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: a
ID: i
NUMBER: 1
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: b
ID: l
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: l
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: a
ID: i
ID: B
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: l
NUMBER: 0
RPAREN: )
NEWLINE: 

ID: b
ID: l
MINUS: -
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: l
MINUS: -
MINUS: -
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
ID: l
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: b
ID: i
RPAREN: )
NEWLINE: 

LBRACE: {
NEWLINE: 

ID: c
ID: l1
ID: b
ID: i
SEMI: ;
NEWLINE: 

ID: l1
PLUS: +
PLUS: +
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: c
ID: l1
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%s"
ID: c
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
