ID: include
ID: stdio
ID: h
NEWLINE: 



ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: char
ID: s
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: char
ID: ans
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: int
ID: k
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%s"
ID: s
RPAREN: )
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: s
ID: i
NUMBER: 0
SEMI: ;
PLUS: +
PLUS: +
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: s
ID: i
NUMBER: 0
ID: s
ID: i
NUMBER: 1
RPAREN: )
LBRACE: {
NEWLINE: 

ID: ans
ID: k
ID: s
ID: i
SEMI: ;
NEWLINE: 

PLUS: +
PLUS: +
ID: k
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: else
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: k
NUMBER: 0
RPAREN: )
LBRACE: {
NEWLINE: 

MINUS: -
MINUS: -
ID: k
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: ans
ID: k
NUMBER: 0
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%s"
ID: ans
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

