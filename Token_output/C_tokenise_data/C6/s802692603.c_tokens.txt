ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: n
SEMI: ;
NEWLINE: 

ID: int
ID: c
NUMBER: 3
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: c
NUMBER: 0
ID: n
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: c
NUMBER: 1
LPAREN: (
ID: n
DIVIDE: /
NUMBER: 10
RPAREN: )
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: c
NUMBER: 2
LPAREN: (
ID: n
DIVIDE: /
NUMBER: 100
RPAREN: )
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: for
LPAREN: (
ID: int
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 3
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: switch
LPAREN: (
ID: c
ID: i
RPAREN: )
LBRACE: {
NEWLINE: 

ID: case
NUMBER: 1
NEWLINE: 

ID: c
ID: i
NUMBER: 9
SEMI: ;
ID: break
SEMI: ;
NEWLINE: 

ID: case
NUMBER: 9
NEWLINE: 

ID: c
ID: i
NUMBER: 1
SEMI: ;
ID: break
SEMI: ;
NEWLINE: 

ID: default
NEWLINE: 

ID: break
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
NUMBER: 100
TIMES: *
ID: c
NUMBER: 2
PLUS: +
NUMBER: 10
TIMES: *
ID: c
NUMBER: 1
PLUS: +
ID: c
NUMBER: 0
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
