ID: include
ID: stdio
ID: h
NEWLINE: 

ID: int
ID: main
LPAREN: (
ID: void
RPAREN: )
LBRACE: {
NEWLINE: 


ID: int
ID: n
ID: i
ID: k
NUMBER: 3
SEMI: ;
NEWLINE: 


ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 


ID: i
NUMBER: 2
SEMI: ;
NEWLINE: 

ID: while
LPAREN: (
ID: n
RPAREN: )
LBRACE: {
NEWLINE: 

ID: k
ID: i
ID: n
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: n
ID: n
DIVIDE: /
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: i
MINUS: -
MINUS: -
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 3
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: if
LPAREN: (
ID: k
ID: i
NUMBER: 1
RPAREN: )
NEWLINE: 

ID: k
ID: i
NUMBER: 9
SEMI: ;
NEWLINE: 

ID: else
ID: if
LPAREN: (
ID: k
ID: i
NUMBER: 9
RPAREN: )
NEWLINE: 

ID: k
ID: i
NUMBER: 1
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: for
LPAREN: (
ID: i
NUMBER: 0
SEMI: ;
ID: i
NUMBER: 3
SEMI: ;
ID: i
PLUS: +
PLUS: +
RPAREN: )
LBRACE: {
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d"
ID: k
ID: i
RPAREN: )
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

ID: printf
LPAREN: (
STRING: "\n"
RPAREN: )
SEMI: ;
NEWLINE: 



ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

