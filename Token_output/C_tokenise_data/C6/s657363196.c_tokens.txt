ID: include
ID: stdio
ID: h
NEWLINE: 


ID: int
ID: main
LPAREN: (
RPAREN: )
LBRACE: {
NEWLINE: 

ID: int
ID: n
ID: m
SEMI: ;
NEWLINE: 

ID: int
ID: a
ID: b
ID: c
SEMI: ;
NEWLINE: 

ID: scanf
LPAREN: (
STRING: "%d"
ID: n
RPAREN: )
SEMI: ;
NEWLINE: 

ID: a
ID: n
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: b
LPAREN: (
ID: n
DIVIDE: /
NUMBER: 10
RPAREN: )
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: c
LPAREN: (
ID: n
DIVIDE: /
NUMBER: 100
RPAREN: )
NUMBER: 10
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: a
NUMBER: 1
RPAREN: )
ID: a
NUMBER: 9
SEMI: ;
NEWLINE: 

ID: else
ID: a
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: b
NUMBER: 1
RPAREN: )
ID: b
NUMBER: 9
SEMI: ;
NEWLINE: 

ID: else
ID: b
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: if
LPAREN: (
ID: c
NUMBER: 1
RPAREN: )
ID: c
NUMBER: 9
SEMI: ;
NEWLINE: 

ID: else
ID: c
NUMBER: 1
SEMI: ;
NEWLINE: 

ID: m
ID: a
PLUS: +
NUMBER: 10
TIMES: *
ID: b
PLUS: +
NUMBER: 100
TIMES: *
ID: c
SEMI: ;
NEWLINE: 

ID: printf
LPAREN: (
STRING: "%d\n"
ID: m
RPAREN: )
SEMI: ;
NEWLINE: 

ID: return
NUMBER: 0
SEMI: ;
NEWLINE: 

RBRACE: }
NEWLINE: 

