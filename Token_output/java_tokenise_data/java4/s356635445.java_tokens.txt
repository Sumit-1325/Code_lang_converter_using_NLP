Keyword "import" line 1, position 1
Identifier "java" line 1, position 8
Separator "." line 1, position 12
Identifier "io" line 1, position 13
Separator "." line 1, position 15
Identifier "IOException" line 1, position 16
Separator ";" line 1, position 27
Keyword "import" line 2, position 1
Identifier "java" line 2, position 8
Separator "." line 2, position 12
Identifier "io" line 2, position 13
Separator "." line 2, position 15
Identifier "InputStream" line 2, position 16
Separator ";" line 2, position 27
Keyword "import" line 3, position 1
Identifier "java" line 3, position 8
Separator "." line 3, position 12
Identifier "util" line 3, position 13
Separator "." line 3, position 17
Identifier "ArrayList" line 3, position 18
Separator ";" line 3, position 27
Keyword "import" line 4, position 1
Identifier "java" line 4, position 8
Separator "." line 4, position 12
Identifier "util" line 4, position 13
Separator "." line 4, position 17
Identifier "HashMap" line 4, position 18
Separator ";" line 4, position 25
Keyword "import" line 5, position 1
Identifier "java" line 5, position 8
Separator "." line 5, position 12
Identifier "util" line 5, position 13
Separator "." line 5, position 17
Identifier "HashSet" line 5, position 18
Separator ";" line 5, position 25
Keyword "import" line 6, position 1
Identifier "java" line 6, position 8
Separator "." line 6, position 12
Identifier "util" line 6, position 13
Separator "." line 6, position 17
Identifier "List" line 6, position 18
Separator ";" line 6, position 22
Keyword "import" line 7, position 1
Identifier "java" line 7, position 8
Separator "." line 7, position 12
Identifier "util" line 7, position 13
Separator "." line 7, position 17
Identifier "Map" line 7, position 18
Separator ";" line 7, position 21
Keyword "import" line 8, position 1
Identifier "java" line 8, position 8
Separator "." line 8, position 12
Identifier "util" line 8, position 13
Separator "." line 8, position 17
Identifier "Optional" line 8, position 18
Separator ";" line 8, position 26
Keyword "import" line 9, position 1
Identifier "java" line 9, position 8
Separator "." line 9, position 12
Identifier "util" line 9, position 13
Separator "." line 9, position 17
Identifier "Set" line 9, position 18
Separator ";" line 9, position 21
Keyword "import" line 10, position 1
Identifier "java" line 10, position 8
Separator "." line 10, position 12
Identifier "util" line 10, position 13
Separator "." line 10, position 17
Identifier "stream" line 10, position 18
Separator "." line 10, position 24
Identifier "IntStream" line 10, position 25
Separator ";" line 10, position 34
Modifier "public" line 12, position 1
Keyword "class" line 12, position 8
Identifier "Main" line 12, position 14
Separator "{" line 12, position 19
Modifier "public" line 13, position 2
Modifier "static" line 13, position 9
Keyword "void" line 13, position 16
Identifier "main" line 13, position 21
Separator "(" line 13, position 25
Identifier "String" line 13, position 26
Separator "[" line 13, position 32
Separator "]" line 13, position 33
Identifier "args" line 13, position 35
Separator ")" line 13, position 39
Separator "{" line 13, position 41
Identifier "Main" line 14, position 3
Identifier "main" line 14, position 8
Operator "=" line 14, position 13
Keyword "new" line 14, position 15
Identifier "Main" line 14, position 19
Separator "(" line 14, position 23
Separator ")" line 14, position 24
Separator ";" line 14, position 25
Identifier "main" line 15, position 3
Separator "." line 15, position 7
Identifier "solve" line 15, position 8
Separator "(" line 15, position 13
Separator ")" line 15, position 14
Separator ";" line 15, position 15
Separator "}" line 16, position 2
Modifier "private" line 18, position 2
Keyword "void" line 18, position 10
Identifier "solve" line 18, position 15
Separator "(" line 18, position 20
Separator ")" line 18, position 21
Separator "{" line 18, position 23
Identifier "Scanner" line 19, position 3
Identifier "sc" line 19, position 11
Operator "=" line 19, position 14
Keyword "new" line 19, position 16
Identifier "Scanner" line 19, position 20
Separator "(" line 19, position 27
Identifier "System" line 19, position 28
Separator "." line 19, position 34
Identifier "in" line 19, position 35
Separator ")" line 19, position 37
Separator ";" line 19, position 38
BasicType "int" line 20, position 3
Identifier "N" line 20, position 7
Operator "=" line 20, position 9
Identifier "sc" line 20, position 11
Separator "." line 20, position 13
Identifier "nextInt" line 20, position 14
Separator "(" line 20, position 21
Separator ")" line 20, position 22
Separator ";" line 20, position 23
BasicType "int" line 21, position 3
Identifier "max" line 21, position 7
Operator "=" line 21, position 11
DecimalInteger "0" line 21, position 13
Separator ";" line 21, position 14
BasicType "int" line 22, position 3
Identifier "maxId" line 22, position 7
Operator "=" line 22, position 13
Operator "-" line 22, position 15
DecimalInteger "1" line 22, position 16
Separator ";" line 22, position 17
BasicType "int" line 23, position 3
Identifier "second" line 23, position 7
Operator "=" line 23, position 14
DecimalInteger "0" line 23, position 16
Separator ";" line 23, position 17
BasicType "int" line 24, position 3
Identifier "secondId" line 24, position 7
Operator "=" line 24, position 16
Operator "-" line 24, position 18
DecimalInteger "1" line 24, position 19
Separator ";" line 24, position 20
Keyword "for" line 25, position 3
Separator "(" line 25, position 7
BasicType "int" line 25, position 8
Identifier "i" line 25, position 12
Operator "=" line 25, position 14
DecimalInteger "1" line 25, position 16
Separator ";" line 25, position 17
Identifier "i" line 25, position 19
Operator "<=" line 25, position 21
Identifier "N" line 25, position 24
Separator ";" line 25, position 25
Identifier "i" line 25, position 27
Operator "++" line 25, position 28
Separator ")" line 25, position 30
Separator "{" line 25, position 32
BasicType "int" line 26, position 4
Identifier "tmp" line 26, position 8
Operator "=" line 26, position 12
Identifier "sc" line 26, position 14
Separator "." line 26, position 16
Identifier "nextInt" line 26, position 17
Separator "(" line 26, position 24
Separator ")" line 26, position 25
Separator ";" line 26, position 26
Keyword "if" line 27, position 4
Separator "(" line 27, position 7
Identifier "max" line 27, position 8
Operator "<" line 27, position 12
Identifier "tmp" line 27, position 14
Separator ")" line 27, position 17
Separator "{" line 27, position 19
Identifier "second" line 28, position 5
Operator "=" line 28, position 12
Identifier "max" line 28, position 14
Separator ";" line 28, position 17
Identifier "secondId" line 29, position 5
Operator "=" line 29, position 14
Identifier "maxId" line 29, position 16
Separator ";" line 29, position 21
Identifier "max" line 30, position 5
Operator "=" line 30, position 9
Identifier "tmp" line 30, position 11
Separator ";" line 30, position 14
Identifier "maxId" line 31, position 5
Operator "=" line 31, position 11
Identifier "i" line 31, position 13
Separator ";" line 31, position 14
Separator "}" line 32, position 4
Keyword "else" line 32, position 6
Keyword "if" line 32, position 11
Separator "(" line 32, position 14
Identifier "second" line 32, position 15
Operator "<" line 32, position 22
Identifier "tmp" line 32, position 24
Separator ")" line 32, position 27
Separator "{" line 32, position 29
Identifier "second" line 33, position 5
Operator "=" line 33, position 12
Identifier "tmp" line 33, position 14
Separator ";" line 33, position 17
Identifier "secondId" line 34, position 5
Operator "=" line 34, position 14
Identifier "i" line 34, position 16
Separator ";" line 34, position 17
Separator "}" line 35, position 4
Separator "}" line 36, position 3
Keyword "for" line 37, position 3
Separator "(" line 37, position 7
BasicType "int" line 37, position 8
Identifier "i" line 37, position 12
Operator "=" line 37, position 14
DecimalInteger "1" line 37, position 16
Separator ";" line 37, position 17
Identifier "i" line 37, position 19
Operator "<=" line 37, position 21
Identifier "N" line 37, position 24
Separator ";" line 37, position 25
Identifier "i" line 37, position 27
Operator "++" line 37, position 28
Separator ")" line 37, position 30
Separator "{" line 37, position 32
Keyword "if" line 38, position 4
Separator "(" line 38, position 7
Identifier "i" line 38, position 8
Operator "==" line 38, position 10
Identifier "maxId" line 38, position 13
Separator ")" line 38, position 18
Separator "{" line 38, position 20
Identifier "System" line 39, position 5
Separator "." line 39, position 11
Identifier "out" line 39, position 12
Separator "." line 39, position 15
Identifier "println" line 39, position 16
Separator "(" line 39, position 23
Identifier "second" line 39, position 24
Separator ")" line 39, position 30
Separator ";" line 39, position 31
Separator "}" line 40, position 4
Keyword "else" line 40, position 6
Separator "{" line 40, position 11
Identifier "System" line 41, position 5
Separator "." line 41, position 11
Identifier "out" line 41, position 12
Separator "." line 41, position 15
Identifier "println" line 41, position 16
Separator "(" line 41, position 23
Identifier "max" line 41, position 24
Separator ")" line 41, position 27
Separator ";" line 41, position 28
Separator "}" line 42, position 4
Separator "}" line 43, position 3
Separator "}" line 44, position 2
Keyword "class" line 46, position 2
Identifier "Scanner" line 46, position 8
Separator "{" line 46, position 16
Modifier "private" line 47, position 3
Identifier "InputStream" line 47, position 11
Identifier "in" line 47, position 23
Separator ";" line 47, position 25
Modifier "private" line 48, position 3
BasicType "byte" line 48, position 11
Separator "[" line 48, position 15
Separator "]" line 48, position 16
Identifier "buffer" line 48, position 18
Operator "=" line 48, position 25
Keyword "new" line 48, position 27
BasicType "byte" line 48, position 31
Separator "[" line 48, position 35
DecimalInteger "1024" line 48, position 36
Separator "]" line 48, position 40
Separator ";" line 48, position 41
Modifier "private" line 49, position 3
BasicType "int" line 49, position 11
Identifier "index" line 49, position 15
Separator ";" line 49, position 20
Modifier "private" line 50, position 3
BasicType "int" line 50, position 11
Identifier "length" line 50, position 15
Separator ";" line 50, position 21
Modifier "public" line 52, position 3
Identifier "Scanner" line 52, position 10
Separator "(" line 52, position 17
Identifier "InputStream" line 52, position 18
Identifier "in" line 52, position 30
Separator ")" line 52, position 32
Separator "{" line 52, position 34
Keyword "this" line 53, position 4
Separator "." line 53, position 8
Identifier "in" line 53, position 9
Operator "=" line 53, position 12
Identifier "in" line 53, position 14
Separator ";" line 53, position 16
Separator "}" line 54, position 3
Modifier "private" line 56, position 3
BasicType "boolean" line 56, position 11
Identifier "isPrintableChar" line 56, position 19
Separator "(" line 56, position 34
BasicType "int" line 56, position 35
Identifier "c" line 56, position 39
Separator ")" line 56, position 40
Separator "{" line 56, position 42
Keyword "return" line 57, position 4
String "'!'" line 57, position 11
Operator "<=" line 57, position 15
Identifier "c" line 57, position 18
Operator "&&" line 57, position 20
Identifier "c" line 57, position 23
Operator "<=" line 57, position 25
String "'~'" line 57, position 28
Separator ";" line 57, position 31
Separator "}" line 58, position 3
Modifier "private" line 60, position 3
BasicType "boolean" line 60, position 11
Identifier "isDigit" line 60, position 19
Separator "(" line 60, position 26
BasicType "int" line 60, position 27
Identifier "c" line 60, position 31
Separator ")" line 60, position 32
Separator "{" line 60, position 34
Keyword "return" line 61, position 4
String "'0'" line 61, position 11
Operator "<=" line 61, position 15
Identifier "c" line 61, position 18
Operator "&&" line 61, position 20
Identifier "c" line 61, position 23
Operator "<=" line 61, position 25
String "'9'" line 61, position 28
Separator ";" line 61, position 31
Separator "}" line 62, position 3
Modifier "private" line 64, position 3
BasicType "boolean" line 64, position 11
Identifier "hasNextByte" line 64, position 19
Separator "(" line 64, position 30
Separator ")" line 64, position 31
Separator "{" line 64, position 33
Keyword "if" line 65, position 4
Separator "(" line 65, position 7
Identifier "index" line 65, position 8
Operator "<" line 65, position 14
Identifier "length" line 65, position 16
Separator ")" line 65, position 22
Separator "{" line 65, position 24
Keyword "return" line 66, position 5
Boolean "true" line 66, position 12
Separator ";" line 66, position 16
Separator "}" line 67, position 4
Keyword "else" line 67, position 6
Separator "{" line 67, position 11
Keyword "try" line 68, position 5
Separator "{" line 68, position 9
Identifier "length" line 69, position 6
Operator "=" line 69, position 13
Identifier "in" line 69, position 15
Separator "." line 69, position 17
Identifier "read" line 69, position 18
Separator "(" line 69, position 22
Identifier "buffer" line 69, position 23
Separator ")" line 69, position 29
Separator ";" line 69, position 30
Identifier "index" line 70, position 6
Operator "=" line 70, position 12
DecimalInteger "0" line 70, position 14
Separator ";" line 70, position 15
Separator "}" line 71, position 5
Keyword "catch" line 71, position 7
Separator "(" line 71, position 13
Identifier "IOException" line 71, position 14
Identifier "e" line 71, position 26
Separator ")" line 71, position 27
Separator "{" line 71, position 29
Identifier "e" line 72, position 6
Separator "." line 72, position 7
Identifier "printStackTrace" line 72, position 8
Separator "(" line 72, position 23
Separator ")" line 72, position 24
Separator ";" line 72, position 25
Separator "}" line 73, position 5
Keyword "return" line 74, position 5
Identifier "length" line 74, position 12
Operator ">" line 74, position 19
DecimalInteger "0" line 74, position 21
Separator ";" line 74, position 22
Separator "}" line 75, position 4
Separator "}" line 76, position 3
Modifier "private" line 78, position 3
BasicType "boolean" line 78, position 11
Identifier "hasNext" line 78, position 19
Separator "(" line 78, position 26
Separator ")" line 78, position 27
Separator "{" line 78, position 29
Keyword "while" line 79, position 4
Separator "(" line 79, position 10
Identifier "hasNextByte" line 79, position 11
Separator "(" line 79, position 22
Separator ")" line 79, position 23
Operator "&&" line 79, position 25
Operator "!" line 79, position 28
Identifier "isPrintableChar" line 79, position 29
Separator "(" line 79, position 44
Identifier "buffer" line 79, position 45
Separator "[" line 79, position 51
Identifier "index" line 79, position 52
Separator "]" line 79, position 57
Separator ")" line 79, position 58
Separator ")" line 79, position 59
Separator "{" line 79, position 61
Identifier "index" line 80, position 5
Operator "++" line 80, position 10
Separator ";" line 80, position 12
Separator "}" line 81, position 4
Keyword "return" line 82, position 4
Identifier "hasNextByte" line 82, position 11
Separator "(" line 82, position 22
Separator ")" line 82, position 23
Separator ";" line 82, position 24
Separator "}" line 83, position 3
Modifier "private" line 85, position 3
BasicType "int" line 85, position 11
Identifier "readByte" line 85, position 15
Separator "(" line 85, position 23
Separator ")" line 85, position 24
Separator "{" line 85, position 26
Keyword "return" line 86, position 4
Identifier "hasNextByte" line 86, position 11
Separator "(" line 86, position 22
Separator ")" line 86, position 23
Operator "?" line 86, position 25
Identifier "buffer" line 86, position 27
Separator "[" line 86, position 33
Identifier "index" line 86, position 34
Operator "++" line 86, position 39
Separator "]" line 86, position 41
Operator ":" line 86, position 43
Operator "-" line 86, position 45
DecimalInteger "1" line 86, position 46
Separator ";" line 86, position 47
Separator "}" line 87, position 3
Modifier "public" line 89, position 3
Identifier "String" line 89, position 10
Identifier "next" line 89, position 17
Separator "(" line 89, position 21
Separator ")" line 89, position 22
Separator "{" line 89, position 24
Keyword "if" line 90, position 4
Separator "(" line 90, position 7
Operator "!" line 90, position 8
Identifier "hasNext" line 90, position 9
Separator "(" line 90, position 16
Separator ")" line 90, position 17
Separator ")" line 90, position 18
Separator "{" line 90, position 20
Keyword "throw" line 91, position 5
Keyword "new" line 91, position 11
Identifier "RuntimeException" line 91, position 15
Separator "(" line 91, position 31
String ""no input"" line 91, position 32
Separator ")" line 91, position 42
Separator ";" line 91, position 43
Separator "}" line 92, position 4
Identifier "StringBuilder" line 93, position 4
Identifier "sb" line 93, position 18
Operator "=" line 93, position 21
Keyword "new" line 93, position 23
Identifier "StringBuilder" line 93, position 27
Separator "(" line 93, position 40
Separator ")" line 93, position 41
Separator ";" line 93, position 42
BasicType "int" line 94, position 4
Identifier "b" line 94, position 8
Operator "=" line 94, position 10
Identifier "readByte" line 94, position 12
Separator "(" line 94, position 20
Separator ")" line 94, position 21
Separator ";" line 94, position 22
Keyword "while" line 95, position 4
Separator "(" line 95, position 10
Identifier "isPrintableChar" line 95, position 11
Separator "(" line 95, position 26
Identifier "b" line 95, position 27
Separator ")" line 95, position 28
Separator ")" line 95, position 29
Separator "{" line 95, position 31
Identifier "sb" line 96, position 5
Separator "." line 96, position 7
Identifier "appendCodePoint" line 96, position 8
Separator "(" line 96, position 23
Identifier "b" line 96, position 24
Separator ")" line 96, position 25
Separator ";" line 96, position 26
Identifier "b" line 97, position 5
Operator "=" line 97, position 7
Identifier "readByte" line 97, position 9
Separator "(" line 97, position 17
Separator ")" line 97, position 18
Separator ";" line 97, position 19
Separator "}" line 98, position 4
Keyword "return" line 99, position 4
Identifier "sb" line 99, position 11
Separator "." line 99, position 13
Identifier "toString" line 99, position 14
Separator "(" line 99, position 22
Separator ")" line 99, position 23
Separator ";" line 99, position 24
Separator "}" line 100, position 3
Modifier "public" line 102, position 3
BasicType "long" line 102, position 10
Identifier "nextLong" line 102, position 15
Separator "(" line 102, position 23
Separator ")" line 102, position 24
Separator "{" line 102, position 26
Keyword "if" line 103, position 4
Separator "(" line 103, position 7
Operator "!" line 103, position 8
Identifier "hasNext" line 103, position 9
Separator "(" line 103, position 16
Separator ")" line 103, position 17
Separator ")" line 103, position 18
Separator "{" line 103, position 20
Keyword "throw" line 104, position 5
Keyword "new" line 104, position 11
Identifier "RuntimeException" line 104, position 15
Separator "(" line 104, position 31
String ""no input"" line 104, position 32
Separator ")" line 104, position 42
Separator ";" line 104, position 43
Separator "}" line 105, position 4
BasicType "long" line 106, position 4
Identifier "value" line 106, position 9
Operator "=" line 106, position 15
DecimalInteger "0L" line 106, position 17
Separator ";" line 106, position 19
BasicType "boolean" line 107, position 4
Identifier "minus" line 107, position 12
Operator "=" line 107, position 18
Boolean "false" line 107, position 20
Separator ";" line 107, position 25
BasicType "int" line 108, position 4
Identifier "b" line 108, position 8
Operator "=" line 108, position 10
Identifier "readByte" line 108, position 12
Separator "(" line 108, position 20
Separator ")" line 108, position 21
Separator ";" line 108, position 22
Keyword "if" line 109, position 4
Separator "(" line 109, position 7
Identifier "b" line 109, position 8
Operator "==" line 109, position 10
String "'-'" line 109, position 13
Separator ")" line 109, position 16
Separator "{" line 109, position 18
Identifier "minus" line 110, position 5
Operator "=" line 110, position 11
Boolean "true" line 110, position 13
Separator ";" line 110, position 17
Identifier "b" line 111, position 5
Operator "=" line 111, position 7
Identifier "readByte" line 111, position 9
Separator "(" line 111, position 17
Separator ")" line 111, position 18
Separator ";" line 111, position 19
Separator "}" line 112, position 4
Keyword "while" line 113, position 4
Separator "(" line 113, position 10
Identifier "isPrintableChar" line 113, position 11
Separator "(" line 113, position 26
Identifier "b" line 113, position 27
Separator ")" line 113, position 28
Separator ")" line 113, position 29
Separator "{" line 113, position 31
Keyword "if" line 114, position 5
Separator "(" line 114, position 8
Identifier "isDigit" line 114, position 9
Separator "(" line 114, position 16
Identifier "b" line 114, position 17
Separator ")" line 114, position 18
Separator ")" line 114, position 19
Separator "{" line 114, position 21
Identifier "value" line 115, position 6
Operator "=" line 115, position 12
Identifier "value" line 115, position 14
Operator "*" line 115, position 20
DecimalInteger "10" line 115, position 22
Operator "+" line 115, position 25
Separator "(" line 115, position 27
Identifier "b" line 115, position 28
Operator "-" line 115, position 30
String "'0'" line 115, position 32
Separator ")" line 115, position 35
Separator ";" line 115, position 36
Separator "}" line 116, position 5
Identifier "b" line 117, position 5
Operator "=" line 117, position 7
Identifier "readByte" line 117, position 9
Separator "(" line 117, position 17
Separator ")" line 117, position 18
Separator ";" line 117, position 19
Separator "}" line 118, position 4
Keyword "return" line 119, position 4
Identifier "minus" line 119, position 11
Operator "?" line 119, position 17
Operator "-" line 119, position 19
Identifier "value" line 119, position 20
Operator ":" line 119, position 26
Identifier "value" line 119, position 28
Separator ";" line 119, position 33
Separator "}" line 120, position 3
Modifier "public" line 122, position 3
BasicType "int" line 122, position 10
Identifier "nextInt" line 122, position 14
Separator "(" line 122, position 21
Separator ")" line 122, position 22
Separator "{" line 122, position 24
Keyword "return" line 123, position 4
Separator "(" line 123, position 11
BasicType "int" line 123, position 12
Separator ")" line 123, position 15
Identifier "nextLong" line 123, position 16
Separator "(" line 123, position 24
Separator ")" line 123, position 25
Separator ";" line 123, position 26
Separator "}" line 124, position 3
Modifier "public" line 126, position 3
BasicType "double" line 126, position 10
Identifier "nextDouble" line 126, position 17
Separator "(" line 126, position 27
Separator ")" line 126, position 28
Separator "{" line 126, position 30
Keyword "return" line 127, position 4
Identifier "Double" line 127, position 11
Separator "." line 127, position 17
Identifier "parseDouble" line 127, position 18
Separator "(" line 127, position 29
Identifier "next" line 127, position 30
Separator "(" line 127, position 34
Separator ")" line 127, position 35
Separator ")" line 127, position 36
Separator ";" line 127, position 37
Separator "}" line 128, position 3
Separator "}" line 129, position 2
Keyword "interface" line 131, position 2
Identifier "CombCalculator" line 131, position 12
Separator "{" line 131, position 27
BasicType "long" line 132, position 3
Identifier "comb" line 132, position 8
Separator "(" line 132, position 12
BasicType "int" line 132, position 13
Identifier "n" line 132, position 17
Separator "," line 132, position 18
BasicType "int" line 132, position 20
Identifier "m" line 132, position 24
Separator ")" line 132, position 25
Separator ";" line 132, position 26
Separator "}" line 133, position 2
Keyword "interface" line 135, position 2
Identifier "MobiusFunction" line 135, position 12
Separator "{" line 135, position 27
BasicType "int" line 136, position 3
Identifier "get" line 136, position 7
Separator "(" line 136, position 10
BasicType "int" line 136, position 11
Identifier "n" line 136, position 15
Separator ")" line 136, position 16
Separator ";" line 136, position 17
Separator "}" line 137, position 2
Keyword "class" line 143, position 2
Identifier "SieveMobiusFunction" line 143, position 8
Keyword "implements" line 143, position 28
Identifier "MobiusFunction" line 143, position 39
Separator "{" line 143, position 54
BasicType "int" line 144, position 3
Identifier "size" line 144, position 7
Separator ";" line 144, position 11
BasicType "int" line 145, position 3
Separator "[" line 145, position 6
Separator "]" line 145, position 7
Identifier "mobiusFunctionValues" line 145, position 9
Separator ";" line 145, position 29
Modifier "public" line 147, position 3
Identifier "SieveMobiusFunction" line 147, position 10
Separator "(" line 147, position 29
BasicType "int" line 147, position 30
Identifier "size" line 147, position 34
Separator ")" line 147, position 38
Separator "{" line 147, position 40
Keyword "this" line 148, position 4
Separator "." line 148, position 8
Identifier "size" line 148, position 9
Operator "=" line 148, position 14
Identifier "size" line 148, position 16
Separator ";" line 148, position 20
Identifier "mobiusFunctionValues" line 149, position 4
Operator "=" line 149, position 25
Keyword "new" line 149, position 27
BasicType "int" line 149, position 31
Separator "[" line 149, position 34
Identifier "size" line 149, position 35
Separator "]" line 149, position 39
Separator ";" line 149, position 40
Identifier "mobiusFunctionValues" line 151, position 4
Separator "[" line 151, position 24
DecimalInteger "0" line 151, position 25
Separator "]" line 151, position 26
Operator "=" line 151, position 28
DecimalInteger "0" line 151, position 30
Separator ";" line 151, position 31
Identifier "mobiusFunctionValues" line 152, position 4
Separator "[" line 152, position 24
DecimalInteger "1" line 152, position 25
Separator "]" line 152, position 26
Operator "=" line 152, position 28
DecimalInteger "1" line 152, position 30
Separator ";" line 152, position 31
Keyword "for" line 153, position 4
Separator "(" line 153, position 8
BasicType "int" line 153, position 9
Identifier "i" line 153, position 13
Operator "=" line 153, position 15
DecimalInteger "2" line 153, position 17
Separator ";" line 153, position 18
Identifier "i" line 153, position 20
Operator "<" line 153, position 22
Identifier "size" line 153, position 24
Separator ";" line 153, position 28
Identifier "i" line 153, position 30
Operator "++" line 153, position 31
Separator ")" line 153, position 33
Separator "{" line 153, position 35
Identifier "mobiusFunctionValues" line 154, position 5
Separator "[" line 154, position 25
Identifier "i" line 154, position 26
Separator "]" line 154, position 27
Operator "=" line 154, position 29
DecimalInteger "1" line 154, position 31
Separator ";" line 154, position 32
Separator "}" line 155, position 4
Keyword "for" line 156, position 4
Separator "(" line 156, position 8
BasicType "int" line 156, position 9
Identifier "i" line 156, position 13
Operator "=" line 156, position 15
DecimalInteger "2" line 156, position 17
Separator ";" line 156, position 18
Identifier "i" line 156, position 20
Operator "*" line 156, position 22
Identifier "i" line 156, position 24
Operator "<" line 156, position 26
Identifier "size" line 156, position 28
Separator ";" line 156, position 32
Identifier "i" line 156, position 34
Operator "++" line 156, position 35
Separator ")" line 156, position 37
Separator "{" line 156, position 39
Keyword "for" line 157, position 5
Separator "(" line 157, position 9
BasicType "int" line 157, position 10
Identifier "k" line 157, position 14
Operator "=" line 157, position 16
DecimalInteger "1" line 157, position 18
Separator ";" line 157, position 19
Identifier "i" line 157, position 21
Operator "*" line 157, position 23
Identifier "i" line 157, position 25
Operator "*" line 157, position 27
Identifier "k" line 157, position 29
Operator "<" line 157, position 31
Identifier "size" line 157, position 33
Separator ";" line 157, position 37
Identifier "k" line 157, position 39
Operator "++" line 157, position 40
Separator ")" line 157, position 42
Separator "{" line 157, position 44
Identifier "mobiusFunctionValues" line 158, position 6
Separator "[" line 158, position 26
Identifier "i" line 158, position 27
Operator "*" line 158, position 29
Identifier "i" line 158, position 31
Operator "*" line 158, position 33
Identifier "k" line 158, position 35
Separator "]" line 158, position 36
Operator "*=" line 158, position 38
DecimalInteger "0" line 158, position 41
Separator ";" line 158, position 42
Separator "}" line 159, position 5
Separator "}" line 160, position 4
Keyword "for" line 162, position 4
Separator "(" line 162, position 8
BasicType "int" line 162, position 9
Identifier "i" line 162, position 13
Operator "=" line 162, position 15
DecimalInteger "2" line 162, position 17
Separator ";" line 162, position 18
Identifier "i" line 162, position 20
Operator "<" line 162, position 22
Identifier "size" line 162, position 24
Separator ";" line 162, position 28
Identifier "i" line 162, position 30
Operator "++" line 162, position 31
Separator ")" line 162, position 33
Separator "{" line 162, position 35
Keyword "if" line 163, position 5
Separator "(" line 163, position 8
Identifier "mobiusFunctionValues" line 163, position 9
Separator "[" line 163, position 29
Identifier "i" line 163, position 30
Separator "]" line 163, position 31
Operator "==" line 163, position 33
DecimalInteger "1" line 163, position 36
Separator ")" line 163, position 37
Separator "{" line 163, position 39
Keyword "for" line 164, position 6
Separator "(" line 164, position 10
BasicType "int" line 164, position 11
Identifier "k" line 164, position 15
Operator "=" line 164, position 17
DecimalInteger "1" line 164, position 19
Separator ";" line 164, position 20
Identifier "i" line 164, position 22
Operator "*" line 164, position 24
Identifier "k" line 164, position 26
Operator "<" line 164, position 28
Identifier "size" line 164, position 30
Separator ";" line 164, position 34
Identifier "k" line 164, position 36
Operator "++" line 164, position 37
Separator ")" line 164, position 39
Separator "{" line 164, position 41
Identifier "mobiusFunctionValues" line 165, position 7
Separator "[" line 165, position 27
Identifier "i" line 165, position 28
Operator "*" line 165, position 30
Identifier "k" line 165, position 32
Separator "]" line 165, position 33
Operator "*=" line 165, position 35
Operator "-" line 165, position 38
DecimalInteger "2" line 165, position 39
Separator ";" line 165, position 40
Separator "}" line 166, position 6
Separator "}" line 167, position 5
Keyword "if" line 168, position 5
Separator "(" line 168, position 8
Identifier "mobiusFunctionValues" line 168, position 9
Separator "[" line 168, position 29
Identifier "i" line 168, position 30
Separator "]" line 168, position 31
Operator ">" line 168, position 33
DecimalInteger "1" line 168, position 35
Separator ")" line 168, position 36
Separator "{" line 168, position 38
Identifier "mobiusFunctionValues" line 169, position 6
Separator "[" line 169, position 26
Identifier "i" line 169, position 27
Separator "]" line 169, position 28
Operator "=" line 169, position 30
DecimalInteger "1" line 169, position 32
Separator ";" line 169, position 33
Separator "}" line 170, position 5
Keyword "if" line 171, position 5
Separator "(" line 171, position 8
Identifier "mobiusFunctionValues" line 171, position 9
Separator "[" line 171, position 29
Identifier "i" line 171, position 30
Separator "]" line 171, position 31
Operator "<" line 171, position 33
Operator "-" line 171, position 35
DecimalInteger "1" line 171, position 36
Separator ")" line 171, position 37
Separator "{" line 171, position 39
Identifier "mobiusFunctionValues" line 172, position 6
Separator "[" line 172, position 26
Identifier "i" line 172, position 27
Separator "]" line 172, position 28
Operator "=" line 172, position 30
Operator "-" line 172, position 32
DecimalInteger "1" line 172, position 33
Separator ";" line 172, position 34
Separator "}" line 173, position 5
Separator "}" line 174, position 4
Separator "}" line 175, position 3
Annotation "@" line 177, position 3
Identifier "Override" line 177, position 4
Modifier "public" line 178, position 3
BasicType "int" line 178, position 10
Identifier "get" line 178, position 14
Separator "(" line 178, position 17
BasicType "int" line 178, position 18
Identifier "n" line 178, position 22
Separator ")" line 178, position 23
Separator "{" line 178, position 25
Keyword "if" line 179, position 4
Separator "(" line 179, position 7
Identifier "n" line 179, position 8
Operator ">" line 179, position 10
Identifier "size" line 179, position 12
Separator ")" line 179, position 16
Separator "{" line 179, position 18
Keyword "throw" line 180, position 5
Keyword "new" line 180, position 11
Identifier "RuntimeException" line 180, position 15
Separator "(" line 180, position 31
String ""n is greater than size."" line 180, position 32
Separator ")" line 180, position 57
Separator ";" line 180, position 58
Separator "}" line 181, position 4
Keyword "if" line 182, position 4
Separator "(" line 182, position 7
Identifier "n" line 182, position 8
Operator "<" line 182, position 10
DecimalInteger "0" line 182, position 12
Separator ")" line 182, position 13
Separator "{" line 182, position 15
Keyword "return" line 183, position 5
DecimalInteger "0" line 183, position 12
Separator ";" line 183, position 13
Separator "}" line 184, position 4
Keyword "return" line 185, position 4
Identifier "mobiusFunctionValues" line 185, position 11
Separator "[" line 185, position 31
Identifier "n" line 185, position 32
Separator "]" line 185, position 33
Separator ";" line 185, position 34
Separator "}" line 186, position 3
Separator "}" line 187, position 2
Keyword "class" line 193, position 2
Identifier "PrimeFactorizationMobiusFunction" line 193, position 8
Keyword "implements" line 193, position 41
Identifier "MobiusFunction" line 193, position 52
Separator "{" line 193, position 67
Annotation "@" line 194, position 3
Identifier "Override" line 194, position 4
Modifier "public" line 195, position 3
BasicType "int" line 195, position 10
Identifier "get" line 195, position 14
Separator "(" line 195, position 17
BasicType "int" line 195, position 18
Identifier "n" line 195, position 22
Separator ")" line 195, position 23
Separator "{" line 195, position 25
Keyword "if" line 196, position 4
Separator "(" line 196, position 7
Identifier "n" line 196, position 8
Operator "<=" line 196, position 10
DecimalInteger "0" line 196, position 13
Separator ")" line 196, position 14
Separator "{" line 196, position 16
Keyword "return" line 197, position 5
DecimalInteger "0" line 197, position 12
Separator ";" line 197, position 13
Separator "}" line 198, position 4
Keyword "if" line 199, position 4
Separator "(" line 199, position 7
Identifier "n" line 199, position 8
Operator "==" line 199, position 10
DecimalInteger "1" line 199, position 13
Separator ")" line 199, position 14
Separator "{" line 199, position 16
Keyword "return" line 200, position 5
DecimalInteger "1" line 200, position 12
Separator ";" line 200, position 13
Separator "}" line 201, position 4
BasicType "int" line 202, position 4
Identifier "num" line 202, position 8
Operator "=" line 202, position 12
DecimalInteger "0" line 202, position 14
Separator ";" line 202, position 15
Keyword "for" line 203, position 4
Separator "(" line 203, position 8
BasicType "int" line 203, position 9
Identifier "i" line 203, position 13
Operator "=" line 203, position 15
DecimalInteger "2" line 203, position 17
Separator ";" line 203, position 18
Identifier "i" line 203, position 20
Operator "<" line 203, position 22
Identifier "n" line 203, position 24
Separator ";" line 203, position 25
Identifier "i" line 203, position 27
Operator "++" line 203, position 28
Separator ")" line 203, position 30
Separator "{" line 203, position 32
Keyword "if" line 204, position 5
Separator "(" line 204, position 8
Identifier "n" line 204, position 9
Operator "%" line 204, position 11
Identifier "i" line 204, position 13
Operator "==" line 204, position 15
DecimalInteger "0" line 204, position 18
Separator ")" line 204, position 19
Separator "{" line 204, position 21
Identifier "n" line 205, position 6
Operator "/=" line 205, position 8
Identifier "i" line 205, position 11
Separator ";" line 205, position 12
Identifier "num" line 206, position 6
Operator "++" line 206, position 9
Separator ";" line 206, position 11
Keyword "if" line 207, position 6
Separator "(" line 207, position 9
Identifier "n" line 207, position 10
Operator "%" line 207, position 12
Identifier "i" line 207, position 14
Operator "==" line 207, position 16
DecimalInteger "0" line 207, position 19
Separator ")" line 207, position 20
Separator "{" line 207, position 22
Keyword "return" line 208, position 7
DecimalInteger "0" line 208, position 14
Separator ";" line 208, position 15
Separator "}" line 209, position 6
Separator "}" line 210, position 5
Separator "}" line 211, position 4
Keyword "return" line 212, position 4
Identifier "num" line 212, position 11
Operator "%" line 212, position 15
DecimalInteger "2" line 212, position 17
Operator "==" line 212, position 19
DecimalInteger "0" line 212, position 22
Operator "?" line 212, position 24
Operator "-" line 212, position 26
DecimalInteger "1" line 212, position 27
Operator ":" line 212, position 29
DecimalInteger "1" line 212, position 31
Separator ";" line 212, position 32
Separator "}" line 213, position 3
Separator "}" line 214, position 2
Keyword "class" line 223, position 2
Identifier "FactorialTableCombCalculator" line 223, position 8
Keyword "implements" line 223, position 37
Identifier "CombCalculator" line 223, position 48
Separator "{" line 223, position 63
BasicType "int" line 224, position 3
Identifier "size" line 224, position 7
Separator ";" line 224, position 11
BasicType "long" line 225, position 3
Separator "[" line 225, position 7
Separator "]" line 225, position 8
Identifier "factorialTable" line 225, position 10
Separator ";" line 225, position 24
BasicType "long" line 226, position 3
Separator "[" line 226, position 7
Separator "]" line 226, position 8
Identifier "inverseFactorialTable" line 226, position 10
Separator ";" line 226, position 31
BasicType "long" line 227, position 3
Identifier "mod" line 227, position 8
Separator ";" line 227, position 11
Modifier "public" line 229, position 3
Identifier "FactorialTableCombCalculator" line 229, position 10
Separator "(" line 229, position 38
BasicType "int" line 229, position 39
Identifier "size" line 229, position 43
Separator "," line 229, position 47
BasicType "long" line 229, position 49
Identifier "mod" line 229, position 54
Separator ")" line 229, position 57
Separator "{" line 229, position 59
Keyword "this" line 230, position 4
Separator "." line 230, position 8
Identifier "size" line 230, position 9
Operator "=" line 230, position 14
Identifier "size" line 230, position 16
Separator ";" line 230, position 20
Identifier "factorialTable" line 231, position 4
Operator "=" line 231, position 19
Keyword "new" line 231, position 21
BasicType "long" line 231, position 25
Separator "[" line 231, position 29
Identifier "size" line 231, position 30
Operator "+" line 231, position 35
DecimalInteger "1" line 231, position 37
Separator "]" line 231, position 38
Separator ";" line 231, position 39
Identifier "inverseFactorialTable" line 232, position 4
Operator "=" line 232, position 26
Keyword "new" line 232, position 28
BasicType "long" line 232, position 32
Separator "[" line 232, position 36
Identifier "size" line 232, position 37
Operator "+" line 232, position 42
DecimalInteger "1" line 232, position 44
Separator "]" line 232, position 45
Separator ";" line 232, position 46
Keyword "this" line 233, position 4
Separator "." line 233, position 8
Identifier "mod" line 233, position 9
Operator "=" line 233, position 13
Identifier "mod" line 233, position 15
Separator ";" line 233, position 18
Identifier "factorialTable" line 235, position 4
Separator "[" line 235, position 18
DecimalInteger "0" line 235, position 19
Separator "]" line 235, position 20
Operator "=" line 235, position 22
DecimalInteger "1L" line 235, position 24
Separator ";" line 235, position 26
Keyword "for" line 236, position 4
Separator "(" line 236, position 8
BasicType "int" line 236, position 9
Identifier "i" line 236, position 13
Operator "=" line 236, position 15
DecimalInteger "1" line 236, position 17
Separator ";" line 236, position 18
Identifier "i" line 236, position 20
Operator "<=" line 236, position 22
Identifier "size" line 236, position 25
Separator ";" line 236, position 29
Identifier "i" line 236, position 31
Operator "++" line 236, position 32
Separator ")" line 236, position 34
Separator "{" line 236, position 36
Identifier "factorialTable" line 237, position 5
Separator "[" line 237, position 19
Identifier "i" line 237, position 20
Separator "]" line 237, position 21
Operator "=" line 237, position 23
Separator "(" line 237, position 25
Identifier "factorialTable" line 237, position 26
Separator "[" line 237, position 40
Identifier "i" line 237, position 41
Operator "-" line 237, position 43
DecimalInteger "1" line 237, position 45
Separator "]" line 237, position 46
Operator "*" line 237, position 48
Identifier "i" line 237, position 50
Separator ")" line 237, position 51
Operator "%" line 237, position 53
Identifier "mod" line 237, position 55
Separator ";" line 237, position 58
Separator "}" line 238, position 4
Identifier "inverseFactorialTable" line 239, position 4
Separator "[" line 239, position 25
Identifier "size" line 239, position 26
Separator "]" line 239, position 30
Operator "=" line 239, position 32
Identifier "inverse" line 239, position 34
Separator "(" line 239, position 41
Identifier "factorialTable" line 239, position 42
Separator "[" line 239, position 56
Identifier "size" line 239, position 57
Separator "]" line 239, position 61
Separator "," line 239, position 62
Identifier "mod" line 239, position 64
Separator ")" line 239, position 67
Separator ";" line 239, position 68
Keyword "for" line 240, position 4
Separator "(" line 240, position 8
BasicType "int" line 240, position 9
Identifier "i" line 240, position 13
Operator "=" line 240, position 15
Identifier "size" line 240, position 17
Operator "-" line 240, position 22
DecimalInteger "1" line 240, position 24
Separator ";" line 240, position 25
Identifier "i" line 240, position 27
Operator ">=" line 240, position 29
DecimalInteger "0" line 240, position 32
Separator ";" line 240, position 33
Identifier "i" line 240, position 35
Operator "--" line 240, position 36
Separator ")" line 240, position 38
Separator "{" line 240, position 40
Identifier "inverseFactorialTable" line 241, position 5
Separator "[" line 241, position 26
Identifier "i" line 241, position 27
Separator "]" line 241, position 28
Operator "=" line 241, position 30
Separator "(" line 241, position 32
Identifier "inverseFactorialTable" line 241, position 33
Separator "[" line 241, position 54
Identifier "i" line 241, position 55
Operator "+" line 241, position 57
DecimalInteger "1" line 241, position 59
Separator "]" line 241, position 60
Operator "*" line 241, position 62
Separator "(" line 241, position 64
Identifier "i" line 241, position 65
Operator "+" line 241, position 67
DecimalInteger "1" line 241, position 69
Separator ")" line 241, position 70
Separator ")" line 241, position 71
Operator "%" line 241, position 73
Identifier "mod" line 241, position 75
Separator ";" line 241, position 78
Separator "}" line 242, position 4
Separator "}" line 243, position 3
Modifier "private" line 245, position 3
BasicType "long" line 245, position 11
Identifier "inverse" line 245, position 16
Separator "(" line 245, position 23
BasicType "long" line 245, position 24
Identifier "n" line 245, position 29
Separator "," line 245, position 30
BasicType "long" line 245, position 32
Identifier "mod" line 245, position 37
Separator ")" line 245, position 40
Separator "{" line 245, position 42
Keyword "return" line 246, position 4
Identifier "pow" line 246, position 11
Separator "(" line 246, position 14
Identifier "n" line 246, position 15
Separator "," line 246, position 16
Identifier "mod" line 246, position 18
Operator "-" line 246, position 22
DecimalInteger "2" line 246, position 24
Separator "," line 246, position 25
Identifier "mod" line 246, position 27
Separator ")" line 246, position 30
Separator ";" line 246, position 31
Separator "}" line 247, position 3
Modifier "private" line 249, position 3
BasicType "long" line 249, position 11
Identifier "pow" line 249, position 16
Separator "(" line 249, position 19
BasicType "long" line 249, position 20
Identifier "n" line 249, position 25
Separator "," line 249, position 26
BasicType "long" line 249, position 28
Identifier "p" line 249, position 33
Separator "," line 249, position 34
BasicType "long" line 249, position 36
Identifier "mod" line 249, position 41
Separator ")" line 249, position 44
Separator "{" line 249, position 46
Keyword "if" line 250, position 4
Separator "(" line 250, position 7
Identifier "p" line 250, position 8
Operator "==" line 250, position 10
DecimalInteger "0" line 250, position 13
Separator ")" line 250, position 14
Separator "{" line 250, position 16
Keyword "return" line 251, position 5
DecimalInteger "1L" line 251, position 12
Separator ";" line 251, position 14
Separator "}" line 252, position 4
BasicType "long" line 253, position 4
Identifier "half" line 253, position 9
Operator "=" line 253, position 14
Identifier "pow" line 253, position 16
Separator "(" line 253, position 19
Identifier "n" line 253, position 20
Separator "," line 253, position 21
Identifier "p" line 253, position 23
Operator "/" line 253, position 25
DecimalInteger "2" line 253, position 27
Separator "," line 253, position 28
Identifier "mod" line 253, position 30
Separator ")" line 253, position 33
Separator ";" line 253, position 34
BasicType "long" line 254, position 4
Identifier "ret" line 254, position 9
Operator "=" line 254, position 13
Separator "(" line 254, position 15
Identifier "half" line 254, position 16
Operator "*" line 254, position 21
Identifier "half" line 254, position 23
Separator ")" line 254, position 27
Operator "%" line 254, position 29
Identifier "mod" line 254, position 31
Separator ";" line 254, position 34
Keyword "if" line 255, position 4
Separator "(" line 255, position 7
Identifier "p" line 255, position 8
Operator "%" line 255, position 10
DecimalInteger "2" line 255, position 12
Operator "==" line 255, position 14
DecimalInteger "1" line 255, position 17
Separator ")" line 255, position 18
Separator "{" line 255, position 20
Identifier "ret" line 256, position 5
Operator "=" line 256, position 9
Separator "(" line 256, position 11
Identifier "ret" line 256, position 12
Operator "*" line 256, position 16
Identifier "n" line 256, position 18
Separator ")" line 256, position 19
Operator "%" line 256, position 21
Identifier "mod" line 256, position 23
Separator ";" line 256, position 26
Separator "}" line 257, position 4
Keyword "return" line 258, position 4
Identifier "ret" line 258, position 11
Separator ";" line 258, position 14
Separator "}" line 259, position 3
Annotation "@" line 261, position 3
Identifier "Override" line 261, position 4
Modifier "public" line 262, position 3
BasicType "long" line 262, position 10
Identifier "comb" line 262, position 15
Separator "(" line 262, position 19
BasicType "int" line 262, position 20
Identifier "n" line 262, position 24
Separator "," line 262, position 25
BasicType "int" line 262, position 27
Identifier "m" line 262, position 31
Separator ")" line 262, position 32
Separator "{" line 262, position 34
Keyword "if" line 263, position 4
Separator "(" line 263, position 7
Identifier "n" line 263, position 8
Operator ">" line 263, position 10
Identifier "size" line 263, position 12
Separator ")" line 263, position 16
Separator "{" line 263, position 18
Keyword "throw" line 264, position 5
Keyword "new" line 264, position 11
Identifier "RuntimeException" line 264, position 15
Separator "(" line 264, position 31
String ""n is greater than size."" line 264, position 32
Separator ")" line 264, position 57
Separator ";" line 264, position 58
Separator "}" line 265, position 4
Keyword "if" line 266, position 4
Separator "(" line 266, position 7
Identifier "n" line 266, position 8
Operator "<" line 266, position 10
DecimalInteger "0" line 266, position 12
Operator "||" line 266, position 14
Identifier "m" line 266, position 17
Operator "<" line 266, position 19
DecimalInteger "0" line 266, position 21
Operator "||" line 266, position 23
Identifier "n" line 266, position 26
Operator "<" line 266, position 28
Identifier "m" line 266, position 30
Separator ")" line 266, position 31
Separator "{" line 266, position 33
Keyword "return" line 267, position 5
DecimalInteger "0L" line 267, position 12
Separator ";" line 267, position 14
Separator "}" line 268, position 4
Keyword "return" line 269, position 4
Separator "(" line 269, position 11
Separator "(" line 269, position 12
Separator "(" line 269, position 13
Identifier "factorialTable" line 269, position 14
Separator "[" line 269, position 28
Identifier "n" line 269, position 29
Separator "]" line 269, position 30
Operator "*" line 269, position 32
Identifier "inverseFactorialTable" line 269, position 34
Separator "[" line 269, position 55
Identifier "m" line 269, position 56
Separator "]" line 269, position 57
Separator ")" line 269, position 58
Operator "%" line 269, position 60
Identifier "mod" line 269, position 62
Separator ")" line 269, position 65
Operator "*" line 269, position 67
Identifier "inverseFactorialTable" line 269, position 69
Separator "[" line 269, position 90
Identifier "n" line 269, position 91
Operator "-" line 269, position 93
Identifier "m" line 269, position 95
Separator "]" line 269, position 96
Separator ")" line 269, position 97
Operator "%" line 269, position 99
Identifier "mod" line 269, position 101
Separator ";" line 269, position 104
Separator "}" line 270, position 3
Separator "}" line 271, position 2
Keyword "class" line 278, position 2
Identifier "TableCombCalculator" line 278, position 8
Keyword "implements" line 278, position 28
Identifier "CombCalculator" line 278, position 39
Separator "{" line 278, position 54
BasicType "long" line 279, position 3
Separator "[" line 279, position 7
Separator "]" line 279, position 8
Separator "[" line 279, position 9
Separator "]" line 279, position 10
Identifier "table" line 279, position 12
Separator ";" line 279, position 17
BasicType "int" line 280, position 3
Identifier "size" line 280, position 7
Separator ";" line 280, position 11
Modifier "public" line 282, position 3
Identifier "TableCombCalculator" line 282, position 10
Separator "(" line 282, position 29
BasicType "int" line 282, position 30
Identifier "size" line 282, position 34
Separator "," line 282, position 38
BasicType "long" line 282, position 40
Identifier "mod" line 282, position 45
Separator ")" line 282, position 48
Separator "{" line 282, position 50
Keyword "this" line 283, position 4
Separator "." line 283, position 8
Identifier "size" line 283, position 9
Operator "=" line 283, position 14
Identifier "size" line 283, position 16
Separator ";" line 283, position 20
Identifier "table" line 284, position 4
Operator "=" line 284, position 10
Keyword "new" line 284, position 12
BasicType "long" line 284, position 16
Separator "[" line 284, position 20
Identifier "size" line 284, position 21
Operator "+" line 284, position 26
DecimalInteger "1" line 284, position 28
Separator "]" line 284, position 29
Separator "[" line 284, position 30
Separator "]" line 284, position 31
Separator ";" line 284, position 32
Identifier "table" line 286, position 4
Separator "[" line 286, position 9
DecimalInteger "0" line 286, position 10
Separator "]" line 286, position 11
Operator "=" line 286, position 13
Keyword "new" line 286, position 15
BasicType "long" line 286, position 19
Separator "[" line 286, position 23
DecimalInteger "1" line 286, position 24
Separator "]" line 286, position 25
Separator ";" line 286, position 26
Identifier "table" line 287, position 4
Separator "[" line 287, position 9
DecimalInteger "0" line 287, position 10
Separator "]" line 287, position 11
Separator "[" line 287, position 12
DecimalInteger "0" line 287, position 13
Separator "]" line 287, position 14
Operator "=" line 287, position 16
DecimalInteger "1L" line 287, position 18
Separator ";" line 287, position 20
Keyword "for" line 288, position 4
Separator "(" line 288, position 8
BasicType "int" line 288, position 9
Identifier "n" line 288, position 13
Operator "=" line 288, position 15
DecimalInteger "1" line 288, position 17
Separator ";" line 288, position 18
Identifier "n" line 288, position 20
Operator "<=" line 288, position 22
Identifier "size" line 288, position 25
Separator ";" line 288, position 29
Identifier "n" line 288, position 31
Operator "++" line 288, position 32
Separator ")" line 288, position 34
Separator "{" line 288, position 36
Identifier "table" line 289, position 5
Separator "[" line 289, position 10
Identifier "n" line 289, position 11
Separator "]" line 289, position 12
Operator "=" line 289, position 14
Keyword "new" line 289, position 16
BasicType "long" line 289, position 20
Separator "[" line 289, position 24
Identifier "n" line 289, position 25
Operator "+" line 289, position 27
DecimalInteger "1" line 289, position 29
Separator "]" line 289, position 30
Separator ";" line 289, position 31
Identifier "table" line 290, position 5
Separator "[" line 290, position 10
Identifier "n" line 290, position 11
Separator "]" line 290, position 12
Separator "[" line 290, position 13
DecimalInteger "0" line 290, position 14
Separator "]" line 290, position 15
Operator "=" line 290, position 17
DecimalInteger "1L" line 290, position 19
Separator ";" line 290, position 21
Keyword "for" line 291, position 5
Separator "(" line 291, position 9
BasicType "int" line 291, position 10
Identifier "m" line 291, position 14
Operator "=" line 291, position 16
DecimalInteger "1" line 291, position 18
Separator ";" line 291, position 19
Identifier "m" line 291, position 21
Operator "<" line 291, position 23
Identifier "n" line 291, position 25
Separator ";" line 291, position 26
Identifier "m" line 291, position 28
Operator "++" line 291, position 29
Separator ")" line 291, position 31
Separator "{" line 291, position 33
Identifier "table" line 292, position 6
Separator "[" line 292, position 11
Identifier "n" line 292, position 12
Separator "]" line 292, position 13
Separator "[" line 292, position 14
Identifier "m" line 292, position 15
Separator "]" line 292, position 16
Operator "=" line 292, position 18
Separator "(" line 292, position 20
Identifier "table" line 292, position 21
Separator "[" line 292, position 26
Identifier "n" line 292, position 27
Operator "-" line 292, position 29
DecimalInteger "1" line 292, position 31
Separator "]" line 292, position 32
Separator "[" line 292, position 33
Identifier "m" line 292, position 34
Operator "-" line 292, position 36
DecimalInteger "1" line 292, position 38
Separator "]" line 292, position 39
Operator "+" line 292, position 41
Identifier "table" line 292, position 43
Separator "[" line 292, position 48
Identifier "n" line 292, position 49
Operator "-" line 292, position 51
DecimalInteger "1" line 292, position 53
Separator "]" line 292, position 54
Separator "[" line 292, position 55
Identifier "m" line 292, position 56
Separator "]" line 292, position 57
Separator ")" line 292, position 58
Operator "%" line 292, position 60
Identifier "mod" line 292, position 62
Separator ";" line 292, position 65
Separator "}" line 293, position 5
Identifier "table" line 294, position 5
Separator "[" line 294, position 10
Identifier "n" line 294, position 11
Separator "]" line 294, position 12
Separator "[" line 294, position 13
Identifier "n" line 294, position 14
Separator "]" line 294, position 15
Operator "=" line 294, position 17
DecimalInteger "1L" line 294, position 19
Separator ";" line 294, position 21
Separator "}" line 295, position 4
Separator "}" line 296, position 3
Annotation "@" line 298, position 3
Identifier "Override" line 298, position 4
Modifier "public" line 299, position 3
BasicType "long" line 299, position 10
Identifier "comb" line 299, position 15
Separator "(" line 299, position 19
BasicType "int" line 299, position 20
Identifier "n" line 299, position 24
Separator "," line 299, position 25
BasicType "int" line 299, position 27
Identifier "m" line 299, position 31
Separator ")" line 299, position 32
Separator "{" line 299, position 34
Keyword "if" line 300, position 4
Separator "(" line 300, position 7
Identifier "n" line 300, position 8
Operator ">" line 300, position 10
Identifier "size" line 300, position 12
Separator ")" line 300, position 16
Separator "{" line 300, position 18
Keyword "throw" line 301, position 5
Keyword "new" line 301, position 11
Identifier "RuntimeException" line 301, position 15
Separator "(" line 301, position 31
String ""n is greater than size."" line 301, position 32
Separator ")" line 301, position 57
Separator ";" line 301, position 58
Separator "}" line 302, position 4
Keyword "if" line 303, position 4
Separator "(" line 303, position 7
Identifier "n" line 303, position 8
Operator "<" line 303, position 10
DecimalInteger "0" line 303, position 12
Operator "||" line 303, position 14
Identifier "m" line 303, position 17
Operator "<" line 303, position 19
DecimalInteger "0" line 303, position 21
Operator "||" line 303, position 23
Identifier "n" line 303, position 26
Operator "<" line 303, position 28
Identifier "m" line 303, position 30
Separator ")" line 303, position 31
Separator "{" line 303, position 33
Keyword "return" line 304, position 5
DecimalInteger "0L" line 304, position 12
Separator ";" line 304, position 14
Separator "}" line 305, position 4
Keyword "return" line 306, position 4
Identifier "table" line 306, position 11
Separator "[" line 306, position 16
Identifier "n" line 306, position 17
Separator "]" line 306, position 18
Separator "[" line 306, position 19
Identifier "m" line 306, position 20
Separator "]" line 306, position 21
Separator ";" line 306, position 22
Separator "}" line 307, position 3
Separator "}" line 308, position 2
Keyword "interface" line 310, position 2
Identifier "Graph" line 310, position 12
Separator "{" line 310, position 18
Keyword "void" line 311, position 3
Identifier "link" line 311, position 8
Separator "(" line 311, position 12
BasicType "int" line 311, position 13
Identifier "from" line 311, position 17
Separator "," line 311, position 21
BasicType "int" line 311, position 23
Identifier "to" line 311, position 27
Separator "," line 311, position 29
BasicType "long" line 311, position 31
Identifier "cost" line 311, position 36
Separator ")" line 311, position 40
Separator ";" line 311, position 41
Identifier "Optional" line 312, position 3
Operator "<" line 312, position 11
Identifier "Long" line 312, position 12
Operator ">" line 312, position 16
Identifier "getCost" line 312, position 18
Separator "(" line 312, position 25
BasicType "int" line 312, position 26
Identifier "from" line 312, position 30
Separator "," line 312, position 34
BasicType "int" line 312, position 36
Identifier "to" line 312, position 40
Separator ")" line 312, position 42
Separator ";" line 312, position 43
BasicType "int" line 313, position 3
Identifier "getVertexNum" line 313, position 7
Separator "(" line 313, position 19
Separator ")" line 313, position 20
Separator ";" line 313, position 21
Separator "}" line 314, position 2
Keyword "interface" line 316, position 2
Identifier "FlowResolver" line 316, position 12
Separator "{" line 316, position 25
BasicType "long" line 317, position 3
Identifier "maxFlow" line 317, position 8
Separator "(" line 317, position 15
BasicType "int" line 317, position 16
Identifier "from" line 317, position 20
Separator "," line 317, position 24
BasicType "int" line 317, position 26
Identifier "to" line 317, position 30
Separator ")" line 317, position 32
Separator ";" line 317, position 33
Separator "}" line 318, position 2
Keyword "class" line 324, position 2
Identifier "ArrayGraph" line 324, position 8
Keyword "implements" line 324, position 19
Identifier "Graph" line 324, position 30
Separator "{" line 324, position 36
Modifier "private" line 325, position 3
Identifier "Long" line 325, position 11
Separator "[" line 325, position 15
Separator "]" line 325, position 16
Separator "[" line 325, position 17
Separator "]" line 325, position 18
Identifier "costArray" line 325, position 20
Separator ";" line 325, position 29
Modifier "private" line 326, position 3
BasicType "int" line 326, position 11
Identifier "vertexNum" line 326, position 15
Separator ";" line 326, position 24
Modifier "public" line 328, position 3
Identifier "ArrayGraph" line 328, position 10
Separator "(" line 328, position 20
BasicType "int" line 328, position 21
Identifier "n" line 328, position 25
Separator ")" line 328, position 26
Separator "{" line 328, position 28
Identifier "costArray" line 329, position 4
Operator "=" line 329, position 14
Keyword "new" line 329, position 16
Identifier "Long" line 329, position 20
Separator "[" line 329, position 24
Identifier "n" line 329, position 25
Separator "]" line 329, position 26
Separator "[" line 329, position 27
Separator "]" line 329, position 28
Separator ";" line 329, position 29
Keyword "for" line 330, position 4
Separator "(" line 330, position 8
BasicType "int" line 330, position 9
Identifier "i" line 330, position 13
Operator "=" line 330, position 15
DecimalInteger "0" line 330, position 17
Separator ";" line 330, position 18
Identifier "i" line 330, position 20
Operator "<" line 330, position 22
Identifier "n" line 330, position 24
Separator ";" line 330, position 25
Identifier "i" line 330, position 27
Operator "++" line 330, position 28
Separator ")" line 330, position 30
Separator "{" line 330, position 32
Identifier "costArray" line 331, position 5
Separator "[" line 331, position 14
Identifier "i" line 331, position 15
Separator "]" line 331, position 16
Operator "=" line 331, position 18
Keyword "new" line 331, position 20
Identifier "Long" line 331, position 24
Separator "[" line 331, position 28
Identifier "n" line 331, position 29
Separator "]" line 331, position 30
Separator ";" line 331, position 31
Separator "}" line 332, position 4
Identifier "vertexNum" line 333, position 4
Operator "=" line 333, position 14
Identifier "n" line 333, position 16
Separator ";" line 333, position 17
Separator "}" line 334, position 3
Annotation "@" line 336, position 3
Identifier "Override" line 336, position 4
Modifier "public" line 337, position 3
Keyword "void" line 337, position 10
Identifier "link" line 337, position 15
Separator "(" line 337, position 19
BasicType "int" line 337, position 20
Identifier "from" line 337, position 24
Separator "," line 337, position 28
BasicType "int" line 337, position 30
Identifier "to" line 337, position 34
Separator "," line 337, position 36
BasicType "long" line 337, position 38
Identifier "cost" line 337, position 43
Separator ")" line 337, position 47
Separator "{" line 337, position 49
Identifier "costArray" line 338, position 4
Separator "[" line 338, position 13
Identifier "from" line 338, position 14
Separator "]" line 338, position 18
Separator "[" line 338, position 19
Identifier "to" line 338, position 20
Separator "]" line 338, position 22
Operator "=" line 338, position 24
Keyword "new" line 338, position 26
Identifier "Long" line 338, position 30
Separator "(" line 338, position 34
Identifier "cost" line 338, position 35
Separator ")" line 338, position 39
Separator ";" line 338, position 40
Separator "}" line 339, position 3
Annotation "@" line 341, position 3
Identifier "Override" line 341, position 4
Modifier "public" line 342, position 3
Identifier "Optional" line 342, position 10
Operator "<" line 342, position 18
Identifier "Long" line 342, position 19
Operator ">" line 342, position 23
Identifier "getCost" line 342, position 25
Separator "(" line 342, position 32
BasicType "int" line 342, position 33
Identifier "from" line 342, position 37
Separator "," line 342, position 41
BasicType "int" line 342, position 43
Identifier "to" line 342, position 47
Separator ")" line 342, position 49
Separator "{" line 342, position 51
Keyword "return" line 343, position 4
Identifier "Optional" line 343, position 11
Separator "." line 343, position 19
Identifier "ofNullable" line 343, position 20
Separator "(" line 343, position 30
Identifier "costArray" line 343, position 31
Separator "[" line 343, position 40
Identifier "from" line 343, position 41
Separator "]" line 343, position 45
Separator "[" line 343, position 46
Identifier "to" line 343, position 47
Separator "]" line 343, position 49
Separator ")" line 343, position 50
Separator ";" line 343, position 51
Separator "}" line 344, position 3
Annotation "@" line 346, position 3
Identifier "Override" line 346, position 4
Modifier "public" line 347, position 3
BasicType "int" line 347, position 10
Identifier "getVertexNum" line 347, position 14
Separator "(" line 347, position 26
Separator ")" line 347, position 27
Separator "{" line 347, position 29
Keyword "return" line 348, position 4
Identifier "vertexNum" line 348, position 11
Separator ";" line 348, position 20
Separator "}" line 349, position 3
Separator "}" line 350, position 2
Keyword "class" line 356, position 2
Identifier "DfsFlowResolver" line 356, position 8
Keyword "implements" line 356, position 24
Identifier "FlowResolver" line 356, position 35
Separator "{" line 356, position 48
Modifier "private" line 357, position 3
Identifier "Graph" line 357, position 11
Identifier "graph" line 357, position 17
Separator ";" line 357, position 22
Modifier "public" line 358, position 3
Identifier "DfsFlowResolver" line 358, position 10
Separator "(" line 358, position 25
Identifier "Graph" line 358, position 26
Identifier "graph" line 358, position 32
Separator ")" line 358, position 37
Separator "{" line 358, position 39
Keyword "this" line 359, position 4
Separator "." line 359, position 8
Identifier "graph" line 359, position 9
Operator "=" line 359, position 15
Identifier "graph" line 359, position 17
Separator ";" line 359, position 22
Separator "}" line 360, position 3
Modifier "public" line 368, position 3
BasicType "long" line 368, position 10
Identifier "maxFlow" line 368, position 15
Separator "(" line 368, position 22
BasicType "int" line 368, position 23
Identifier "from" line 368, position 27
Separator "," line 368, position 31
BasicType "int" line 368, position 33
Identifier "to" line 368, position 37
Separator ")" line 368, position 39
Separator "{" line 368, position 41
BasicType "long" line 369, position 4
Identifier "sum" line 369, position 9
Operator "=" line 369, position 13
DecimalInteger "0L" line 369, position 15
Separator ";" line 369, position 17
BasicType "long" line 370, position 4
Identifier "currentFlow" line 370, position 9
Separator ";" line 370, position 20
Keyword "do" line 371, position 4
Separator "{" line 371, position 7
Identifier "currentFlow" line 372, position 5
Operator "=" line 372, position 17
Identifier "flow" line 372, position 19
Separator "(" line 372, position 23
Identifier "from" line 372, position 24
Separator "," line 372, position 28
Identifier "to" line 372, position 30
Separator "," line 372, position 32
Identifier "Long" line 372, position 34
Separator "." line 372, position 38
Identifier "MAX_VALUE" line 372, position 39
Operator "/" line 372, position 49
DecimalInteger "3" line 372, position 51
Separator "," line 372, position 52
Keyword "new" line 372, position 54
BasicType "boolean" line 372, position 58
Separator "[" line 372, position 65
Identifier "graph" line 372, position 66
Separator "." line 372, position 71
Identifier "getVertexNum" line 372, position 72
Separator "(" line 372, position 84
Separator ")" line 372, position 85
Separator "]" line 372, position 86
Separator ")" line 372, position 87
Separator ";" line 372, position 88
Identifier "sum" line 373, position 5
Operator "+=" line 373, position 9
Identifier "currentFlow" line 373, position 12
Separator ";" line 373, position 23
Separator "}" line 374, position 4
Keyword "while" line 374, position 6
Separator "(" line 374, position 12
Identifier "currentFlow" line 374, position 13
Operator ">" line 374, position 25
DecimalInteger "0" line 374, position 27
Separator ")" line 374, position 28
Separator ";" line 374, position 29
Keyword "return" line 375, position 4
Identifier "sum" line 375, position 11
Separator ";" line 375, position 14
Separator "}" line 376, position 3
Modifier "private" line 386, position 3
BasicType "long" line 386, position 11
Identifier "flow" line 386, position 16
Separator "(" line 386, position 20
BasicType "int" line 386, position 21
Identifier "from" line 386, position 25
Separator "," line 386, position 29
BasicType "int" line 386, position 31
Identifier "to" line 386, position 35
Separator "," line 386, position 37
BasicType "long" line 386, position 39
Identifier "current_flow" line 386, position 44
Separator "," line 386, position 56
BasicType "boolean" line 386, position 58
Separator "[" line 386, position 65
Separator "]" line 386, position 66
Identifier "passed" line 386, position 68
Separator ")" line 386, position 74
Separator "{" line 386, position 76
Identifier "passed" line 387, position 4
Separator "[" line 387, position 10
Identifier "from" line 387, position 11
Separator "]" line 387, position 15
Operator "=" line 387, position 17
Boolean "true" line 387, position 19
Separator ";" line 387, position 23
Keyword "if" line 388, position 4
Separator "(" line 388, position 7
Identifier "from" line 388, position 8
Operator "==" line 388, position 13
Identifier "to" line 388, position 16
Separator ")" line 388, position 18
Separator "{" line 388, position 20
Keyword "return" line 389, position 5
Identifier "current_flow" line 389, position 12
Separator ";" line 389, position 24
Separator "}" line 390, position 4
Keyword "for" line 391, position 4
Separator "(" line 391, position 8
BasicType "int" line 391, position 9
Identifier "id" line 391, position 13
Operator "=" line 391, position 16
DecimalInteger "0" line 391, position 18
Separator ";" line 391, position 19
Identifier "id" line 391, position 21
Operator "<" line 391, position 24
Identifier "graph" line 391, position 26
Separator "." line 391, position 31
Identifier "getVertexNum" line 391, position 32
Separator "(" line 391, position 44
Separator ")" line 391, position 45
Separator ";" line 391, position 46
Identifier "id" line 391, position 48
Operator "++" line 391, position 50
Separator ")" line 391, position 52
Separator "{" line 391, position 54
Keyword "if" line 392, position 5
Separator "(" line 392, position 8
Identifier "passed" line 392, position 9
Separator "[" line 392, position 15
Identifier "id" line 392, position 16
Separator "]" line 392, position 18
Separator ")" line 392, position 19
Separator "{" line 392, position 21
Keyword "continue" line 393, position 6
Separator ";" line 393, position 14
Separator "}" line 394, position 5
Identifier "Optional" line 395, position 5
Operator "<" line 395, position 13
Identifier "Long" line 395, position 14
Operator ">" line 395, position 18
Identifier "cost" line 395, position 20
Operator "=" line 395, position 25
Identifier "graph" line 395, position 27
Separator "." line 395, position 32
Identifier "getCost" line 395, position 33
Separator "(" line 395, position 40
Identifier "from" line 395, position 41
Separator "," line 395, position 45
Identifier "id" line 395, position 47
Separator ")" line 395, position 49
Separator ";" line 395, position 50
Keyword "if" line 396, position 5
Separator "(" line 396, position 8
Identifier "cost" line 396, position 9
Separator "." line 396, position 13
Identifier "orElse" line 396, position 14
Separator "(" line 396, position 20
DecimalInteger "0L" line 396, position 21
Separator ")" line 396, position 23
Operator ">" line 396, position 25
DecimalInteger "0" line 396, position 27
Separator ")" line 396, position 28
Separator "{" line 396, position 30
BasicType "long" line 397, position 6
Identifier "nextFlow" line 397, position 11
Operator "=" line 397, position 20
Identifier "current_flow" line 397, position 22
Operator "<" line 397, position 35
Identifier "cost" line 397, position 37
Separator "." line 397, position 41
Identifier "get" line 397, position 42
Separator "(" line 397, position 45
Separator ")" line 397, position 46
Operator "?" line 397, position 48
Identifier "current_flow" line 397, position 50
Operator ":" line 397, position 63
Identifier "cost" line 397, position 65
Separator "." line 397, position 69
Identifier "get" line 397, position 70
Separator "(" line 397, position 73
Separator ")" line 397, position 74
Separator ";" line 397, position 75
BasicType "long" line 398, position 6
Identifier "returnFlow" line 398, position 11
Operator "=" line 398, position 22
Identifier "flow" line 398, position 24
Separator "(" line 398, position 28
Identifier "id" line 398, position 29
Separator "," line 398, position 31
Identifier "to" line 398, position 33
Separator "," line 398, position 35
Identifier "nextFlow" line 398, position 37
Separator "," line 398, position 45
Identifier "passed" line 398, position 47
Separator ")" line 398, position 53
Separator ";" line 398, position 54
Keyword "if" line 399, position 6
Separator "(" line 399, position 9
Identifier "returnFlow" line 399, position 10
Operator ">" line 399, position 21
DecimalInteger "0" line 399, position 23
Separator ")" line 399, position 24
Separator "{" line 399, position 26
Identifier "graph" line 400, position 7
Separator "." line 400, position 12
Identifier "link" line 400, position 13
Separator "(" line 400, position 17
Identifier "from" line 400, position 18
Separator "," line 400, position 22
Identifier "id" line 400, position 24
Separator "," line 400, position 26
Identifier "cost" line 400, position 28
Separator "." line 400, position 32
Identifier "get" line 400, position 33
Separator "(" line 400, position 36
Separator ")" line 400, position 37
Operator "-" line 400, position 39
Identifier "returnFlow" line 400, position 41
Separator ")" line 400, position 51
Separator ";" line 400, position 52
Identifier "graph" line 401, position 7
Separator "." line 401, position 12
Identifier "link" line 401, position 13
Separator "(" line 401, position 17
Identifier "id" line 401, position 18
Separator "," line 401, position 20
Identifier "from" line 401, position 22
Separator "," line 401, position 26
Identifier "graph" line 401, position 28
Separator "." line 401, position 33
Identifier "getCost" line 401, position 34
Separator "(" line 401, position 41
Identifier "id" line 401, position 42
Separator "," line 401, position 44
Identifier "from" line 401, position 46
Separator ")" line 401, position 50
Separator "." line 401, position 51
Identifier "orElse" line 401, position 52
Separator "(" line 401, position 58
DecimalInteger "0L" line 401, position 59
Separator ")" line 401, position 61
Operator "+" line 401, position 63
Identifier "returnFlow" line 401, position 65
Separator ")" line 401, position 75
Separator ";" line 401, position 76
Keyword "return" line 402, position 7
Identifier "returnFlow" line 402, position 14
Separator ";" line 402, position 24
Separator "}" line 403, position 6
Separator "}" line 404, position 5
Separator "}" line 405, position 4
Keyword "return" line 406, position 4
DecimalInteger "0L" line 406, position 11
Separator ";" line 406, position 13
Separator "}" line 407, position 3
Separator "}" line 408, position 2
Keyword "class" line 413, position 2
Identifier "BinaryIndexedTree" line 413, position 8
Separator "{" line 413, position 26
Modifier "private" line 414, position 3
BasicType "long" line 414, position 11
Separator "[" line 414, position 15
Separator "]" line 414, position 16
Identifier "array" line 414, position 18
Separator ";" line 414, position 23
Modifier "public" line 416, position 3
Identifier "BinaryIndexedTree" line 416, position 10
Separator "(" line 416, position 27
BasicType "int" line 416, position 28
Identifier "size" line 416, position 32
Separator ")" line 416, position 36
Separator "{" line 416, position 38
Keyword "this" line 417, position 4
Separator "." line 417, position 8
Identifier "array" line 417, position 9
Operator "=" line 417, position 15
Keyword "new" line 417, position 17
BasicType "long" line 417, position 21
Separator "[" line 417, position 25
Identifier "size" line 417, position 26
Operator "+" line 417, position 31
DecimalInteger "1" line 417, position 33
Separator "]" line 417, position 34
Separator ";" line 417, position 35
Separator "}" line 418, position 3
Modifier "public" line 426, position 3
Keyword "void" line 426, position 10
Identifier "add" line 426, position 15
Separator "(" line 426, position 18
BasicType "int" line 426, position 19
Identifier "index" line 426, position 23
Separator "," line 426, position 28
BasicType "long" line 426, position 30
Identifier "value" line 426, position 35
Separator ")" line 426, position 40
Separator "{" line 426, position 42
Keyword "for" line 427, position 4
Separator "(" line 427, position 8
BasicType "int" line 427, position 9
Identifier "i" line 427, position 13
Operator "=" line 427, position 15
Identifier "index" line 427, position 17
Separator ";" line 427, position 22
Identifier "i" line 427, position 24
Operator "<" line 427, position 26
Identifier "array" line 427, position 28
Separator "." line 427, position 33
Identifier "length" line 427, position 34
Separator ";" line 427, position 40
Identifier "i" line 427, position 42
Operator "+=" line 427, position 44
Separator "(" line 427, position 47
Identifier "i" line 427, position 48
Operator "&" line 427, position 50
Operator "-" line 427, position 52
Identifier "i" line 427, position 53
Separator ")" line 427, position 54
Separator ")" line 427, position 55
Separator "{" line 427, position 57
Identifier "array" line 428, position 5
Separator "[" line 428, position 10
Identifier "i" line 428, position 11
Separator "]" line 428, position 12
Operator "+=" line 428, position 14
Identifier "value" line 428, position 17
Separator ";" line 428, position 22
Separator "}" line 429, position 4
Separator "}" line 430, position 3
Modifier "public" line 438, position 3
BasicType "long" line 438, position 10
Identifier "getSum" line 438, position 15
Separator "(" line 438, position 21
BasicType "int" line 438, position 22
Identifier "index" line 438, position 26
Separator ")" line 438, position 31
Separator "{" line 438, position 33
BasicType "long" line 439, position 4
Identifier "sum" line 439, position 9
Operator "=" line 439, position 13
DecimalInteger "0L" line 439, position 15
Separator ";" line 439, position 17
Keyword "for" line 440, position 4
Separator "(" line 440, position 8
BasicType "int" line 440, position 9
Identifier "i" line 440, position 13
Operator "=" line 440, position 15
Identifier "index" line 440, position 17
Separator ";" line 440, position 22
Identifier "i" line 440, position 24
Operator ">" line 440, position 26
DecimalInteger "0" line 440, position 28
Separator ";" line 440, position 29
Identifier "i" line 440, position 31
Operator "-=" line 440, position 33
Separator "(" line 440, position 36
Identifier "i" line 440, position 37
Operator "&" line 440, position 39
Operator "-" line 440, position 41
Identifier "i" line 440, position 42
Separator ")" line 440, position 43
Separator ")" line 440, position 44
Separator "{" line 440, position 46
Identifier "sum" line 441, position 5
Operator "+=" line 441, position 9
Identifier "array" line 441, position 12
Separator "[" line 441, position 17
Identifier "i" line 441, position 18
Separator "]" line 441, position 19
Separator ";" line 441, position 20
Separator "}" line 442, position 4
Keyword "return" line 443, position 4
Identifier "sum" line 443, position 11
Separator ";" line 443, position 14
Separator "}" line 444, position 3
Separator "}" line 445, position 2
Keyword "class" line 450, position 2
Identifier "BinaryIndexedTree2D" line 450, position 8
Separator "{" line 450, position 28
Modifier "private" line 451, position 3
BasicType "long" line 451, position 11
Separator "[" line 451, position 15
Separator "]" line 451, position 16
Separator "[" line 451, position 17
Separator "]" line 451, position 18
Identifier "array" line 451, position 20
Separator ";" line 451, position 25
Modifier "public" line 453, position 3
Identifier "BinaryIndexedTree2D" line 453, position 10
Separator "(" line 453, position 29
BasicType "int" line 453, position 30
Identifier "size1" line 453, position 34
Separator "," line 453, position 39
BasicType "int" line 453, position 41
Identifier "size2" line 453, position 45
Separator ")" line 453, position 50
Separator "{" line 453, position 52
Keyword "this" line 454, position 4
Separator "." line 454, position 8
Identifier "array" line 454, position 9
Operator "=" line 454, position 15
Keyword "new" line 454, position 17
BasicType "long" line 454, position 21
Separator "[" line 454, position 25
Identifier "size1" line 454, position 26
Operator "+" line 454, position 32
DecimalInteger "1" line 454, position 34
Separator "]" line 454, position 35
Separator "[" line 454, position 36
Separator "]" line 454, position 37
Separator ";" line 454, position 38
Keyword "for" line 455, position 4
Separator "(" line 455, position 8
BasicType "int" line 455, position 9
Identifier "i" line 455, position 13
Operator "=" line 455, position 15
DecimalInteger "1" line 455, position 17
Separator ";" line 455, position 18
Identifier "i" line 455, position 20
Operator "<=" line 455, position 22
Identifier "size1" line 455, position 25
Separator ";" line 455, position 30
Identifier "i" line 455, position 32
Operator "++" line 455, position 33
Separator ")" line 455, position 35
Separator "{" line 455, position 37
Keyword "this" line 456, position 5
Separator "." line 456, position 9
Identifier "array" line 456, position 10
Separator "[" line 456, position 15
Identifier "i" line 456, position 16
Separator "]" line 456, position 17
Operator "=" line 456, position 19
Keyword "new" line 456, position 21
BasicType "long" line 456, position 25
Separator "[" line 456, position 29
Identifier "size2" line 456, position 30
Operator "+" line 456, position 36
DecimalInteger "1" line 456, position 38
Separator "]" line 456, position 39
Separator ";" line 456, position 40
Separator "}" line 457, position 4
Separator "}" line 458, position 3
Modifier "public" line 467, position 3
Keyword "void" line 467, position 10
Identifier "add" line 467, position 15
Separator "(" line 467, position 18
BasicType "int" line 467, position 19
Identifier "index1" line 467, position 23
Separator "," line 467, position 29
BasicType "int" line 467, position 31
Identifier "index2" line 467, position 35
Separator "," line 467, position 41
BasicType "long" line 467, position 43
Identifier "value" line 467, position 48
Separator ")" line 467, position 53
Separator "{" line 467, position 55
Keyword "for" line 468, position 4
Separator "(" line 468, position 8
BasicType "int" line 468, position 9
Identifier "i1" line 468, position 13
Operator "=" line 468, position 16
Identifier "index1" line 468, position 18
Separator ";" line 468, position 24
Identifier "i1" line 468, position 26
Operator "<" line 468, position 29
Identifier "array" line 468, position 31
Separator "." line 468, position 36
Identifier "length" line 468, position 37
Separator ";" line 468, position 43
Identifier "i1" line 468, position 45
Operator "+=" line 468, position 48
Separator "(" line 468, position 51
Identifier "i1" line 468, position 52
Operator "&" line 468, position 55
Operator "-" line 468, position 57
Identifier "i1" line 468, position 58
Separator ")" line 468, position 60
Separator ")" line 468, position 61
Separator "{" line 468, position 63
Keyword "for" line 469, position 5
Separator "(" line 469, position 9
BasicType "int" line 469, position 10
Identifier "i2" line 469, position 14
Operator "=" line 469, position 17
Identifier "index2" line 469, position 19
Separator ";" line 469, position 25
Identifier "i2" line 469, position 27
Operator "<" line 469, position 30
Identifier "array" line 469, position 32
Separator "." line 469, position 37
Identifier "length" line 469, position 38
Separator ";" line 469, position 44
Identifier "i2" line 469, position 46
Operator "+=" line 469, position 49
Separator "(" line 469, position 52
Identifier "i2" line 469, position 53
Operator "&" line 469, position 56
Operator "-" line 469, position 58
Identifier "i2" line 469, position 59
Separator ")" line 469, position 61
Separator ")" line 469, position 62
Separator "{" line 469, position 64
Identifier "array" line 470, position 6
Separator "[" line 470, position 11
Identifier "i1" line 470, position 12
Separator "]" line 470, position 14
Separator "[" line 470, position 15
Identifier "i2" line 470, position 16
Separator "]" line 470, position 18
Operator "+=" line 470, position 20
Identifier "value" line 470, position 23
Separator ";" line 470, position 28
Separator "}" line 471, position 5
Separator "}" line 472, position 4
Separator "}" line 473, position 3
Modifier "public" line 482, position 3
BasicType "long" line 482, position 10
Identifier "getSum" line 482, position 15
Separator "(" line 482, position 21
BasicType "int" line 482, position 22
Identifier "index1" line 482, position 26
Separator "," line 482, position 32
BasicType "int" line 482, position 34
Identifier "index2" line 482, position 38
Separator ")" line 482, position 44
Separator "{" line 482, position 46
BasicType "long" line 483, position 4
Identifier "sum" line 483, position 9
Operator "=" line 483, position 13
DecimalInteger "0L" line 483, position 15
Separator ";" line 483, position 17
Keyword "for" line 484, position 4
Separator "(" line 484, position 8
BasicType "int" line 484, position 9
Identifier "i1" line 484, position 13
Operator "=" line 484, position 16
Identifier "index1" line 484, position 18
Separator ";" line 484, position 24
Identifier "i1" line 484, position 26
Operator ">" line 484, position 29
DecimalInteger "0" line 484, position 31
Separator ";" line 484, position 32
Identifier "i1" line 484, position 34
Operator "-=" line 484, position 37
Separator "(" line 484, position 40
Identifier "i1" line 484, position 41
Operator "&" line 484, position 44
Operator "-" line 484, position 46
Identifier "i1" line 484, position 47
Separator ")" line 484, position 49
Separator ")" line 484, position 50
Separator "{" line 484, position 52
Keyword "for" line 485, position 5
Separator "(" line 485, position 9
BasicType "int" line 485, position 10
Identifier "i2" line 485, position 14
Operator "=" line 485, position 17
Identifier "index2" line 485, position 19
Separator ";" line 485, position 25
Identifier "i2" line 485, position 27
Operator ">" line 485, position 30
DecimalInteger "0" line 485, position 32
Separator ";" line 485, position 33
Identifier "i2" line 485, position 35
Operator "-=" line 485, position 38
Separator "(" line 485, position 41
Identifier "i2" line 485, position 42
Operator "&" line 485, position 45
Operator "-" line 485, position 47
Identifier "i2" line 485, position 48
Separator ")" line 485, position 50
Separator ")" line 485, position 51
Separator "{" line 485, position 53
Identifier "sum" line 486, position 6
Operator "+=" line 486, position 10
Identifier "array" line 486, position 13
Separator "[" line 486, position 18
Identifier "i1" line 486, position 19
Separator "]" line 486, position 21
Separator "[" line 486, position 22
Identifier "i2" line 486, position 23
Separator "]" line 486, position 25
Separator ";" line 486, position 26
Separator "}" line 487, position 5
Separator "}" line 488, position 4
Keyword "return" line 489, position 4
Identifier "sum" line 489, position 11
Separator ";" line 489, position 14
Separator "}" line 490, position 3
Separator "}" line 491, position 2
Keyword "interface" line 493, position 2
Identifier "UnionFind" line 493, position 12
Separator "{" line 493, position 22
Keyword "void" line 494, position 3
Identifier "union" line 494, position 8
Separator "(" line 494, position 13
BasicType "int" line 494, position 14
Identifier "A" line 494, position 18
Separator "," line 494, position 19
BasicType "int" line 494, position 21
Identifier "B" line 494, position 25
Separator ")" line 494, position 26
Separator ";" line 494, position 27
BasicType "boolean" line 495, position 3
Identifier "judge" line 495, position 11
Separator "(" line 495, position 16
BasicType "int" line 495, position 17
Identifier "A" line 495, position 21
Separator "," line 495, position 22
BasicType "int" line 495, position 24
Identifier "B" line 495, position 28
Separator ")" line 495, position 29
Separator ";" line 495, position 30
Identifier "Set" line 496, position 3
Operator "<" line 496, position 6
Identifier "Integer" line 496, position 7
Operator ">" line 496, position 14
Identifier "getSet" line 496, position 16
Separator "(" line 496, position 22
BasicType "int" line 496, position 23
Identifier "id" line 496, position 27
Separator ")" line 496, position 29
Separator ";" line 496, position 30
Separator "}" line 497, position 2
Keyword "class" line 505, position 2
Identifier "SetUnionFind" line 505, position 8
Keyword "extends" line 505, position 21
Identifier "ArrayUnionFind" line 505, position 29
Separator "{" line 505, position 44
Identifier "Map" line 506, position 3
Operator "<" line 506, position 6
Identifier "Integer" line 506, position 7
Separator "," line 506, position 14
Identifier "Set" line 506, position 16
Operator "<" line 506, position 19
Identifier "Integer" line 506, position 20
Operator ">" line 506, position 27
Operator ">" line 506, position 28
Identifier "map" line 506, position 30
Separator ";" line 506, position 33
Modifier "public" line 507, position 3
Identifier "SetUnionFind" line 507, position 10
Separator "(" line 507, position 22
BasicType "int" line 507, position 23
Identifier "size" line 507, position 27
Separator ")" line 507, position 31
Separator "{" line 507, position 33
Keyword "super" line 508, position 4
Separator "(" line 508, position 9
Identifier "size" line 508, position 10
Separator ")" line 508, position 14
Separator ";" line 508, position 15
Identifier "map" line 509, position 4
Operator "=" line 509, position 8
Keyword "new" line 509, position 10
Identifier "HashMap" line 509, position 14
Operator "<" line 509, position 21
Operator ">" line 509, position 22
Separator "(" line 509, position 23
Separator ")" line 509, position 24
Separator ";" line 509, position 25
Keyword "for" line 510, position 4
Separator "(" line 510, position 8
BasicType "int" line 510, position 9
Identifier "i" line 510, position 13
Operator "=" line 510, position 15
DecimalInteger "0" line 510, position 17
Separator ";" line 510, position 18
Identifier "i" line 510, position 20
Operator "<" line 510, position 22
Identifier "size" line 510, position 24
Separator ";" line 510, position 28
Identifier "i" line 510, position 30
Operator "++" line 510, position 31
Separator ")" line 510, position 33
Separator "{" line 510, position 35
Identifier "map" line 511, position 5
Separator "." line 511, position 8
Identifier "put" line 511, position 9
Separator "(" line 511, position 12
Identifier "i" line 511, position 13
Separator "," line 511, position 14
Keyword "new" line 511, position 16
Identifier "HashSet" line 511, position 20
Operator "<" line 511, position 27
Operator ">" line 511, position 28
Separator "(" line 511, position 29
Separator ")" line 511, position 30
Separator ")" line 511, position 31
Separator ";" line 511, position 32
Identifier "map" line 512, position 5
Separator "." line 512, position 8
Identifier "get" line 512, position 9
Separator "(" line 512, position 12
Identifier "i" line 512, position 13
Separator ")" line 512, position 14
Separator "." line 512, position 15
Identifier "add" line 512, position 16
Separator "(" line 512, position 19
Identifier "i" line 512, position 20
Separator ")" line 512, position 21
Separator ";" line 512, position 22
Separator "}" line 513, position 4
Separator "}" line 514, position 3
Annotation "@" line 516, position 3
Identifier "Override" line 516, position 4
Modifier "protected" line 517, position 3
Keyword "void" line 517, position 13
Identifier "unionTo" line 517, position 18
Separator "(" line 517, position 25
BasicType "int" line 517, position 26
Identifier "source" line 517, position 30
Separator "," line 517, position 36
BasicType "int" line 517, position 38
Identifier "dest" line 517, position 42
Separator ")" line 517, position 46
Separator "{" line 517, position 48
Keyword "super" line 518, position 4
Separator "." line 518, position 9
Identifier "unionTo" line 518, position 10
Separator "(" line 518, position 17
Identifier "source" line 518, position 18
Separator "," line 518, position 24
Identifier "dest" line 518, position 26
Separator ")" line 518, position 30
Separator ";" line 518, position 31
Identifier "map" line 519, position 4
Separator "." line 519, position 7
Identifier "get" line 519, position 8
Separator "(" line 519, position 11
Identifier "dest" line 519, position 12
Separator ")" line 519, position 16
Separator "." line 519, position 17
Identifier "addAll" line 519, position 18
Separator "(" line 519, position 24
Identifier "map" line 519, position 25
Separator "." line 519, position 28
Identifier "get" line 519, position 29
Separator "(" line 519, position 32
Identifier "source" line 519, position 33
Separator ")" line 519, position 39
Separator ")" line 519, position 40
Separator ";" line 519, position 41
Separator "}" line 520, position 3
Annotation "@" line 522, position 3
Identifier "Override" line 522, position 4
Modifier "public" line 523, position 3
Identifier "Set" line 523, position 10
Operator "<" line 523, position 13
Identifier "Integer" line 523, position 14
Operator ">" line 523, position 21
Identifier "getSet" line 523, position 23
Separator "(" line 523, position 29
BasicType "int" line 523, position 30
Identifier "id" line 523, position 34
Separator ")" line 523, position 36
Separator "{" line 523, position 38
Keyword "return" line 524, position 4
Identifier "map" line 524, position 11
Separator "." line 524, position 14
Identifier "get" line 524, position 15
Separator "(" line 524, position 18
Identifier "root" line 524, position 19
Separator "(" line 524, position 23
Identifier "id" line 524, position 24
Separator ")" line 524, position 26
Separator ")" line 524, position 27
Separator ";" line 524, position 28
Separator "}" line 525, position 3
Separator "}" line 526, position 2
Keyword "class" line 532, position 2
Identifier "ArrayUnionFind" line 532, position 8
Keyword "implements" line 532, position 23
Identifier "UnionFind" line 532, position 34
Separator "{" line 532, position 44
BasicType "int" line 533, position 3
Separator "[" line 533, position 6
Separator "]" line 533, position 7
Identifier "parent" line 533, position 9
Separator ";" line 533, position 15
BasicType "int" line 534, position 3
Separator "[" line 534, position 6
Separator "]" line 534, position 7
Identifier "rank" line 534, position 9
Separator ";" line 534, position 13
BasicType "int" line 535, position 3
Identifier "size" line 535, position 7
Separator ";" line 535, position 11
Modifier "public" line 536, position 3
Identifier "ArrayUnionFind" line 536, position 10
Separator "(" line 536, position 24
BasicType "int" line 536, position 25
Identifier "size" line 536, position 29
Separator ")" line 536, position 33
Separator "{" line 536, position 35
Identifier "parent" line 537, position 4
Operator "=" line 537, position 11
Keyword "new" line 537, position 13
BasicType "int" line 537, position 17
Separator "[" line 537, position 20
Identifier "size" line 537, position 21
Separator "]" line 537, position 25
Separator ";" line 537, position 26
Keyword "for" line 538, position 4
Separator "(" line 538, position 8
BasicType "int" line 538, position 9
Identifier "i" line 538, position 13
Operator "=" line 538, position 15
DecimalInteger "0" line 538, position 17
Separator ";" line 538, position 18
Identifier "i" line 538, position 20
Operator "<" line 538, position 22
Identifier "size" line 538, position 24
Separator ";" line 538, position 28
Identifier "i" line 538, position 30
Operator "++" line 538, position 31
Separator ")" line 538, position 33
Separator "{" line 538, position 35
Identifier "parent" line 539, position 5
Separator "[" line 539, position 11
Identifier "i" line 539, position 12
Separator "]" line 539, position 13
Operator "=" line 539, position 15
Identifier "i" line 539, position 17
Separator ";" line 539, position 18
Separator "}" line 540, position 4
Identifier "rank" line 541, position 4
Operator "=" line 541, position 9
Keyword "new" line 541, position 11
BasicType "int" line 541, position 15
Separator "[" line 541, position 18
Identifier "size" line 541, position 19
Separator "]" line 541, position 23
Separator ";" line 541, position 24
Keyword "this" line 542, position 4
Separator "." line 542, position 8
Identifier "size" line 542, position 9
Operator "=" line 542, position 14
Identifier "size" line 542, position 16
Separator ";" line 542, position 20
Separator "}" line 543, position 3
Annotation "@" line 545, position 3
Identifier "Override" line 545, position 4
Modifier "public" line 546, position 3
Keyword "void" line 546, position 10
Identifier "union" line 546, position 15
Separator "(" line 546, position 20
BasicType "int" line 546, position 21
Identifier "A" line 546, position 25
Separator "," line 546, position 26
BasicType "int" line 546, position 28
Identifier "B" line 546, position 32
Separator ")" line 546, position 33
Separator "{" line 546, position 35
BasicType "int" line 547, position 4
Identifier "rootA" line 547, position 8
Operator "=" line 547, position 14
Identifier "root" line 547, position 16
Separator "(" line 547, position 20
Identifier "A" line 547, position 21
Separator ")" line 547, position 22
Separator ";" line 547, position 23
BasicType "int" line 548, position 4
Identifier "rootB" line 548, position 8
Operator "=" line 548, position 14
Identifier "root" line 548, position 16
Separator "(" line 548, position 20
Identifier "B" line 548, position 21
Separator ")" line 548, position 22
Separator ";" line 548, position 23
Keyword "if" line 549, position 4
Separator "(" line 549, position 7
Identifier "rootA" line 549, position 8
Operator "!=" line 549, position 14
Identifier "rootB" line 549, position 17
Separator ")" line 549, position 22
Separator "{" line 549, position 24
Keyword "if" line 550, position 5
Separator "(" line 550, position 8
Identifier "rank" line 550, position 9
Separator "[" line 550, position 13
Identifier "rootA" line 550, position 14
Separator "]" line 550, position 19
Operator "<" line 550, position 21
Identifier "rank" line 550, position 23
Separator "[" line 550, position 27
Identifier "rootB" line 550, position 28
Separator "]" line 550, position 33
Separator ")" line 550, position 34
Separator "{" line 550, position 36
Identifier "unionTo" line 551, position 6
Separator "(" line 551, position 13
Identifier "rootA" line 551, position 14
Separator "," line 551, position 19
Identifier "rootB" line 551, position 21
Separator ")" line 551, position 26
Separator ";" line 551, position 27
Separator "}" line 552, position 5
Keyword "else" line 552, position 7
Separator "{" line 552, position 12
Identifier "unionTo" line 553, position 6
Separator "(" line 553, position 13
Identifier "rootB" line 553, position 14
Separator "," line 553, position 19
Identifier "rootA" line 553, position 21
Separator ")" line 553, position 26
Separator ";" line 553, position 27
Keyword "if" line 554, position 6
Separator "(" line 554, position 9
Identifier "rank" line 554, position 10
Separator "[" line 554, position 14
Identifier "rootA" line 554, position 15
Separator "]" line 554, position 20
Operator "==" line 554, position 22
Identifier "rank" line 554, position 25
Separator "[" line 554, position 29
Identifier "rootB" line 554, position 30
Separator "]" line 554, position 35
Separator ")" line 554, position 36
Separator "{" line 554, position 38
Identifier "rank" line 555, position 7
Separator "[" line 555, position 11
Identifier "rootA" line 555, position 12
Separator "]" line 555, position 17
Operator "++" line 555, position 18
Separator ";" line 555, position 20
Separator "}" line 556, position 6
Separator "}" line 557, position 5
Separator "}" line 558, position 4
Separator "}" line 559, position 3
Modifier "protected" line 561, position 3
Keyword "void" line 561, position 13
Identifier "unionTo" line 561, position 18
Separator "(" line 561, position 25
BasicType "int" line 561, position 26
Identifier "source" line 561, position 30
Separator "," line 561, position 36
BasicType "int" line 561, position 38
Identifier "dest" line 561, position 42
Separator ")" line 561, position 46
Separator "{" line 561, position 48
Identifier "parent" line 562, position 4
Separator "[" line 562, position 10
Identifier "source" line 562, position 11
Separator "]" line 562, position 17
Operator "=" line 562, position 19
Identifier "dest" line 562, position 21
Separator ";" line 562, position 25
Separator "}" line 563, position 3
Annotation "@" line 565, position 3
Identifier "Override" line 565, position 4
Modifier "public" line 566, position 3
BasicType "boolean" line 566, position 10
Identifier "judge" line 566, position 18
Separator "(" line 566, position 23
BasicType "int" line 566, position 24
Identifier "A" line 566, position 28
Separator "," line 566, position 29
BasicType "int" line 566, position 31
Identifier "B" line 566, position 35
Separator ")" line 566, position 36
Separator "{" line 566, position 38
Keyword "return" line 567, position 4
Identifier "root" line 567, position 11
Separator "(" line 567, position 15
Identifier "A" line 567, position 16
Separator ")" line 567, position 17
Operator "==" line 567, position 19
Identifier "root" line 567, position 22
Separator "(" line 567, position 26
Identifier "B" line 567, position 27
Separator ")" line 567, position 28
Separator ";" line 567, position 29
Separator "}" line 568, position 3
Annotation "@" line 570, position 3
Identifier "Override" line 570, position 4
Modifier "public" line 571, position 3
Identifier "Set" line 571, position 10
Operator "<" line 571, position 13
Identifier "Integer" line 571, position 14
Operator ">" line 571, position 21
Identifier "getSet" line 571, position 23
Separator "(" line 571, position 29
BasicType "int" line 571, position 30
Identifier "id" line 571, position 34
Separator ")" line 571, position 36
Separator "{" line 571, position 38
Identifier "Set" line 572, position 4
Operator "<" line 572, position 7
Identifier "Integer" line 572, position 8
Operator ">" line 572, position 15
Identifier "set" line 572, position 17
Operator "=" line 572, position 21
Keyword "new" line 572, position 23
Identifier "HashSet" line 572, position 27
Operator "<" line 572, position 34
Operator ">" line 572, position 35
Separator "(" line 572, position 36
Separator ")" line 572, position 37
Separator ";" line 572, position 38
Identifier "IntStream" line 573, position 4
Separator "." line 573, position 13
Identifier "range" line 573, position 14
Separator "(" line 573, position 19
DecimalInteger "0" line 573, position 20
Separator "," line 573, position 21
Identifier "size" line 573, position 23
Separator ")" line 573, position 27
Separator "." line 573, position 28
Identifier "filter" line 573, position 29
Separator "(" line 573, position 35
Identifier "i" line 573, position 36
Operator "->" line 573, position 38
Identifier "judge" line 573, position 41
Separator "(" line 573, position 46
Identifier "i" line 573, position 47
Separator "," line 573, position 48
Identifier "id" line 573, position 50
Separator ")" line 573, position 52
Separator ")" line 573, position 53
Separator "." line 573, position 54
Identifier "forEach" line 573, position 55
Separator "(" line 573, position 62
Identifier "set" line 573, position 63
Operator "::" line 573, position 66
Identifier "add" line 573, position 68
Separator ")" line 573, position 71
Separator ";" line 573, position 72
Keyword "return" line 574, position 4
Identifier "set" line 574, position 11
Separator ";" line 574, position 14
Separator "}" line 575, position 3
Modifier "protected" line 577, position 3
BasicType "int" line 577, position 13
Identifier "root" line 577, position 17
Separator "(" line 577, position 21
BasicType "int" line 577, position 22
Identifier "id" line 577, position 26
Separator ")" line 577, position 28
Separator "{" line 577, position 30
Keyword "if" line 578, position 4
Separator "(" line 578, position 7
Identifier "parent" line 578, position 8
Separator "[" line 578, position 14
Identifier "id" line 578, position 15
Separator "]" line 578, position 17
Operator "==" line 578, position 19
Identifier "id" line 578, position 22
Separator ")" line 578, position 24
Separator "{" line 578, position 26
Keyword "return" line 579, position 5
Identifier "id" line 579, position 12
Separator ";" line 579, position 14
Separator "}" line 580, position 4
Identifier "parent" line 581, position 4
Separator "[" line 581, position 10
Identifier "id" line 581, position 11
Separator "]" line 581, position 13
Operator "=" line 581, position 15
Identifier "root" line 581, position 17
Separator "(" line 581, position 21
Identifier "parent" line 581, position 22
Separator "[" line 581, position 28
Identifier "id" line 581, position 29
Separator "]" line 581, position 31
Separator ")" line 581, position 32
Separator ";" line 581, position 33
Keyword "return" line 582, position 4
Identifier "parent" line 582, position 11
Separator "[" line 582, position 17
Identifier "id" line 582, position 18
Separator "]" line 582, position 20
Separator ";" line 582, position 21
Separator "}" line 583, position 3
Separator "}" line 584, position 2
Keyword "class" line 589, position 2
Identifier "PrimeNumberUtils" line 589, position 8
Separator "{" line 589, position 25
BasicType "boolean" line 590, position 3
Separator "[" line 590, position 10
Separator "]" line 590, position 11
Identifier "isPrimeArray" line 590, position 13
Separator ";" line 590, position 25
Identifier "List" line 591, position 3
Operator "<" line 591, position 7
Identifier "Integer" line 591, position 8
Operator ">" line 591, position 15
Identifier "primes" line 591, position 17
Separator ";" line 591, position 23
Modifier "public" line 597, position 3
Identifier "PrimeNumberUtils" line 597, position 10
Separator "(" line 597, position 26
BasicType "int" line 597, position 27
Identifier "limit" line 597, position 31
Separator ")" line 597, position 36
Separator "{" line 597, position 38
Keyword "if" line 598, position 4
Separator "(" line 598, position 7
Identifier "limit" line 598, position 8
Operator ">" line 598, position 14
DecimalInteger "10000000" line 598, position 16
Separator ")" line 598, position 24
Separator "{" line 598, position 26
Identifier "System" line 599, position 5
Separator "." line 599, position 11
Identifier "err" line 599, position 12
Separator "." line 599, position 15
Identifier "println" line 599, position 16
Separator "(" line 599, position 23
String ""上限の値が高すぎるため素数ユーティリティの初期化でTLEする可能性が大変高いです"" line 599, position 24
Separator ")" line 599, position 66
Separator ";" line 599, position 67
Separator "}" line 600, position 4
Identifier "primes" line 601, position 4
Operator "=" line 601, position 11
Keyword "new" line 601, position 13
Identifier "ArrayList" line 601, position 17
Operator "<" line 601, position 26
Operator ">" line 601, position 27
Separator "(" line 601, position 28
Separator ")" line 601, position 29
Separator ";" line 601, position 30
Identifier "isPrimeArray" line 602, position 4
Operator "=" line 602, position 17
Keyword "new" line 602, position 19
BasicType "boolean" line 602, position 23
Separator "[" line 602, position 30
Identifier "limit" line 602, position 31
Separator "]" line 602, position 36
Separator ";" line 602, position 37
Keyword "if" line 603, position 4
Separator "(" line 603, position 7
Identifier "limit" line 603, position 8
Operator ">" line 603, position 14
DecimalInteger "2" line 603, position 16
Separator ")" line 603, position 17
Separator "{" line 603, position 19
Identifier "primes" line 604, position 5
Separator "." line 604, position 11
Identifier "add" line 604, position 12
Separator "(" line 604, position 15
DecimalInteger "2" line 604, position 16
Separator ")" line 604, position 17
Separator ";" line 604, position 18
Identifier "isPrimeArray" line 605, position 5
Separator "[" line 605, position 17
DecimalInteger "2" line 605, position 18
Separator "]" line 605, position 19
Operator "=" line 605, position 21
Boolean "true" line 605, position 23
Separator ";" line 605, position 27
Separator "}" line 606, position 4
Keyword "for" line 608, position 4
Separator "(" line 608, position 8
BasicType "int" line 608, position 9
Identifier "i" line 608, position 13
Operator "=" line 608, position 15
DecimalInteger "3" line 608, position 17
Separator ";" line 608, position 18
Identifier "i" line 608, position 20
Operator "<" line 608, position 22
Identifier "limit" line 608, position 24
Separator ";" line 608, position 29
Identifier "i" line 608, position 31
Operator "+=" line 608, position 33
DecimalInteger "2" line 608, position 36
Separator ")" line 608, position 37
Separator "{" line 608, position 39
Keyword "if" line 609, position 5
Separator "(" line 609, position 8
Identifier "isPrime" line 609, position 9
Separator "(" line 609, position 16
Identifier "i" line 609, position 17
Separator "," line 609, position 18
Identifier "primes" line 609, position 20
Separator ")" line 609, position 26
Separator ")" line 609, position 27
Separator "{" line 609, position 29
Identifier "primes" line 610, position 6
Separator "." line 610, position 12
Identifier "add" line 610, position 13
Separator "(" line 610, position 16
Identifier "i" line 610, position 17
Separator ")" line 610, position 18
Separator ";" line 610, position 19
Identifier "isPrimeArray" line 611, position 6
Separator "[" line 611, position 18
Identifier "i" line 611, position 19
Separator "]" line 611, position 20
Operator "=" line 611, position 22
Boolean "true" line 611, position 24
Separator ";" line 611, position 28
Separator "}" line 612, position 5
Separator "}" line 613, position 4
Separator "}" line 614, position 3
Modifier "public" line 616, position 3
Identifier "List" line 616, position 10
Operator "<" line 616, position 14
Identifier "Integer" line 616, position 15
Operator ">" line 616, position 22
Identifier "getPrimeNumberList" line 616, position 24
Separator "(" line 616, position 42
Separator ")" line 616, position 43
Separator "{" line 616, position 45
Keyword "return" line 617, position 4
Identifier "primes" line 617, position 11
Separator ";" line 617, position 17
Separator "}" line 618, position 3
Modifier "public" line 620, position 3
BasicType "boolean" line 620, position 10
Identifier "isPrime" line 620, position 18
Separator "(" line 620, position 25
BasicType "int" line 620, position 26
Identifier "n" line 620, position 30
Separator ")" line 620, position 31
Separator "{" line 620, position 33
Keyword "return" line 621, position 4
Identifier "isPrimeArray" line 621, position 11
Separator "[" line 621, position 23
Identifier "n" line 621, position 24
Separator "]" line 621, position 25
Separator ";" line 621, position 26
Separator "}" line 622, position 3
Modifier "private" line 624, position 3
BasicType "boolean" line 624, position 11
Identifier "isPrime" line 624, position 19
Separator "(" line 624, position 26
BasicType "int" line 624, position 27
Identifier "n" line 624, position 31
Separator "," line 624, position 32
Identifier "List" line 624, position 34
Operator "<" line 624, position 38
Identifier "Integer" line 624, position 39
Operator ">" line 624, position 46
Identifier "primes" line 624, position 48
Separator ")" line 624, position 54
Separator "{" line 624, position 56
Keyword "for" line 625, position 4
Separator "(" line 625, position 8
BasicType "int" line 625, position 9
Identifier "prime" line 625, position 13
Operator ":" line 625, position 19
Identifier "primes" line 625, position 21
Separator ")" line 625, position 27
Separator "{" line 625, position 29
Keyword "if" line 626, position 5
Separator "(" line 626, position 8
Identifier "n" line 626, position 9
Operator "%" line 626, position 11
Identifier "prime" line 626, position 13
Operator "==" line 626, position 19
DecimalInteger "0" line 626, position 22
Separator ")" line 626, position 23
Separator "{" line 626, position 25
Keyword "return" line 627, position 6
Boolean "false" line 627, position 13
Separator ";" line 627, position 18
Separator "}" line 628, position 5
Keyword "if" line 629, position 5
Separator "(" line 629, position 8
Identifier "prime" line 629, position 9
Operator ">" line 629, position 15
Identifier "Math" line 629, position 17
Separator "." line 629, position 21
Identifier "sqrt" line 629, position 22
Separator "(" line 629, position 26
Identifier "n" line 629, position 27
Separator ")" line 629, position 28
Separator ")" line 629, position 29
Separator "{" line 629, position 31
Keyword "break" line 630, position 6
Separator ";" line 630, position 11
Separator "}" line 631, position 5
Separator "}" line 632, position 4
Keyword "return" line 633, position 4
Boolean "true" line 633, position 11
Separator ";" line 633, position 15
Separator "}" line 634, position 3
Separator "}" line 635, position 2
Keyword "interface" line 637, position 2
Identifier "BitSet" line 637, position 12
Separator "{" line 637, position 19
Keyword "void" line 638, position 3
Identifier "set" line 638, position 8
Separator "(" line 638, position 11
BasicType "int" line 638, position 12
Identifier "index" line 638, position 16
Separator "," line 638, position 21
BasicType "boolean" line 638, position 23
Identifier "bit" line 638, position 31
Separator ")" line 638, position 34
Separator ";" line 638, position 35
BasicType "boolean" line 639, position 3
Identifier "get" line 639, position 11
Separator "(" line 639, position 14
BasicType "int" line 639, position 15
Identifier "index" line 639, position 19
Separator ")" line 639, position 24
Separator ";" line 639, position 25
Keyword "void" line 640, position 3
Identifier "shiftRight" line 640, position 8
Separator "(" line 640, position 18
BasicType "int" line 640, position 19
Identifier "num" line 640, position 23
Separator ")" line 640, position 26
Separator ";" line 640, position 27
Keyword "void" line 641, position 3
Identifier "shiftLeft" line 641, position 8
Separator "(" line 641, position 17
BasicType "int" line 641, position 18
Identifier "num" line 641, position 22
Separator ")" line 641, position 25
Separator ";" line 641, position 26
Keyword "void" line 642, position 3
Identifier "or" line 642, position 8
Separator "(" line 642, position 10
Identifier "BitSet" line 642, position 11
Identifier "bitset" line 642, position 18
Separator ")" line 642, position 24
Separator ";" line 642, position 25
Keyword "void" line 643, position 3
Identifier "and" line 643, position 8
Separator "(" line 643, position 11
Identifier "BitSet" line 643, position 12
Identifier "bitset" line 643, position 19
Separator ")" line 643, position 25
Separator ";" line 643, position 26
Separator "}" line 644, position 2
Keyword "class" line 651, position 2
Identifier "LongBit" line 651, position 8
Keyword "implements" line 651, position 16
Identifier "BitSet" line 651, position 27
Separator "{" line 651, position 34
BasicType "long" line 652, position 3
Separator "[" line 652, position 7
Separator "]" line 652, position 8
Identifier "bitArray" line 652, position 10
Separator ";" line 652, position 18
Modifier "public" line 654, position 3
Identifier "LongBit" line 654, position 10
Separator "(" line 654, position 17
BasicType "int" line 654, position 18
Identifier "size" line 654, position 22
Separator ")" line 654, position 26
Separator "{" line 654, position 28
Identifier "bitArray" line 655, position 4
Operator "=" line 655, position 13
Keyword "new" line 655, position 15
BasicType "long" line 655, position 19
Separator "[" line 655, position 23
Separator "(" line 655, position 24
Separator "(" line 655, position 25
Identifier "size" line 655, position 26
Operator "+" line 655, position 31
DecimalInteger "63" line 655, position 33
Separator ")" line 655, position 35
Operator "/" line 655, position 37
DecimalInteger "64" line 655, position 39
Separator ")" line 655, position 41
Separator "]" line 655, position 42
Separator ";" line 655, position 43
Separator "}" line 656, position 3
Annotation "@" line 658, position 3
Identifier "Override" line 658, position 4
Modifier "public" line 659, position 3
Keyword "void" line 659, position 10
Identifier "set" line 659, position 15
Separator "(" line 659, position 18
BasicType "int" line 659, position 19
Identifier "index" line 659, position 23
Separator "," line 659, position 28
BasicType "boolean" line 659, position 30
Identifier "bit" line 659, position 38
Separator ")" line 659, position 41
Separator "{" line 659, position 43
BasicType "int" line 660, position 4
Identifier "segment" line 660, position 8
Operator "=" line 660, position 16
Identifier "index" line 660, position 18
Operator "/" line 660, position 24
DecimalInteger "64" line 660, position 26
Separator ";" line 660, position 28
BasicType "int" line 661, position 4
Identifier "inIndex" line 661, position 8
Operator "=" line 661, position 16
Identifier "index" line 661, position 18
Operator "%" line 661, position 24
DecimalInteger "64" line 661, position 26
Separator ";" line 661, position 28
Keyword "if" line 662, position 4
Separator "(" line 662, position 7
Identifier "bit" line 662, position 8
Separator ")" line 662, position 11
Separator "{" line 662, position 13
Identifier "bitArray" line 663, position 5
Separator "[" line 663, position 13
Identifier "segment" line 663, position 14
Separator "]" line 663, position 21
Operator "|=" line 663, position 23
DecimalInteger "1L" line 663, position 26
Operator "<<" line 663, position 29
Identifier "inIndex" line 663, position 32
Separator ";" line 663, position 39
Separator "}" line 664, position 4
Keyword "else" line 664, position 6
Separator "{" line 664, position 11
Identifier "bitArray" line 665, position 5
Separator "[" line 665, position 13
Identifier "segment" line 665, position 14
Separator "]" line 665, position 21
Operator "&=" line 665, position 23
Operator "~" line 665, position 26
Separator "(" line 665, position 27
DecimalInteger "1L" line 665, position 28
Operator "<<" line 665, position 31
Identifier "inIndex" line 665, position 34
Separator ")" line 665, position 41
Separator ";" line 665, position 42
Separator "}" line 666, position 4
Separator "}" line 667, position 3
Annotation "@" line 669, position 3
Identifier "Override" line 669, position 4
Modifier "public" line 670, position 3
BasicType "boolean" line 670, position 10
Identifier "get" line 670, position 18
Separator "(" line 670, position 21
BasicType "int" line 670, position 22
Identifier "index" line 670, position 26
Separator ")" line 670, position 31
Separator "{" line 670, position 33
BasicType "int" line 671, position 4
Identifier "segment" line 671, position 8
Operator "=" line 671, position 16
Identifier "index" line 671, position 18
Operator "/" line 671, position 24
DecimalInteger "64" line 671, position 26
Separator ";" line 671, position 28
BasicType "int" line 672, position 4
Identifier "inIndex" line 672, position 8
Operator "=" line 672, position 16
Identifier "index" line 672, position 18
Operator "%" line 672, position 24
DecimalInteger "64" line 672, position 26
Separator ";" line 672, position 28
Keyword "return" line 673, position 4
Separator "(" line 673, position 11
Identifier "bitArray" line 673, position 12
Separator "[" line 673, position 20
Identifier "segment" line 673, position 21
Separator "]" line 673, position 28
Operator "&" line 673, position 30
Separator "(" line 673, position 32
DecimalInteger "1L" line 673, position 33
Operator "<<" line 673, position 36
Identifier "inIndex" line 673, position 39
Separator ")" line 673, position 46
Separator ")" line 673, position 47
Operator "!=" line 673, position 49
DecimalInteger "0L" line 673, position 52
Separator ";" line 673, position 54
Separator "}" line 674, position 3
Annotation "@" line 676, position 3
Identifier "Override" line 676, position 4
Modifier "public" line 677, position 3
Keyword "void" line 677, position 10
Identifier "shiftRight" line 677, position 15
Separator "(" line 677, position 25
BasicType "int" line 677, position 26
Identifier "num" line 677, position 30
Separator ")" line 677, position 33
Separator "{" line 677, position 35
BasicType "int" line 678, position 4
Identifier "shiftSeg" line 678, position 8
Operator "=" line 678, position 17
Identifier "num" line 678, position 19
Operator "/" line 678, position 23
DecimalInteger "64" line 678, position 25
Separator ";" line 678, position 27
BasicType "int" line 679, position 4
Identifier "shiftInI" line 679, position 8
Operator "=" line 679, position 17
Identifier "num" line 679, position 19
Operator "%" line 679, position 23
DecimalInteger "64" line 679, position 25
Separator ";" line 679, position 27
Keyword "for" line 680, position 4
Separator "(" line 680, position 8
BasicType "int" line 680, position 9
Identifier "segment" line 680, position 13
Operator "=" line 680, position 21
DecimalInteger "0" line 680, position 23
Separator ";" line 680, position 24
Identifier "segment" line 680, position 26
Operator "<" line 680, position 34
Identifier "bitArray" line 680, position 36
Separator "." line 680, position 44
Identifier "length" line 680, position 45
Separator ";" line 680, position 51
Identifier "segment" line 680, position 53
Operator "++" line 680, position 60
Separator ")" line 680, position 62
Separator "{" line 680, position 64
BasicType "int" line 681, position 5
Identifier "sourceSeg" line 681, position 9
Operator "=" line 681, position 19
Identifier "segment" line 681, position 21
Operator "+" line 681, position 29
Identifier "shiftSeg" line 681, position 31
Separator ";" line 681, position 39
Keyword "if" line 682, position 5
Separator "(" line 682, position 8
Identifier "sourceSeg" line 682, position 9
Operator "<" line 682, position 19
Identifier "bitArray" line 682, position 21
Separator "." line 682, position 29
Identifier "length" line 682, position 30
Separator ")" line 682, position 36
Separator "{" line 682, position 38
Identifier "bitArray" line 683, position 6
Separator "[" line 683, position 14
Identifier "segment" line 683, position 15
Separator "]" line 683, position 22
Operator "=" line 683, position 24
Identifier "bitArray" line 683, position 26
Separator "[" line 683, position 34
Identifier "sourceSeg" line 683, position 35
Separator "]" line 683, position 44
Operator ">" line 683, position 46
Operator ">" line 683, position 47
Operator ">" line 683, position 48
Identifier "shiftInI" line 683, position 50
Separator ";" line 683, position 58
Keyword "if" line 684, position 6
Separator "(" line 684, position 9
Identifier "shiftInI" line 684, position 10
Operator ">" line 684, position 19
DecimalInteger "0" line 684, position 21
Operator "&&" line 684, position 23
Identifier "sourceSeg" line 684, position 26
Operator "+" line 684, position 36
DecimalInteger "1" line 684, position 38
Operator "<" line 684, position 40
Identifier "bitArray" line 684, position 42
Separator "." line 684, position 50
Identifier "length" line 684, position 51
Separator ")" line 684, position 57
Separator "{" line 684, position 59
Identifier "bitArray" line 685, position 7
Separator "[" line 685, position 15
Identifier "segment" line 685, position 16
Separator "]" line 685, position 23
Operator "|=" line 685, position 25
Identifier "bitArray" line 685, position 28
Separator "[" line 685, position 36
Identifier "sourceSeg" line 685, position 37
Operator "+" line 685, position 47
DecimalInteger "1" line 685, position 49
Separator "]" line 685, position 50
Operator "<<" line 685, position 52
Separator "(" line 685, position 55
DecimalInteger "64" line 685, position 56
Operator "-" line 685, position 59
Identifier "shiftInI" line 685, position 61
Separator ")" line 685, position 69
Separator ";" line 685, position 70
Separator "}" line 686, position 6
Separator "}" line 687, position 5
Keyword "else" line 687, position 7
Separator "{" line 687, position 12
Identifier "bitArray" line 688, position 6
Separator "[" line 688, position 14
Identifier "segment" line 688, position 15
Separator "]" line 688, position 22
Operator "=" line 688, position 24
DecimalInteger "0L" line 688, position 26
Separator ";" line 688, position 28
Separator "}" line 689, position 5
Separator "}" line 690, position 4
Separator "}" line 691, position 3
Annotation "@" line 693, position 3
Identifier "Override" line 693, position 4
Modifier "public" line 694, position 3
Keyword "void" line 694, position 10
Identifier "shiftLeft" line 694, position 15
Separator "(" line 694, position 24
BasicType "int" line 694, position 25
Identifier "num" line 694, position 29
Separator ")" line 694, position 32
Separator "{" line 694, position 34
BasicType "int" line 695, position 4
Identifier "shiftSeg" line 695, position 8
Operator "=" line 695, position 17
Identifier "num" line 695, position 19
Operator "/" line 695, position 23
DecimalInteger "64" line 695, position 25
Separator ";" line 695, position 27
BasicType "int" line 696, position 4
Identifier "shiftInI" line 696, position 8
Operator "=" line 696, position 17
Identifier "num" line 696, position 19
Operator "%" line 696, position 23
DecimalInteger "64" line 696, position 25
Separator ";" line 696, position 27
Keyword "for" line 697, position 4
Separator "(" line 697, position 8
BasicType "int" line 697, position 9
Identifier "segment" line 697, position 13
Operator "=" line 697, position 21
Identifier "bitArray" line 697, position 23
Separator "." line 697, position 31
Identifier "length" line 697, position 32
Operator "-" line 697, position 39
DecimalInteger "1" line 697, position 41
Separator ";" line 697, position 42
Identifier "segment" line 697, position 44
Operator ">=" line 697, position 52
DecimalInteger "0" line 697, position 55
Separator ";" line 697, position 56
Identifier "segment" line 697, position 58
Operator "--" line 697, position 65
Separator ")" line 697, position 67
Separator "{" line 697, position 69
BasicType "int" line 698, position 5
Identifier "sourceSeg" line 698, position 9
Operator "=" line 698, position 19
Identifier "segment" line 698, position 21
Operator "-" line 698, position 29
Identifier "shiftSeg" line 698, position 31
Separator ";" line 698, position 39
Keyword "if" line 699, position 5
Separator "(" line 699, position 8
Identifier "sourceSeg" line 699, position 9
Operator ">=" line 699, position 19
DecimalInteger "0" line 699, position 22
Separator ")" line 699, position 23
Separator "{" line 699, position 25
Identifier "bitArray" line 700, position 6
Separator "[" line 700, position 14
Identifier "segment" line 700, position 15
Separator "]" line 700, position 22
Operator "=" line 700, position 24
Identifier "bitArray" line 700, position 26
Separator "[" line 700, position 34
Identifier "sourceSeg" line 700, position 35
Separator "]" line 700, position 44
Operator "<<" line 700, position 46
Identifier "shiftInI" line 700, position 49
Separator ";" line 700, position 57
Keyword "if" line 701, position 6
Separator "(" line 701, position 9
Identifier "shiftInI" line 701, position 10
Operator ">" line 701, position 19
DecimalInteger "0" line 701, position 21
Operator "&&" line 701, position 23
Identifier "sourceSeg" line 701, position 26
Operator ">" line 701, position 36
DecimalInteger "0" line 701, position 38
Separator ")" line 701, position 39
Separator "{" line 701, position 41
Identifier "bitArray" line 702, position 7
Separator "[" line 702, position 15
Identifier "segment" line 702, position 16
Separator "]" line 702, position 23
Operator "|=" line 702, position 25
Identifier "bitArray" line 702, position 28
Separator "[" line 702, position 36
Identifier "sourceSeg" line 702, position 37
Operator "-" line 702, position 47
DecimalInteger "1" line 702, position 49
Separator "]" line 702, position 50
Operator ">" line 702, position 52
Operator ">" line 702, position 53
Operator ">" line 702, position 54
Separator "(" line 702, position 56
DecimalInteger "64" line 702, position 57
Operator "-" line 702, position 60
Identifier "shiftInI" line 702, position 62
Separator ")" line 702, position 70
Separator ";" line 702, position 71
Separator "}" line 703, position 6
Separator "}" line 704, position 5
Keyword "else" line 704, position 7
Separator "{" line 704, position 12
Identifier "bitArray" line 705, position 6
Separator "[" line 705, position 14
Identifier "segment" line 705, position 15
Separator "]" line 705, position 22
Operator "=" line 705, position 24
DecimalInteger "0L" line 705, position 26
Separator ";" line 705, position 28
Separator "}" line 706, position 5
Separator "}" line 707, position 4
Separator "}" line 708, position 3
Modifier "public" line 710, position 3
BasicType "long" line 710, position 10
Identifier "getLong" line 710, position 15
Separator "(" line 710, position 22
BasicType "int" line 710, position 23
Identifier "segment" line 710, position 27
Separator ")" line 710, position 34
Separator "{" line 710, position 36
Keyword "return" line 711, position 4
Identifier "bitArray" line 711, position 11
Separator "[" line 711, position 19
Identifier "segment" line 711, position 20
Separator "]" line 711, position 27
Separator ";" line 711, position 28
Separator "}" line 712, position 3
Annotation "@" line 714, position 3
Identifier "Override" line 714, position 4
Modifier "public" line 715, position 3
Keyword "void" line 715, position 10
Identifier "or" line 715, position 15
Separator "(" line 715, position 17
Identifier "BitSet" line 715, position 18
Identifier "bitset" line 715, position 25
Separator ")" line 715, position 31
Separator "{" line 715, position 33
Keyword "if" line 716, position 4
Separator "(" line 716, position 7
Operator "!" line 716, position 8
Separator "(" line 716, position 9
Identifier "bitset" line 716, position 10
Keyword "instanceof" line 716, position 17
Identifier "LongBit" line 716, position 28
Separator ")" line 716, position 35
Separator ")" line 716, position 36
Separator "{" line 716, position 38
Keyword "return" line 717, position 5
Separator ";" line 717, position 11
Separator "}" line 718, position 4
Keyword "for" line 719, position 4
Separator "(" line 719, position 8
BasicType "int" line 719, position 9
Identifier "segment" line 719, position 13
Operator "=" line 719, position 21
DecimalInteger "0" line 719, position 23
Separator ";" line 719, position 24
Identifier "segment" line 719, position 26
Operator "<" line 719, position 34
Identifier "bitArray" line 719, position 36
Separator "." line 719, position 44
Identifier "length" line 719, position 45
Separator ";" line 719, position 51
Identifier "segment" line 719, position 53
Operator "++" line 719, position 60
Separator ")" line 719, position 62
Separator "{" line 719, position 64
Identifier "bitArray" line 720, position 5
Separator "[" line 720, position 13
Identifier "segment" line 720, position 14
Separator "]" line 720, position 21
Operator "|=" line 720, position 23
Separator "(" line 720, position 26
Separator "(" line 720, position 27
Identifier "LongBit" line 720, position 28
Separator ")" line 720, position 35
Identifier "bitset" line 720, position 36
Separator ")" line 720, position 42
Separator "." line 720, position 43
Identifier "getLong" line 720, position 44
Separator "(" line 720, position 51
Identifier "segment" line 720, position 52
Separator ")" line 720, position 59
Separator ";" line 720, position 60
Separator "}" line 721, position 4
Separator "}" line 722, position 3
Annotation "@" line 724, position 3
Identifier "Override" line 724, position 4
Modifier "public" line 725, position 3
Keyword "void" line 725, position 10
Identifier "and" line 725, position 15
Separator "(" line 725, position 18
Identifier "BitSet" line 725, position 19
Identifier "bitset" line 725, position 26
Separator ")" line 725, position 32
Separator "{" line 725, position 34
Keyword "if" line 726, position 4
Separator "(" line 726, position 7
Operator "!" line 726, position 8
Separator "(" line 726, position 9
Identifier "bitset" line 726, position 10
Keyword "instanceof" line 726, position 17
Identifier "LongBit" line 726, position 28
Separator ")" line 726, position 35
Separator ")" line 726, position 36
Separator "{" line 726, position 38
Keyword "return" line 727, position 5
Separator ";" line 727, position 11
Separator "}" line 728, position 4
Keyword "for" line 729, position 4
Separator "(" line 729, position 8
BasicType "int" line 729, position 9
Identifier "segment" line 729, position 13
Operator "=" line 729, position 21
DecimalInteger "0" line 729, position 23
Separator ";" line 729, position 24
Identifier "segment" line 729, position 26
Operator "<" line 729, position 34
Identifier "bitArray" line 729, position 36
Separator "." line 729, position 44
Identifier "length" line 729, position 45
Separator ";" line 729, position 51
Identifier "segment" line 729, position 53
Operator "++" line 729, position 60
Separator ")" line 729, position 62
Separator "{" line 729, position 64
Identifier "bitArray" line 730, position 5
Separator "[" line 730, position 13
Identifier "segment" line 730, position 14
Separator "]" line 730, position 21
Operator "&=" line 730, position 23
Separator "(" line 730, position 26
Separator "(" line 730, position 27
Identifier "LongBit" line 730, position 28
Separator ")" line 730, position 35
Identifier "bitset" line 730, position 36
Separator ")" line 730, position 42
Separator "." line 730, position 43
Identifier "getLong" line 730, position 44
Separator "(" line 730, position 51
Identifier "segment" line 730, position 52
Separator ")" line 730, position 59
Separator ";" line 730, position 60
Separator "}" line 731, position 4
Separator "}" line 732, position 3
Separator "}" line 733, position 2
Separator "}" line 735, position 1
