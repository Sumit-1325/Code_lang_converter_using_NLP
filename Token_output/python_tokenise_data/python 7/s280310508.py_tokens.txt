list (Token.Name.Builtin)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
word (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
list (Token.Name.Builtin)
: (Token.Punctuation)
if (Token.Keyword)
i (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
0 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
word (Token.Name)
+ (Token.Operator)
= (Token.Operator)
i (Token.Name)
elif (Token.Keyword)
i (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
word (Token.Name)
+ (Token.Operator)
= (Token.Operator)
i (Token.Name)
else (Token.Keyword)
: (Token.Punctuation)
if (Token.Keyword)
word (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
pass (Token.Keyword)
else (Token.Keyword)
: (Token.Punctuation)
del (Token.Keyword)
list (Token.Name.Builtin)
[ (Token.Punctuation)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
word (Token.Name)
) (Token.Punctuation)
