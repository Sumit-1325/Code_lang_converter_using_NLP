##### 解けた ##### (Token.Comment.Single)
S (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
A (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
] (Token.Punctuation)
for (Token.Keyword)
s (Token.Name)
in (Token.Operator.Word)
S (Token.Name)
: (Token.Punctuation)
# 入力の文字列1文字ずつ見てゆく (Token.Comment.Single)
if (Token.Keyword)
s (Token.Name)
in (Token.Operator.Word)
[ (Token.Punctuation)
" (Token.Literal.String.Double)
0 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
] (Token.Punctuation)
: (Token.Punctuation)
# もし0か1の場合、それを追加 (Token.Comment.Single)
A (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
elif (Token.Keyword)
s (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
B (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
# もしバックスペースの場合、1文字削除 (Token.Comment.Single)
A (Token.Name)
. (Token.Operator)
pop (Token.Name)
( (Token.Punctuation)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
. (Token.Operator)
join (Token.Name)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
