s (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
t (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
, (Token.Punctuation)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
] (Token.Punctuation)
m (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
0 (Token.Literal.Number.Integer)
, (Token.Punctuation)
len (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
if (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
== (Token.Operator)
" (Token.Literal.String.Double)
B (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
if (Token.Keyword)
m (Token.Name)
> (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
t (Token.Name)
[ (Token.Punctuation)
m (Token.Name)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
= (Token.Operator)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
m (Token.Name)
= (Token.Operator)
m (Token.Name)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
if (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
== (Token.Operator)
" (Token.Literal.String.Double)
0 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
t (Token.Name)
[ (Token.Punctuation)
m (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
" (Token.Literal.String.Double)
0 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
m (Token.Name)
= (Token.Operator)
m (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
if (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
== (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
t (Token.Name)
[ (Token.Punctuation)
m (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
m (Token.Name)
= (Token.Operator)
m (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
p (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
q (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
while (Token.Keyword)
t (Token.Name)
[ (Token.Punctuation)
q (Token.Name)
] (Token.Punctuation)
!= (Token.Operator)
" (Token.Literal.String.Double)
3 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
p (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
t (Token.Name)
[ (Token.Punctuation)
q (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
q (Token.Name)
= (Token.Operator)
q (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
int (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
. (Token.Operator)
join (Token.Name)
( (Token.Punctuation)
p (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
