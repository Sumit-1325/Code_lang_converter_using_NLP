k (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
enter keys= (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
) (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
length (Token.Name)
= (Token.Operator)
len (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
while (Token.Keyword)
length (Token.Name)
< (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
or (Token.Operator.Word)
length (Token.Name)
< (Token.Operator)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
if (Token.Keyword)
k (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
k (Token.Name)
== (Token.Operator)
1 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
k (Token.Name)
== (Token.Operator)
b (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
elif (Token.Keyword)
k (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
elif (Token.Keyword)
k (Token.Name)
== (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
= (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
