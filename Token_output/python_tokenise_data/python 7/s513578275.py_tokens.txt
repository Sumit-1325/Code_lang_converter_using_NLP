a (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
a (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
i (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
0 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
b (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
i (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
b (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
i (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
B (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
if (Token.Keyword)
b (Token.Name)
!= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
: (Token.Punctuation)
b (Token.Name)
. (Token.Operator)
pop (Token.Name)
( (Token.Punctuation)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
for (Token.Keyword)
j (Token.Name)
in (Token.Operator.Word)
b (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
j (Token.Name)
, (Token.Punctuation)
end (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
