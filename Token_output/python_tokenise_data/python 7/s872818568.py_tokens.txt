def (Token.Keyword)
convert (Token.Name.Function)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
# initialization of string to ""  (Token.Comment.Single)
new (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
# traverse in the string   (Token.Comment.Single)
for (Token.Keyword)
x (Token.Name)
in (Token.Operator.Word)
s (Token.Name)
: (Token.Punctuation)
new (Token.Name)
+ (Token.Operator)
= (Token.Operator)
x (Token.Name)
# return string   (Token.Comment.Single)
return (Token.Keyword)
new (Token.Name)
s (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
len (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
if (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
== (Token.Operator)
' (Token.Literal.String.Single)
0 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
a (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Single)
0 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
elif (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
== (Token.Operator)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
a (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
if (Token.Keyword)
len (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
> (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
a (Token.Name)
. (Token.Operator)
pop (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
convert (Token.Name)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
