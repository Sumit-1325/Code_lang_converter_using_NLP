s (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
while (Token.Keyword)
" (Token.Literal.String.Double)
B (Token.Literal.String.Double)
" (Token.Literal.String.Double)
in (Token.Operator.Word)
s (Token.Name)
: (Token.Punctuation)
#Bが存在する間実行 (Token.Comment.Single)
b (Token.Name)
= (Token.Operator)
s (Token.Name)
. (Token.Operator)
index (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Single)
B (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
#最初のBのインデックスを取得 (Token.Comment.Single)
if (Token.Keyword)
b (Token.Name)
!= (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
# Bが先頭でないとき (Token.Comment.Single)
del (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
b (Token.Name)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
b (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
# Bの1個前とBを消す (Token.Comment.Single)
elif (Token.Keyword)
b (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
# Bが先頭の時 (Token.Comment.Single)
del (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
b (Token.Name)
] (Token.Punctuation)
s (Token.Name)
= (Token.Operator)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
. (Token.Operator)
join (Token.Name)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
#この区切り文字でリストを連結 (Token.Comment.Single)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
