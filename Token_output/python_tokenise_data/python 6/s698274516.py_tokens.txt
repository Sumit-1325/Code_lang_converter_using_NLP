n_str (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
res (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
3 (Token.Literal.Number.Integer)
) (Token.Punctuation)
: (Token.Punctuation)
s (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
10 (Token.Literal.Number.Integer)
- (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
n_str (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
* (Token.Operator)
10 (Token.Literal.Number.Integer)
* (Token.Operator)
* (Token.Operator)
i (Token.Name)
res (Token.Name)
= (Token.Operator)
res (Token.Name)
+ (Token.Operator)
s (Token.Name)
print (Token.Name.Builtin)
( (Token.Punctuation)
res (Token.Name)
) (Token.Punctuation)
