import (Token.Keyword.Namespace)
sys (Token.Name.Namespace)
sys (Token.Name)
. (Token.Operator)
setrecursionlimit (Token.Name)
( (Token.Punctuation)
10 (Token.Literal.Number.Integer)
* (Token.Operator)
* (Token.Operator)
9 (Token.Literal.Number.Integer)
) (Token.Punctuation)
INF (Token.Name)
= (Token.Operator)
10 (Token.Literal.Number.Integer)
* (Token.Operator)
* (Token.Operator)
18 (Token.Literal.Number.Integer)
MOD (Token.Name)
= (Token.Operator)
10 (Token.Literal.Number.Integer)
* (Token.Operator)
* (Token.Operator)
9 (Token.Literal.Number.Integer)
+ (Token.Operator)
7 (Token.Literal.Number.Integer)
def (Token.Keyword)
input (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
return (Token.Keyword)
sys (Token.Name)
. (Token.Operator)
stdin (Token.Name)
. (Token.Operator)
readline (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
rstrip (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
def (Token.Keyword)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
N (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
. (Token.Operator)
replace (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
, (Token.Punctuation)
' (Token.Literal.String.Single)
X (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
. (Token.Operator)
replace (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Single)
9 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
, (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
. (Token.Operator)
replace (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Single)
X (Token.Literal.String.Single)
' (Token.Literal.String.Single)
, (Token.Punctuation)
' (Token.Literal.String.Single)
9 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
__name__ (Token.Name.Variable.Magic)
== (Token.Operator)
' (Token.Literal.String.Single)
__main__ (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
main (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
