s (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
while (Token.Keyword)
a (Token.Name)
< (Token.Operator)
3 (Token.Literal.Number.Integer)
: (Token.Punctuation)
if (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
a (Token.Name)
] (Token.Punctuation)
== (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
s (Token.Name)
[ (Token.Punctuation)
a (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
" (Token.Literal.String.Double)
9 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
elif (Token.Keyword)
s (Token.Name)
[ (Token.Punctuation)
a (Token.Name)
] (Token.Punctuation)
== (Token.Operator)
" (Token.Literal.String.Double)
9 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
s (Token.Name)
[ (Token.Punctuation)
a (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
a (Token.Name)
+ (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
