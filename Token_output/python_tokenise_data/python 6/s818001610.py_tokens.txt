n (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
n_100 (Token.Name)
= (Token.Operator)
n (Token.Name)
/ (Token.Operator)
/ (Token.Operator)
100 (Token.Literal.Number.Integer)
n_10 (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
n (Token.Name)
- (Token.Operator)
n_100 (Token.Name)
* (Token.Operator)
100 (Token.Literal.Number.Integer)
) (Token.Punctuation)
/ (Token.Operator)
/ (Token.Operator)
10 (Token.Literal.Number.Integer)
n_1 (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
n (Token.Name)
- (Token.Operator)
n_100 (Token.Name)
* (Token.Operator)
100 (Token.Literal.Number.Integer)
- (Token.Operator)
n_10 (Token.Name)
* (Token.Operator)
10 (Token.Literal.Number.Integer)
) (Token.Punctuation)
if (Token.Keyword)
n_100 (Token.Name)
== (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
ans_100 (Token.Name)
= (Token.Operator)
9 (Token.Literal.Number.Integer)
elif (Token.Keyword)
n_100 (Token.Name)
== (Token.Operator)
9 (Token.Literal.Number.Integer)
: (Token.Punctuation)
ans_100 (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
else (Token.Keyword)
: (Token.Punctuation)
ans_100 (Token.Name)
= (Token.Operator)
n_100 (Token.Name)
if (Token.Keyword)
n_10 (Token.Name)
== (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
ans_10 (Token.Name)
= (Token.Operator)
9 (Token.Literal.Number.Integer)
elif (Token.Keyword)
n_10 (Token.Name)
== (Token.Operator)
9 (Token.Literal.Number.Integer)
: (Token.Punctuation)
ans_10 (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
else (Token.Keyword)
: (Token.Punctuation)
ans_10 (Token.Name)
= (Token.Operator)
n_10 (Token.Name)
if (Token.Keyword)
n_1 (Token.Name)
== (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
ans_1 (Token.Name)
= (Token.Operator)
9 (Token.Literal.Number.Integer)
elif (Token.Keyword)
n_1 (Token.Name)
== (Token.Operator)
9 (Token.Literal.Number.Integer)
: (Token.Punctuation)
ans_1 (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
else (Token.Keyword)
: (Token.Punctuation)
ans_1 (Token.Name)
= (Token.Operator)
n_1 (Token.Name)
ans (Token.Name)
= (Token.Operator)
ans_100 (Token.Name)
* (Token.Operator)
100 (Token.Literal.Number.Integer)
+ (Token.Operator)
ans_10 (Token.Name)
* (Token.Operator)
10 (Token.Literal.Number.Integer)
+ (Token.Operator)
ans_1 (Token.Name)
print (Token.Name.Builtin)
( (Token.Punctuation)
ans (Token.Name)
) (Token.Punctuation)
