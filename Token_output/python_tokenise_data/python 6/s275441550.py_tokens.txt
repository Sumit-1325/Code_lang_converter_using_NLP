inums (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
# [int(i)for i in input().split()] (Token.Comment.Single)
nums (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
inums (Token.Name)
: (Token.Punctuation)
nums (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
o (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
n (Token.Name)
in (Token.Operator.Word)
nums (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
n (Token.Name)
== (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
o (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String.Double)
9 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
elif (Token.Keyword)
n (Token.Name)
== (Token.Operator)
9 (Token.Literal.Number.Integer)
: (Token.Punctuation)
o (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
o (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
. (Token.Operator)
join (Token.Name)
( (Token.Punctuation)
o (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
