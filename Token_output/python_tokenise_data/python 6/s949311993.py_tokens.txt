n (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
v (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
#vin=[int(i) for i in v] (Token.Comment.Single)
nlis (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
nint (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
part_num (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
( (Token.Punctuation)
nint (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
) (Token.Punctuation)
ev_num (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
part_num (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
ev (Token.Name)
= (Token.Operator)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
i (Token.Name)
ev_num (Token.Name)
. (Token.Operator)
extend (Token.Name)
( (Token.Punctuation)
v (Token.Name)
[ (Token.Punctuation)
ev (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
count_ev (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
part_num (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
count (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
count_ev (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
ev_num (Token.Name)
. (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
ev_num (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
ans_ev (Token.Name)
= (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
count_ev (Token.Name)
) (Token.Punctuation)
od_num (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
part_num (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
od (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
od_num (Token.Name)
. (Token.Operator)
extend (Token.Name)
( (Token.Punctuation)
v (Token.Name)
[ (Token.Punctuation)
od (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
count_od (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
part_num (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
count (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
count_od (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
od_num (Token.Name)
. (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
od_num (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
ans_od (Token.Name)
= (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
count_od (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
v (Token.Name)
. (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
v (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
== (Token.Operator)
len (Token.Name.Builtin)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
ans (Token.Name)
= (Token.Operator)
part_num (Token.Name)
else (Token.Keyword)
: (Token.Punctuation)
ans (Token.Name)
= (Token.Operator)
ans_ev (Token.Name)
+ (Token.Operator)
ans_od (Token.Name)
print (Token.Name.Builtin)
( (Token.Punctuation)
ans (Token.Name)
) (Token.Punctuation)
