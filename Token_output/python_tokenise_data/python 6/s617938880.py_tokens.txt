N (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
ans (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
for (Token.Keyword)
n (Token.Name)
in (Token.Operator.Word)
N (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
( (Token.Punctuation)
n (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
9 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
: (Token.Punctuation)
ans (Token.Name)
+ (Token.Operator)
= (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
elif (Token.Keyword)
( (Token.Punctuation)
n (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
1 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
: (Token.Punctuation)
ans (Token.Name)
+ (Token.Operator)
= (Token.Operator)
" (Token.Literal.String.Double)
9 (Token.Literal.String.Double)
" (Token.Literal.String.Double)
else (Token.Keyword)
: (Token.Punctuation)
ans (Token.Name)
+ (Token.Operator)
= (Token.Operator)
n (Token.Name)
print (Token.Name.Builtin)
( (Token.Punctuation)
ans (Token.Name)
) (Token.Punctuation)
