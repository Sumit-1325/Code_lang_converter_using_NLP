import (Token.Keyword.Namespace)
sys (Token.Name.Namespace)
def (Token.Keyword)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
s (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
translate (Token.Name)
( (Token.Punctuation)
str (Token.Name.Builtin)
. (Token.Operator)
maketrans (Token.Name)
( (Token.Punctuation)
{ (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
' (Token.Literal.String.Single)
9 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
, (Token.Punctuation)
' (Token.Literal.String.Single)
9 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
} (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
) (Token.Punctuation)
main (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
