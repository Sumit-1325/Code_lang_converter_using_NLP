if (Token.Keyword)
__name__ (Token.Name.Variable.Magic)
== (Token.Operator)
' (Token.Literal.String.Single)
__main__ (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
nums (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
line (Token.Name)
in (Token.Operator.Word)
sys (Token.Name)
. (Token.Operator)
stdin (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
line (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
\n (Token.Literal.String.Escape)
" (Token.Literal.String.Double)
: (Token.Punctuation)
break (Token.Keyword)
else (Token.Keyword)
: (Token.Punctuation)
nums (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
[ (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
item (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
item (Token.Name)
in (Token.Operator.Word)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
] (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
n (Token.Name)
in (Token.Operator.Word)
nums (Token.Name)
: (Token.Punctuation)
sum (Token.Name.Builtin)
= (Token.Operator)
n (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
+ (Token.Operator)
n (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
len (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
sum (Token.Name.Builtin)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
