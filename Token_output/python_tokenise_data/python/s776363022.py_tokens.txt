def (Token.Keyword)
plus_and_check (Token.Name.Function)
( (Token.Punctuation)
list (Token.Name.Builtin)
) (Token.Punctuation)
: (Token.Punctuation)
sum_up (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
len (Token.Name.Builtin)
( (Token.Punctuation)
list (Token.Name.Builtin)
) (Token.Punctuation)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
: (Token.Punctuation)
sum_up (Token.Name)
+ (Token.Operator)
= (Token.Operator)
list (Token.Name.Builtin)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
i (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
while (Token.Keyword)
i (Token.Name)
< (Token.Operator)
8 (Token.Literal.Number.Integer)
: (Token.Punctuation)
number_1 (Token.Name)
= (Token.Operator)
10 (Token.Literal.Number.Integer)
* (Token.Operator)
i (Token.Name)
number_2 (Token.Name)
= (Token.Operator)
10 (Token.Literal.Number.Integer)
* (Token.Operator)
( (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
if (Token.Keyword)
number_2 (Token.Name)
> (Token.Operator)
sum_up (Token.Name)
and (Token.Operator.Word)
number_1 (Token.Name)
< (Token.Operator)
sum_up (Token.Name)
: (Token.Punctuation)
return (Token.Keyword)
i (Token.Name)
else (Token.Keyword)
: (Token.Punctuation)
continue (Token.Keyword)
i (Token.Name)
= (Token.Operator)
i (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
l (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
" (Token.Literal.String.Double)
%d (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
% (Token.Operator)
plus_and_check (Token.Name)
( (Token.Punctuation)
l (Token.Name)
) (Token.Punctuation)
