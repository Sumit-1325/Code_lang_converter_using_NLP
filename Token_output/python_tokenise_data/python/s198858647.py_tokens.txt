import (Token.Keyword.Namespace)
math (Token.Name.Namespace)
nums (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
math (Token.Name)
. (Token.Operator)
ceil (Token.Name)
( (Token.Punctuation)
math (Token.Name)
. (Token.Operator)
log10 (Token.Name)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
nums (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
* (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
nums (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
