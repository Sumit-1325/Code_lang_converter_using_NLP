import (Token.Keyword.Namespace)
sys (Token.Name.Namespace)
, (Token.Operator)
math (Token.Name.Namespace)
inputs (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
n (Token.Name)
in (Token.Operator.Word)
sys (Token.Name)
. (Token.Operator)
stdin (Token.Name)
: (Token.Punctuation)
inputs (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
list (Token.Name.Builtin)
( (Token.Punctuation)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
n (Token.Name)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
n (Token.Name)
in (Token.Operator.Word)
inputs (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
math (Token.Name)
. (Token.Operator)
floor (Token.Name)
( (Token.Punctuation)
math (Token.Name)
. (Token.Operator)
log10 (Token.Name)
( (Token.Punctuation)
n (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
* (Token.Operator)
n (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
