import (Token.Keyword.Namespace)
sys (Token.Name.Namespace)
l (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
line (Token.Name)
in (Token.Operator.Word)
sys (Token.Name)
. (Token.Operator)
stdin (Token.Name)
: (Token.Punctuation)
l (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
line (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
len (Token.Name.Builtin)
( (Token.Punctuation)
l (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
numl (Token.Name)
= (Token.Operator)
l (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
numl (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
numl (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
sum (Token.Name.Builtin)
= (Token.Operator)
a (Token.Name)
+ (Token.Operator)
b (Token.Name)
digitstr (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
{0} (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
sum (Token.Name.Builtin)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
len (Token.Name.Builtin)
( (Token.Punctuation)
digitstr (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
