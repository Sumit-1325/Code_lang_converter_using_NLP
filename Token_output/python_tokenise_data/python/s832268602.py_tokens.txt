# -*- coding:utf-8 -*- (Token.Comment.Single)
def (Token.Keyword)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
while (Token.Keyword)
True (Token.Keyword.Constant)
: (Token.Punctuation)
try (Token.Keyword)
: (Token.Punctuation)
IN (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
IN (Token.Name)
== (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
raise (Token.Keyword)
EOFError (Token.Name.Exception)
else (Token.Keyword)
: (Token.Punctuation)
val (Token.Name)
= (Token.Operator)
IN (Token.Name)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
val (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
+ (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
val (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
i (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
flag (Token.Name)
= (Token.Operator)
True (Token.Keyword.Constant)
while (Token.Keyword)
flag (Token.Name)
: (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
a (Token.Name)
/ (Token.Operator)
10 (Token.Literal.Number.Integer)
if (Token.Keyword)
a (Token.Name)
< (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
flag (Token.Name)
= (Token.Operator)
False (Token.Keyword.Constant)
else (Token.Keyword)
: (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
except (Token.Keyword)
EOFError (Token.Name.Exception)
: (Token.Punctuation)
break (Token.Keyword)
if (Token.Keyword)
__name__ (Token.Name.Variable.Magic)
== (Token.Operator)
' (Token.Literal.String.Single)
__main__ (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
main (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
