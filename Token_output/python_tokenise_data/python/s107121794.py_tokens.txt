import (Token.Keyword.Namespace)
math (Token.Name.Namespace)
while (Token.Keyword)
True (Token.Keyword.Constant)
: (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
int (Token.Name.Builtin)
( (Token.Punctuation)
math (Token.Name)
. (Token.Operator)
log10 (Token.Name)
( (Token.Punctuation)
a (Token.Name)
+ (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
