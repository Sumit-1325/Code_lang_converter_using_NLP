# coding: utf-8 (Token.Comment.Single)
remaining_questions (Token.Name)
= (Token.Operator)
True (Token.Keyword.Constant)
while (Token.Keyword)
remaining_questions (Token.Name)
: (Token.Punctuation)
try (Token.Keyword)
: (Token.Punctuation)
value_a (Token.Name)
, (Token.Punctuation)
value_b (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
len (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
value_a (Token.Name)
+ (Token.Operator)
value_b (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
except (Token.Keyword)
: (Token.Punctuation)
remaining_questions (Token.Name)
= (Token.Operator)
False (Token.Keyword.Constant)
