def (Token.Keyword)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
def (Token.Keyword)
inputs (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
li (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
string (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
count (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
while (Token.Keyword)
count (Token.Name)
< (Token.Operator)
201 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
string (Token.Name)
!= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
li (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
string (Token.Name)
) (Token.Punctuation)
string (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
count (Token.Name)
+ (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
return (Token.Keyword)
li (Token.Name)
li (Token.Name)
= (Token.Operator)
inputs (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
x (Token.Name)
in (Token.Operator.Word)
li (Token.Name)
: (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
x (Token.Name)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
+ (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
return (Token.Keyword)
None (Token.Keyword.Constant)
if (Token.Keyword)
__name__ (Token.Name.Variable.Magic)
== (Token.Operator)
' (Token.Literal.String.Single)
__main__ (Token.Literal.String.Single)
' (Token.Literal.String.Single)
: (Token.Punctuation)
main (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
