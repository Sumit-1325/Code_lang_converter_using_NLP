X (Token.Name)
, (Token.Punctuation)
Y (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
x (Token.Name)
= (Token.Operator)
max (Token.Name.Builtin)
( (Token.Punctuation)
X (Token.Name)
, (Token.Punctuation)
Y (Token.Name)
) (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
X (Token.Name)
, (Token.Punctuation)
Y (Token.Name)
) (Token.Punctuation)
#計算量問題あり (Token.Comment.Single)
'''
for i in range(y):
    if(x%(y-i)==0)and(y%(y-i)==0):
        print(y-i)
        exit()
''' (Token.Literal.String.Doc)
while (Token.Keyword)
x (Token.Name)
!= (Token.Operator)
y (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
x (Token.Name)
> (Token.Operator)
y (Token.Name)
: (Token.Punctuation)
x (Token.Name)
- (Token.Operator)
= (Token.Operator)
y (Token.Name)
else (Token.Keyword)
: (Token.Punctuation)
y (Token.Name)
- (Token.Operator)
= (Token.Operator)
x (Token.Name)
print (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
