def (Token.Keyword)
gcd (Token.Name.Function)
( (Token.Punctuation)
aa (Token.Name)
, (Token.Punctuation)
bb (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
while (Token.Keyword)
bb (Token.Name)
!= (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
r (Token.Name)
= (Token.Operator)
bb (Token.Name)
bb (Token.Name)
= (Token.Operator)
aa (Token.Name)
% (Token.Operator)
bb (Token.Name)
aa (Token.Name)
= (Token.Operator)
r (Token.Name)
return (Token.Keyword)
aa (Token.Name)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
strip (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
#print a,b (Token.Comment.Single)
print (Token.Name.Builtin)
gcd (Token.Name)
( (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
) (Token.Punctuation)
