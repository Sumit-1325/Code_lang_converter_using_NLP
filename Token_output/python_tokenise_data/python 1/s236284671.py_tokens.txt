a (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
] (Token.Punctuation)
a (Token.Name)
. (Token.Operator)
sort (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
while (Token.Keyword)
True (Token.Keyword.Constant)
: (Token.Punctuation)
if (Token.Keyword)
a (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
% (Token.Operator)
a (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
break (Token.Keyword)
else (Token.Keyword)
: (Token.Punctuation)
a (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
= (Token.Operator)
a (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
% (Token.Operator)
a (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
a (Token.Name)
. (Token.Operator)
sort (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
