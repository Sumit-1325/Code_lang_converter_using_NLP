dbg (Token.Name)
= (Token.Operator)
False (Token.Keyword.Constant)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
a (Token.Name)
> (Token.Operator)
b (Token.Name)
: (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
else (Token.Keyword)
: (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
b (Token.Name)
, (Token.Punctuation)
a (Token.Name)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
1 (Token.Literal.Number.Integer)
, (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
( (Token.Punctuation)
y (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
: (Token.Punctuation)
if (Token.Keyword)
y (Token.Name)
% (Token.Operator)
i (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
gcd_tmp (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
/ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
dbg (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
gcd_tmp (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
x (Token.Name)
% (Token.Operator)
gcd_tmp (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
gcd_tmp (Token.Name)
) (Token.Punctuation)
exit (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
