# ２つの整数 x と y について、x ÷ d と y ÷ d の余りがともに 0 となる d のうち最大のものを、x と y の最大公約数（Greatest Common Divisor）と言います。 (Token.Comment.Single)
# 例えば、35 と14 の最大公約数 gcd (35, 14) は 7 となります。これは、35 の約数{1, 5, 7, 35}、14 の約数 {1, 2, 7, 14} の公約数 {1, 7} の最大値となります。 (Token.Comment.Single)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
] (Token.Punctuation)
# 147 % 105 = 42 (Token.Comment.Single)
# 105 % 42 = 21 (Token.Comment.Single)
# 42 % 21 = 2 (Token.Comment.Single)
mod (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
while (Token.Keyword)
True (Token.Keyword.Constant)
: (Token.Punctuation)
mod (Token.Name)
= (Token.Operator)
max (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
% (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
x (Token.Name)
= (Token.Operator)
y (Token.Name)
y (Token.Name)
= (Token.Operator)
mod (Token.Name)
if (Token.Keyword)
mod (Token.Name)
< (Token.Operator)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
break (Token.Keyword)
print (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
