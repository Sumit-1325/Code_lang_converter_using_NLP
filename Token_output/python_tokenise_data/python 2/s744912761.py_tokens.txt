r (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
r (Token.Name)
> (Token.Operator)
0 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
r (Token.Name)
< (Token.Operator)
10000 (Token.Literal.Number.Integer)
: (Token.Punctuation)
circle_length (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
r (Token.Name)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
* (Token.Operator)
3.14 (Token.Literal.Number.Float)
circle_area (Token.Name)
= (Token.Operator)
r (Token.Name)
* (Token.Operator)
r (Token.Name)
* (Token.Operator)
3.14 (Token.Literal.Number.Float)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
{0:f} (Token.Literal.String.Interpol)
{1:f} (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
circle_area (Token.Name)
, (Token.Punctuation)
circle_length (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
pass (Token.Keyword)
