import (Token.Keyword.Namespace)
math (Token.Name.Namespace)
r (Token.Name)
= (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
f (Token.Literal.String.Affix)
' (Token.Literal.String.Single)
{ (Token.Literal.String.Interpol)
( (Token.Punctuation)
r (Token.Name)
* (Token.Operator)
r (Token.Name)
* (Token.Operator)
math (Token.Name)
. (Token.Operator)
pi (Token.Name)
) (Token.Punctuation)
: (Token.Literal.String.Interpol)
.10f (Token.Literal.String.Single)
} (Token.Literal.String.Interpol)
' (Token.Literal.String.Single)
, (Token.Punctuation)
end (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
f (Token.Literal.String.Affix)
' (Token.Literal.String.Single)
{ (Token.Literal.String.Interpol)
( (Token.Punctuation)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
r (Token.Name)
* (Token.Operator)
math (Token.Name)
. (Token.Operator)
pi (Token.Name)
) (Token.Punctuation)
: (Token.Literal.String.Interpol)
.10f (Token.Literal.String.Single)
} (Token.Literal.String.Interpol)
' (Token.Literal.String.Single)
) (Token.Punctuation)
