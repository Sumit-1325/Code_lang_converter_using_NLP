N (Token.Name)
= (Token.Operator)
n (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
while (Token.Keyword)
0 (Token.Literal.Number.Integer)
< (Token.Operator)
N (Token.Name)
: (Token.Punctuation)
m (Token.Name)
= (Token.Operator)
n (Token.Name)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
k (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
while (Token.Keyword)
0 (Token.Literal.Number.Integer)
< (Token.Operator)
m (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
a (Token.Name)
[ (Token.Punctuation)
k (Token.Name)
] (Token.Punctuation)
< (Token.Operator)
= (Token.Operator)
a (Token.Name)
[ (Token.Punctuation)
m (Token.Name)
] (Token.Punctuation)
: (Token.Punctuation)
k (Token.Name)
= (Token.Operator)
m (Token.Name)
m (Token.Name)
- (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
a (Token.Name)
[ (Token.Punctuation)
k (Token.Name)
] (Token.Punctuation)
, (Token.Punctuation)
a (Token.Name)
[ (Token.Punctuation)
k (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
N (Token.Name)
- (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
