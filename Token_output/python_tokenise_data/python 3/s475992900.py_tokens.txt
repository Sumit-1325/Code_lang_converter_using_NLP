i (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
j (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
numlist (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
while (Token.Keyword)
i (Token.Name)
< (Token.Operator)
j (Token.Name)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
numlist (Token.Name)
[ (Token.Punctuation)
j (Token.Name)
- (Token.Operator)
i (Token.Name)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
, (Token.Punctuation)
end (Token.Name)
= (Token.Operator)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
, (Token.Punctuation)
end (Token.Name)
= (Token.Operator)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
( (Token.Punctuation)
numlist (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
