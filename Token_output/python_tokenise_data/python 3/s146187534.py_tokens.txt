n (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
l (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
out (Token.Name)
= (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
reversed (Token.Name.Builtin)
( (Token.Punctuation)
l (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
out (Token.Name)
+ (Token.Operator)
= (Token.Operator)
i (Token.Name)
+ (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
print (Token.Name.Builtin)
( (Token.Punctuation)
out (Token.Name)
. (Token.Operator)
strip (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
