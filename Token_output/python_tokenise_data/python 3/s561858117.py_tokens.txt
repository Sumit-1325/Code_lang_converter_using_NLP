#coding: UTF-8 (Token.Comment.Single)
i (Token.Name)
= (Token.Operator)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
l (Token.Name)
= (Token.Operator)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
#l = [1, 2, 65, 3, 5,8] (Token.Comment.Single)
l (Token.Name)
. (Token.Operator)
reverse (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
l_int (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
l (Token.Name)
) (Token.Punctuation)
print (Token.Name.Builtin)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
. (Token.Operator)
join (Token.Name)
( (Token.Punctuation)
l (Token.Name)
) (Token.Punctuation)
#a = [1,2,3,4,5] (Token.Comment.Single)
#a_str = map(str,a) (Token.Comment.Single)
#print ",".join(a_str) (Token.Comment.Single)
