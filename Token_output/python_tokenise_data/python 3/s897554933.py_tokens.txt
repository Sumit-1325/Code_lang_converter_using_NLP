n (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
c (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
i (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
while (Token.Keyword)
i (Token.Name)
< (Token.Operator)
n (Token.Name)
: (Token.Punctuation)
b (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
answer (Token.Name)
= (Token.Operator)
str (Token.Name.Builtin)
( (Token.Punctuation)
b (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
m (Token.Name)
= (Token.Operator)
2 (Token.Literal.Number.Integer)
while (Token.Keyword)
m (Token.Name)
< (Token.Operator)
i (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
answer (Token.Name)
= (Token.Operator)
answer (Token.Name)
+ (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
+ (Token.Operator)
str (Token.Name.Builtin)
( (Token.Punctuation)
b (Token.Name)
[ (Token.Punctuation)
m (Token.Name)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
m (Token.Name)
= (Token.Operator)
m (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
( (Token.Punctuation)
answer (Token.Name)
) (Token.Punctuation)
