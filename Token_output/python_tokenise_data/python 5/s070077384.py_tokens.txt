W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
#print(W,H,x,y) (Token.Comment.Single)
#横にラインを引く (Token.Comment.Single)
if (Token.Keyword)
x (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
or (Token.Operator.Word)
x (Token.Name)
== (Token.Operator)
W (Token.Name)
: (Token.Punctuation)
tatemax (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
yokomax (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
if (Token.Keyword)
y (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
or (Token.Operator.Word)
y (Token.Name)
== (Token.Operator)
H (Token.Name)
: (Token.Punctuation)
tatemax (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
yokomax (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
if (Token.Keyword)
x (Token.Name)
!= (Token.Operator)
0 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
x (Token.Name)
!= (Token.Operator)
W (Token.Name)
and (Token.Operator.Word)
y (Token.Name)
!= (Token.Operator)
0 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
y (Token.Name)
!= (Token.Operator)
H (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
float (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
> (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
H (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
: (Token.Punctuation)
yokomax (Token.Name)
= (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
W (Token.Name)
) (Token.Punctuation)
* (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
( (Token.Punctuation)
H (Token.Name)
- (Token.Operator)
y (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
elif (Token.Keyword)
float (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
< (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
H (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
: (Token.Punctuation)
yokomax (Token.Name)
= (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
W (Token.Name)
) (Token.Punctuation)
* (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
elif (Token.Keyword)
float (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
== (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
H (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
: (Token.Punctuation)
yokomax (Token.Name)
= (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
W (Token.Name)
) (Token.Punctuation)
* (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
float (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
> (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
W (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
: (Token.Punctuation)
tatemax (Token.Name)
= (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
H (Token.Name)
) (Token.Punctuation)
* (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
( (Token.Punctuation)
W (Token.Name)
- (Token.Operator)
x (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
elif (Token.Keyword)
float (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
< (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
W (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
: (Token.Punctuation)
tatemax (Token.Name)
= (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
H (Token.Name)
) (Token.Punctuation)
* (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
elif (Token.Keyword)
float (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
== (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
W (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
: (Token.Punctuation)
tatemax (Token.Name)
= (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
H (Token.Name)
) (Token.Punctuation)
* (Token.Operator)
float (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
yokomax (Token.Name)
== (Token.Operator)
tatemax (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
' (Token.Literal.String.Single)
{:.12e} (Token.Literal.String.Interpol)
' (Token.Literal.String.Single)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
max (Token.Name.Builtin)
( (Token.Punctuation)
yokomax (Token.Name)
, (Token.Punctuation)
tatemax (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
' (Token.Literal.String.Single)
{:.12e} (Token.Literal.String.Interpol)
' (Token.Literal.String.Single)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
max (Token.Name.Builtin)
( (Token.Punctuation)
yokomax (Token.Name)
, (Token.Punctuation)
tatemax (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
' (Token.Literal.String.Single)
0 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
