w (Token.Name)
, (Token.Punctuation)
h (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
sq (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
nearX (Token.Name)
= (Token.Operator)
x (Token.Name)
- (Token.Operator)
( (Token.Punctuation)
w (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
nearY (Token.Name)
= (Token.Operator)
y (Token.Name)
- (Token.Operator)
( (Token.Punctuation)
h (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
flag (Token.Name)
= (Token.Operator)
False (Token.Keyword.Constant)
if (Token.Keyword)
( (Token.Punctuation)
x (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
y (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
or (Token.Operator.Word)
( (Token.Punctuation)
x (Token.Name)
== (Token.Operator)
w (Token.Name)
and (Token.Operator.Word)
y (Token.Name)
== (Token.Operator)
h (Token.Name)
) (Token.Punctuation)
or (Token.Operator.Word)
( (Token.Punctuation)
x (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
and (Token.Operator.Word)
y (Token.Name)
== (Token.Operator)
h (Token.Name)
) (Token.Punctuation)
or (Token.Operator.Word)
( (Token.Punctuation)
x (Token.Name)
== (Token.Operator)
w (Token.Name)
and (Token.Operator.Word)
y (Token.Name)
== (Token.Operator)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
: (Token.Punctuation)
flag (Token.Name)
= (Token.Operator)
True (Token.Keyword.Constant)
if (Token.Keyword)
flag (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
' (Token.Literal.String.Single)
0 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
+ (Token.Operator)
' (Token.Literal.String.Single)
 1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
# print('a') (Token.Comment.Single)
elif (Token.Keyword)
nearY (Token.Name)
< (Token.Operator)
nearX (Token.Name)
: (Token.Punctuation)
sq (Token.Name)
= (Token.Operator)
w (Token.Name)
* (Token.Operator)
( (Token.Punctuation)
h (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
sq (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
+ (Token.Operator)
' (Token.Literal.String.Single)
0 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
elif (Token.Keyword)
nearX (Token.Name)
< (Token.Operator)
nearY (Token.Name)
: (Token.Punctuation)
sq (Token.Name)
= (Token.Operator)
h (Token.Name)
* (Token.Operator)
( (Token.Punctuation)
w (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
sq (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
+ (Token.Operator)
' (Token.Literal.String.Single)
0 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
sq (Token.Name)
= (Token.Operator)
h (Token.Name)
* (Token.Operator)
( (Token.Punctuation)
w (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
sq (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
' (Token.Literal.String.Single)
' (Token.Literal.String.Single)
+ (Token.Operator)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
