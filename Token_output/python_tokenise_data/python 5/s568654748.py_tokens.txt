W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
raw_input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
int (Token.Name.Builtin)
mul (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
if (Token.Keyword)
x (Token.Name)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
W (Token.Name)
and (Token.Operator.Word)
y (Token.Name)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
H (Token.Name)
: (Token.Punctuation)
mul (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
A (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
print (Token.Name.Builtin)
' (Token.Literal.String.Single)
%f (Token.Literal.String.Interpol)
%d (Token.Literal.String.Interpol)
' (Token.Literal.String.Single)
% (Token.Operator)
( (Token.Punctuation)
A (Token.Name)
, (Token.Punctuation)
mul (Token.Name)
) (Token.Punctuation)
