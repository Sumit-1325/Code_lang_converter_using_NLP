from (Token.Keyword.Namespace)
sys (Token.Name.Namespace)
import (Token.Keyword.Namespace)
stdin (Token.Name)
W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
_ (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
_ (Token.Name)
in (Token.Operator.Word)
stdin (Token.Name)
. (Token.Operator)
readline (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
rstrip (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
] (Token.Punctuation)
ans1 (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
ans2 (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
( (Token.Punctuation)
x (Token.Name)
+ (Token.Operator)
x (Token.Name)
== (Token.Operator)
W (Token.Name)
) (Token.Punctuation)
and (Token.Operator.Word)
( (Token.Punctuation)
y (Token.Name)
+ (Token.Operator)
y (Token.Name)
== (Token.Operator)
H (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
ans1 (Token.Name)
, (Token.Punctuation)
ans2 (Token.Name)
) (Token.Punctuation)
