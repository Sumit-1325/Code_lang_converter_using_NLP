import (Token.Keyword.Namespace)
sys (Token.Name.Namespace)
from (Token.Keyword.Namespace)
math (Token.Name.Namespace)
import (Token.Keyword.Namespace)
* (Token.Operator)
stdin (Token.Name)
= (Token.Operator)
sys (Token.Name)
. (Token.Operator)
stdin (Token.Name)
ni (Token.Name)
= (Token.Operator)
lambda (Token.Keyword)
: (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
ns (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
na (Token.Name)
= (Token.Operator)
lambda (Token.Keyword)
: (Token.Punctuation)
list (Token.Name.Builtin)
( (Token.Punctuation)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
stdin (Token.Name)
. (Token.Operator)
readline (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
ns (Token.Name)
= (Token.Operator)
lambda (Token.Keyword)
: (Token.Punctuation)
stdin (Token.Name)
. (Token.Operator)
readline (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
rstrip (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
# ignore trailing spaces (Token.Comment.Single)
w (Token.Name)
, (Token.Punctuation)
h (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
na (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
s (Token.Name)
= (Token.Operator)
h (Token.Name)
* (Token.Operator)
w (Token.Name)
if (Token.Keyword)
w (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
x (Token.Name)
and (Token.Operator.Word)
h (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
y (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
, (Token.Punctuation)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
s (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
, (Token.Punctuation)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
