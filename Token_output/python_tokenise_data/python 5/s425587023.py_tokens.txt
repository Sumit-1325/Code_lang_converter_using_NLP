W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
] (Token.Punctuation)
if (Token.Keyword)
x (Token.Name)
in (Token.Operator.Word)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
, (Token.Punctuation)
W (Token.Name)
] (Token.Punctuation)
or (Token.Operator.Word)
y (Token.Name)
in (Token.Operator.Word)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
, (Token.Punctuation)
H (Token.Name)
] (Token.Punctuation)
: (Token.Punctuation)
ans (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
{:.11f} (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
ans (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
quit (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
W (Token.Name)
> (Token.Operator)
H (Token.Name)
: (Token.Punctuation)
W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
H (Token.Name)
, (Token.Punctuation)
W (Token.Name)
, (Token.Punctuation)
y (Token.Name)
, (Token.Punctuation)
x (Token.Name)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
W (Token.Name)
- (Token.Operator)
x (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
min (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
, (Token.Punctuation)
H (Token.Name)
- (Token.Operator)
y (Token.Name)
) (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
x (Token.Name)
* (Token.Operator)
H (Token.Name)
, (Token.Punctuation)
y (Token.Name)
* (Token.Operator)
W (Token.Name)
ans (Token.Name)
= (Token.Operator)
max (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
{:.11f} (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
ans (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
== (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
