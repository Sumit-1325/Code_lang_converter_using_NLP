W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
W (Token.Name)
* (Token.Operator)
y (Token.Name)
> (Token.Operator)
- (Token.Operator)
H (Token.Name)
* (Token.Operator)
x (Token.Name)
+ (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
: (Token.Punctuation)
x (Token.Name)
* (Token.Operator)
= (Token.Operator)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
y (Token.Name)
* (Token.Operator)
= (Token.Operator)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
def (Token.Keyword)
is_center (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
return (Token.Keyword)
x (Token.Name)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
W (Token.Name)
and (Token.Operator.Word)
y (Token.Name)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
H (Token.Name)
def (Token.Keyword)
is_on_axis (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
return (Token.Keyword)
not (Token.Operator.Word)
is_center (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
and (Token.Operator.Word)
any (Token.Name.Builtin)
( (Token.Punctuation)
[ (Token.Punctuation)
x (Token.Name)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
W (Token.Name)
, (Token.Punctuation)
y (Token.Name)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
H (Token.Name)
, (Token.Punctuation)
W (Token.Name)
* (Token.Operator)
y (Token.Name)
== (Token.Operator)
- (Token.Operator)
H (Token.Name)
* (Token.Operator)
x (Token.Name)
+ (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
, (Token.Punctuation)
W (Token.Name)
* (Token.Operator)
y (Token.Name)
== (Token.Operator)
H (Token.Name)
* (Token.Operator)
x (Token.Name)
, (Token.Punctuation)
] (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
is_center (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
S (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
T (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
elif (Token.Keyword)
is_on_axis (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
S (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
T (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
else (Token.Keyword)
: (Token.Punctuation)
S (Token.Name)
= (Token.Operator)
max (Token.Name.Builtin)
( (Token.Punctuation)
[ (Token.Punctuation)
x (Token.Name)
* (Token.Operator)
( (Token.Punctuation)
H (Token.Name)
* (Token.Operator)
* (Token.Operator)
2 (Token.Literal.Number.Integer)
) (Token.Punctuation)
/ (Token.Operator)
( (Token.Punctuation)
H (Token.Name)
- (Token.Operator)
y (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
, (Token.Punctuation)
W (Token.Name)
* (Token.Operator)
( (Token.Punctuation)
x (Token.Name)
* (Token.Operator)
y (Token.Name)
/ (Token.Operator)
( (Token.Punctuation)
W (Token.Name)
- (Token.Operator)
x (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
y (Token.Name)
) (Token.Punctuation)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
, (Token.Punctuation)
] (Token.Punctuation)
) (Token.Punctuation)
T (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
S (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
+ (Token.Operator)
str (Token.Name.Builtin)
( (Token.Punctuation)
T (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
