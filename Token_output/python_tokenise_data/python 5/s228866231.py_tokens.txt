w (Token.Name)
, (Token.Punctuation)
h (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
( (Token.Punctuation)
w (Token.Name)
== (Token.Operator)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
x (Token.Name)
) (Token.Punctuation)
and (Token.Operator.Word)
( (Token.Punctuation)
h (Token.Name)
== (Token.Operator)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
y (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
0.5 (Token.Literal.Number.Float)
* (Token.Operator)
w (Token.Name)
* (Token.Operator)
h (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
+ (Token.Operator)
str (Token.Name.Builtin)
( (Token.Punctuation)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
str (Token.Name.Builtin)
( (Token.Punctuation)
0.5 (Token.Literal.Number.Float)
* (Token.Operator)
w (Token.Name)
* (Token.Operator)
h (Token.Name)
) (Token.Punctuation)
+ (Token.Operator)
" (Token.Literal.String.Double)
" (Token.Literal.String.Double)
+ (Token.Operator)
str (Token.Name.Builtin)
( (Token.Punctuation)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
) (Token.Punctuation)
