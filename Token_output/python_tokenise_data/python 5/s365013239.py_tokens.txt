W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
S (Token.Name)
= (Token.Operator)
W (Token.Name)
* (Token.Operator)
H (Token.Name)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
#長方形内であれば、中心からの対象点を選ぶ事により、2分割できる (Token.Comment.Single)
flg (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
W (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
x (Token.Name)
and (Token.Operator.Word)
H (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
== (Token.Operator)
y (Token.Name)
) (Token.Punctuation)
#長方形の中心を通れば、2分割できる。そうじゃないとだめ (Token.Comment.Single)
print (Token.Name.Builtin)
( (Token.Punctuation)
S (Token.Name)
, (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
flg (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
