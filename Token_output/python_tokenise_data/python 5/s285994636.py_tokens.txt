W (Token.Name)
, (Token.Punctuation)
H (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
float (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
width (Token.Name)
= (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
W (Token.Name)
- (Token.Operator)
x (Token.Name)
) (Token.Punctuation)
height (Token.Name)
= (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
y (Token.Name)
, (Token.Punctuation)
H (Token.Name)
- (Token.Operator)
y (Token.Name)
) (Token.Punctuation)
menseki_1 (Token.Name)
= (Token.Operator)
width (Token.Name)
* (Token.Operator)
H (Token.Name)
menseki_2 (Token.Name)
= (Token.Operator)
height (Token.Name)
* (Token.Operator)
W (Token.Name)
menseki (Token.Name)
= (Token.Operator)
max (Token.Name.Builtin)
( (Token.Punctuation)
menseki_2 (Token.Name)
, (Token.Punctuation)
menseki_1 (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
menseki_1 (Token.Name)
== (Token.Operator)
menseki_2 (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
{:.9f} (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
menseki (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
elif (Token.Keyword)
menseki (Token.Name)
== (Token.Operator)
( (Token.Punctuation)
( (Token.Punctuation)
H (Token.Name)
* (Token.Operator)
W (Token.Name)
) (Token.Punctuation)
- (Token.Operator)
min (Token.Name.Builtin)
( (Token.Punctuation)
menseki_2 (Token.Name)
, (Token.Punctuation)
menseki_1 (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
{:.9f} (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
menseki (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
' (Token.Literal.String.Single)
1 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
# elif menseki_2>menseki_1 and width==W/2: (Token.Comment.Single)
#     print("{:.9f}".format(menseki), '1') (Token.Comment.Single)
else (Token.Keyword)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
" (Token.Literal.String.Double)
{:.9f} (Token.Literal.String.Interpol)
" (Token.Literal.String.Double)
. (Token.Operator)
format (Token.Name)
( (Token.Punctuation)
menseki (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
' (Token.Literal.String.Single)
0 (Token.Literal.String.Single)
' (Token.Literal.String.Single)
) (Token.Punctuation)
