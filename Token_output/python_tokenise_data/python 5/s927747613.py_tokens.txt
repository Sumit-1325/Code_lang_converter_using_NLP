#!/usr/bin/env python3 (Token.Comment.Hashbang)
# -*- coding: utf-8 -*- (Token.Comment.Single)
# 問題：https://atcoder.jp/contests/abc126/tasks/abc130_c (Token.Comment.Single)
def (Token.Keyword)
gcd (Token.Name.Function)
( (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
if (Token.Keyword)
a (Token.Name)
< (Token.Operator)
b (Token.Name)
: (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
b (Token.Name)
, (Token.Punctuation)
a (Token.Name)
while (Token.Keyword)
b (Token.Name)
> (Token.Operator)
0 (Token.Literal.Number.Integer)
: (Token.Punctuation)
tmp (Token.Name)
= (Token.Operator)
a (Token.Name)
a (Token.Name)
= (Token.Operator)
b (Token.Name)
b (Token.Name)
= (Token.Operator)
tmp (Token.Name)
% (Token.Operator)
b (Token.Name)
return (Token.Keyword)
a (Token.Name)
w (Token.Name)
, (Token.Punctuation)
h (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
= (Token.Operator)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
strip (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
area (Token.Name)
= (Token.Operator)
w (Token.Name)
* (Token.Operator)
h (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
has_points (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
if (Token.Keyword)
gcd (Token.Name)
( (Token.Punctuation)
abs (Token.Name.Builtin)
( (Token.Punctuation)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
x (Token.Name)
- (Token.Operator)
w (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
abs (Token.Name.Builtin)
( (Token.Punctuation)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
y (Token.Name)
- (Token.Operator)
h (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
> (Token.Operator)
1 (Token.Literal.Number.Integer)
or (Token.Operator.Word)
( (Token.Punctuation)
w (Token.Name)
> (Token.Operator)
3 (Token.Literal.Number.Integer)
* (Token.Operator)
abs (Token.Name.Builtin)
( (Token.Punctuation)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
x (Token.Name)
- (Token.Operator)
w (Token.Name)
) (Token.Punctuation)
and (Token.Operator.Word)
h (Token.Name)
> (Token.Operator)
3 (Token.Literal.Number.Integer)
* (Token.Operator)
abs (Token.Name.Builtin)
( (Token.Punctuation)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
y (Token.Name)
- (Token.Operator)
h (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
has_points (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
print (Token.Name.Builtin)
( (Token.Punctuation)
area (Token.Name)
, (Token.Punctuation)
has_points (Token.Name)
) (Token.Punctuation)
