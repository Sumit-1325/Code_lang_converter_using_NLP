N (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
indexed_A (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
sorted (Token.Name.Builtin)
( (Token.Punctuation)
[ (Token.Punctuation)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
] (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
indexed_A (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
reversed (Token.Name.Builtin)
( (Token.Punctuation)
indexed_A (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
for (Token.Keyword)
a (Token.Name)
, (Token.Punctuation)
j (Token.Name)
in (Token.Operator.Word)
indexed_A (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
i (Token.Name)
!= (Token.Operator)
j (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
break (Token.Keyword)
