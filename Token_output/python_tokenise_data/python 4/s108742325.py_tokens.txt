N (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
A (Token.Name)
= (Token.Operator)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
] (Token.Punctuation)
sorted_A (Token.Name)
= (Token.Operator)
sorted (Token.Name.Builtin)
( (Token.Punctuation)
list (Token.Name.Builtin)
( (Token.Punctuation)
set (Token.Name.Builtin)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
reverse (Token.Name)
= (Token.Operator)
True (Token.Keyword.Constant)
) (Token.Punctuation)
max_idx (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
x (Token.Name)
== (Token.Operator)
sorted_A (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
for (Token.Keyword)
x (Token.Name)
in (Token.Operator.Word)
A (Token.Name)
] (Token.Punctuation)
ans (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
sorted_A (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
] (Token.Punctuation)
* (Token.Operator)
N (Token.Name)
if (Token.Keyword)
max_idx (Token.Name)
. (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
True (Token.Keyword.Constant)
) (Token.Punctuation)
== (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
ans (Token.Name)
[ (Token.Punctuation)
A (Token.Name)
. (Token.Operator)
index (Token.Name)
( (Token.Punctuation)
sorted_A (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
] (Token.Punctuation)
= (Token.Operator)
sorted_A (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
