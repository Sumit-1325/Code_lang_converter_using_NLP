N (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
max1 (Token.Name)
, (Token.Punctuation)
max2 (Token.Name)
= (Token.Operator)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
, (Token.Punctuation)
- (Token.Operator)
1 (Token.Literal.Number.Integer)
alist (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
alist (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
max1 (Token.Name)
< (Token.Operator)
= (Token.Operator)
a (Token.Name)
: (Token.Punctuation)
max2 (Token.Name)
= (Token.Operator)
max1 (Token.Name)
max1 (Token.Name)
= (Token.Operator)
a (Token.Name)
elif (Token.Keyword)
max2 (Token.Name)
< (Token.Operator)
a (Token.Name)
: (Token.Punctuation)
max2 (Token.Name)
= (Token.Operator)
a (Token.Name)
for (Token.Keyword)
a (Token.Name)
in (Token.Operator.Word)
alist (Token.Name)
: (Token.Punctuation)
if (Token.Keyword)
a (Token.Name)
== (Token.Operator)
max1 (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
max2 (Token.Name)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
max1 (Token.Name)
) (Token.Punctuation)
