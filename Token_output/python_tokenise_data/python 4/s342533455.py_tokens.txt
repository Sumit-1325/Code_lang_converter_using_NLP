from (Token.Keyword.Namespace)
sys (Token.Name.Namespace)
import (Token.Keyword.Namespace)
stdin (Token.Name)
readline (Token.Name)
= (Token.Operator)
stdin (Token.Name)
. (Token.Operator)
readline (Token.Name)
def (Token.Keyword)
nf (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
"""
    入力全て(EOFまで)を`int iter`に変換
    """ (Token.Literal.String.Doc)
return (Token.Keyword)
map (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
, (Token.Punctuation)
open (Token.Name.Builtin)
( (Token.Punctuation)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
. (Token.Operator)
read (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
. (Token.Operator)
split (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
def (Token.Keyword)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Punctuation)
n (Token.Name)
, (Token.Punctuation)
* (Token.Operator)
l (Token.Name)
= (Token.Operator)
nf (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
al (Token.Name)
= (Token.Operator)
list (Token.Name.Builtin)
( (Token.Punctuation)
l (Token.Name)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
ma (Token.Name)
= (Token.Operator)
max (Token.Name.Builtin)
( (Token.Punctuation)
[ (Token.Punctuation)
* (Token.Operator)
al (Token.Name)
[ (Token.Punctuation)
: (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
, (Token.Punctuation)
* (Token.Operator)
al (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
: (Token.Punctuation)
] (Token.Punctuation)
] (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
ma (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
__name__ (Token.Name.Variable.Magic)
== (Token.Operator)
" (Token.Literal.String.Double)
__main__ (Token.Literal.String.Double)
" (Token.Literal.String.Double)
: (Token.Punctuation)
main (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
