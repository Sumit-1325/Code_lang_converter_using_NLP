N (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
A (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
_ (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
A (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
A (Token.Name)
. (Token.Operator)
pop (Token.Name)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
max (Token.Name.Builtin)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
A (Token.Name)
. (Token.Operator)
insert (Token.Name)
( (Token.Punctuation)
i (Token.Name)
, (Token.Punctuation)
b (Token.Name)
) (Token.Punctuation)
