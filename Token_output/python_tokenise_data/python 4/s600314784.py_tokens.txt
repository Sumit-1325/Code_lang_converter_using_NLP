N (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
I (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
] (Token.Punctuation)
r (Token.Name)
= (Token.Operator)
max (Token.Name.Builtin)
( (Token.Punctuation)
I (Token.Name)
) (Token.Punctuation)
if (Token.Keyword)
I (Token.Name)
. (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
r (Token.Name)
) (Token.Punctuation)
> (Token.Operator)
= (Token.Operator)
2 (Token.Literal.Number.Integer)
: (Token.Punctuation)
for (Token.Keyword)
j (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
r (Token.Name)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
for (Token.Keyword)
k (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
X (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
I (Token.Name)
[ (Token.Punctuation)
k (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
if (Token.Keyword)
X (Token.Name)
!= (Token.Operator)
r (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
r (Token.Name)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
I (Token.Name)
. (Token.Operator)
remove (Token.Name)
( (Token.Punctuation)
I (Token.Name)
[ (Token.Punctuation)
k (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
max (Token.Name.Builtin)
( (Token.Punctuation)
I (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
I (Token.Name)
. (Token.Operator)
insert (Token.Name)
( (Token.Punctuation)
k (Token.Name)
, (Token.Punctuation)
X (Token.Name)
) (Token.Punctuation)
