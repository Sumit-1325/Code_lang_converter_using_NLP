import (Token.Keyword.Namespace)
numpy (Token.Name.Namespace)
as (Token.Keyword)
np (Token.Name.Namespace)
N (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
A (Token.Name)
= (Token.Operator)
[ (Token.Punctuation)
] (Token.Punctuation)
for (Token.Keyword)
n (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
A (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
A (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
array (Token.Name)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
all_max (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
max (Token.Name)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
max_ind (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
argmax (Token.Name)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
max_remove (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
ones (Token.Name)
( (Token.Punctuation)
N (Token.Name)
, (Token.Punctuation)
dtype (Token.Name)
= (Token.Operator)
bool (Token.Name.Builtin)
) (Token.Punctuation)
max_remove (Token.Name)
[ (Token.Punctuation)
max_ind (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
False (Token.Keyword.Constant)
second_max (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
max (Token.Name)
( (Token.Punctuation)
A (Token.Name)
[ (Token.Punctuation)
max_remove (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
# print(all_max) (Token.Comment.Single)
# print(second_max) (Token.Comment.Single)
for (Token.Keyword)
n (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
if (Token.Keyword)
n (Token.Name)
== (Token.Operator)
max_ind (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
second_max (Token.Name)
) (Token.Punctuation)
else (Token.Keyword)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
all_max (Token.Name)
) (Token.Punctuation)
