import (Token.Keyword.Namespace)
numpy (Token.Name.Namespace)
as (Token.Keyword)
np (Token.Name.Namespace)
N (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
A (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
array (Token.Name)
( (Token.Punctuation)
[ (Token.Punctuation)
] (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
a (Token.Name)
= (Token.Operator)
int (Token.Name.Builtin)
( (Token.Punctuation)
input (Token.Name.Builtin)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
np (Token.Name)
. (Token.Operator)
append (Token.Name)
( (Token.Punctuation)
A (Token.Name)
, (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
ans (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
max (Token.Name)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
j (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
argmax (Token.Name)
( (Token.Punctuation)
A (Token.Name)
) (Token.Punctuation)
ans2 (Token.Name)
= (Token.Operator)
np (Token.Name)
. (Token.Operator)
max (Token.Name)
( (Token.Punctuation)
np (Token.Name)
. (Token.Operator)
delete (Token.Name)
( (Token.Punctuation)
A (Token.Name)
, (Token.Punctuation)
j (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
for (Token.Keyword)
i (Token.Name)
in (Token.Operator.Word)
range (Token.Name.Builtin)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
: (Token.Punctuation)
if (Token.Keyword)
i (Token.Name)
== (Token.Operator)
j (Token.Name)
: (Token.Punctuation)
print (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
ans2 (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
continue (Token.Keyword)
print (Token.Name.Builtin)
( (Token.Punctuation)
int (Token.Name.Builtin)
( (Token.Punctuation)
ans (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
