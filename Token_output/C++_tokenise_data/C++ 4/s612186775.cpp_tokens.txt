// This is free and unencumbered software released into the public domain.
 (Token.Comment.Single)

 (Token.Text.Whitespace)
// Anyone is free to copy, modify, publish, use, compile, sell, or
 (Token.Comment.Single)
// distribute this software, either in source code form or as a compiled
 (Token.Comment.Single)
// binary, for any purpose, commercial or non-commercial, and by any
 (Token.Comment.Single)
// means.
 (Token.Comment.Single)

 (Token.Text.Whitespace)
// In jurisdictions that recognize copyright laws, the author or authors
 (Token.Comment.Single)
// of this software dedicate any and all copyright interest in the
 (Token.Comment.Single)
// software to the public domain. We make this dedication for the benefit
 (Token.Comment.Single)
// of the public at large and to the detriment of our heirs and
 (Token.Comment.Single)
// successors. We intend this dedication to be an overt act of
 (Token.Comment.Single)
// relinquishment in perpetuity of all present and future rights to this
 (Token.Comment.Single)
// software under copyright law.
 (Token.Comment.Single)

 (Token.Text.Whitespace)
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 (Token.Comment.Single)
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 (Token.Comment.Single)
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 (Token.Comment.Single)
// IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 (Token.Comment.Single)
// OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 (Token.Comment.Single)
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 (Token.Comment.Single)
// OTHER DEALINGS IN THE SOFTWARE.
 (Token.Comment.Single)

 (Token.Text.Whitespace)
// For more information, please refer to <http://unlicense.org>
 (Token.Comment.Single)

 (Token.Text.Whitespace)
/****************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/* template.hpp */ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/****************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<algorithm> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<cassert> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<functional> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<iomanip> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<iostream> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<limits> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
cerr (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
cout (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
endl (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
max (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
min (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
swap (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
struct (Token.Keyword)
  (Token.Text.Whitespace)
BoolName (Token.Name.Class)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
numpunct (Token.Name)
< (Token.Operator)
char (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
f (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
BoolName (Token.Name)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
f (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
t (Token.Name)
( (Token.Punctuation)
t (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
f (Token.Name)
( (Token.Punctuation)
f (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
do_truename (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
t (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
do_falsename (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
f (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
void (Token.Keyword.Type)
  (Token.Text.Whitespace)
setBoolName (Token.Name.Function)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
f (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
cout (Token.Name)
. (Token.Punctuation)
imbue (Token.Name)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
locale (Token.Name)
( (Token.Punctuation)
cout (Token.Name)
. (Token.Punctuation)
getloc (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
new (Token.Keyword)
  (Token.Text.Whitespace)
BoolName (Token.Name)
( (Token.Punctuation)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
f (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
struct (Token.Keyword)
  (Token.Text.Whitespace)
Initializer (Token.Name.Class)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Initializer (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
fixed (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
setprecision (Token.Name)
( (Token.Punctuation)
15 (Token.Literal.Number.Integer)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
boolalpha (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
setBoolName (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
Yes (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
" (Token.Literal.String)
No (Token.Literal.String)
" (Token.Literal.String)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
  (Token.Text.Whitespace)
initializer (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
struct (Token.Keyword)
  (Token.Text.Whitespace)
Input (Token.Name.Class)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
eof (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Input (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
eof (Token.Name)
( (Token.Punctuation)
false (Token.Name.Builtin)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%d (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
char (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
char (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
while (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
! (Token.Operator)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%c (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
& (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
isspace (Token.Name)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%d (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%ld (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%lld (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
unsigned (Token.Keyword.Type)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
unsigned (Token.Keyword.Type)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%u (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
unsigned (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
unsigned (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%lu (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
unsigned (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
unsigned (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%llu (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%lf (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
operator (Token.Keyword)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
eof (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
scanf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%Lf (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
void (Token.Keyword.Type)
  (Token.Text.Whitespace)
ignore (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
getchar (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
  (Token.Text.Whitespace)
in (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
abs (Token.Name)
( (Token.Punctuation)
T (Token.Name)
  (Token.Text.Whitespace)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
  (Token.Text.Whitespace)
? (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
- (Token.Operator)
a (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
chmin (Token.Name)
( (Token.Punctuation)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
  (Token.Text.Whitespace)
? (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
true (Token.Name.Builtin)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
false (Token.Name.Builtin)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
chmax (Token.Name)
( (Token.Punctuation)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
  (Token.Text.Whitespace)
? (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
true (Token.Name.Builtin)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
false (Token.Name.Builtin)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
function (Token.Name)
< (Token.Operator)
S (Token.Name)
( (Token.Punctuation)
T (Token.Name)
) (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
cast (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
[ (Token.Punctuation)
] (Token.Punctuation)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
S (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
t (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
copy (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
ZeroPadding (Token.Name.Class)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
ZeroPadding (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
n (Token.Name)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
ostream (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
< (Token.Operator)
< (Token.Operator)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
ostream (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
os (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
ZeroPadding (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
z (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
os (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
setw (Token.Name)
( (Token.Punctuation)
z (Token.Name)
. (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
setfill (Token.Name)
( (Token.Punctuation)
' (Token.Literal.String.Char)
0 (Token.Literal.String.Char)
' (Token.Literal.String.Char)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
os (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
constexpr (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
inf (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
numeric_limits (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
: (Token.Operator)
: (Token.Operator)
max (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
/ (Token.Operator)
  (Token.Text.Whitespace)
2 (Token.Literal.Number.Integer)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
/*************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/* tuple.hpp */ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/*************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<tuple> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
Tuple (Token.Name.Class)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
public (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Tuple (Token.Name)
( (Token.Punctuation)
Input (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
in (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
( (Token.Punctuation)
void (Token.Keyword.Type)
) (Token.Punctuation)
in (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)

 (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
Tuple (Token.Name.Class)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
public (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Tuple (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Tuple (Token.Name)
( (Token.Punctuation)
T (Token.Name)
  (Token.Text.Whitespace)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
s (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
( (Token.Punctuation)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
s (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Tuple (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
( (Token.Punctuation)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Tuple (Token.Name)
( (Token.Punctuation)
Input (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
in (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
Tuple (Token.Name)
< (Token.Operator)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
c (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple_cat (Token.Name)
( (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
b (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
c (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
get (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
get (Token.Name)
< (Token.Operator)
n (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
get (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
get (Token.Name)
< (Token.Operator)
n (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
Tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
makeTuple (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
args (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
( (Token.Punctuation)
args (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
namespace (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name.Namespace)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
> (Token.Operator)

 (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
tuple_size (Token.Name.Class)
< (Token.Operator)
Tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
> (Token.Operator)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
public (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
integral_constant (Token.Name)
< (Token.Operator)
size_t (Token.Keyword.Type)
, (Token.Punctuation)
  (Token.Text.Whitespace)
sizeof (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
( (Token.Punctuation)
T (Token.Name)
) (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
size_t (Token.Keyword.Type)
  (Token.Text.Whitespace)
I (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
tuple_element (Token.Name.Class)
< (Token.Operator)
I (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
type (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
tuple_element_t (Token.Name)
< (Token.Operator)
I (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
> (Token.Operator)
> (Token.Operator)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
  (Token.Text.Whitespace)
// namespace std
 (Token.Comment.Single)

 (Token.Text.Whitespace)
/*****************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/* container.hpp */ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/*****************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<vector> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
Container (Token.Name.Class)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
public (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
private (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
: (Token.Operator)
: (Token.Operator)
value_type (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
Itr (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
: (Token.Operator)
: (Token.Operator)
iterator (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Container (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Container (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Container (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
s (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
s (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Itr (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
( (Token.Punctuation)
Itr (Token.Name)
  (Token.Text.Whitespace)
first (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Itr (Token.Name)
  (Token.Text.Whitespace)
last (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
first (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
last (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Container (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
initializer_list (Token.Name)
< (Token.Operator)
S (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Container (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Input (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
in (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
S (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
in (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
. (Token.Punctuation)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
max (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
max_element (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
max (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
pair (Token.Name)
< (Token.Operator)
decltype (Token.Keyword)
( (Token.Punctuation)
func (Token.Name)
( (Token.Punctuation)
S (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
res (Token.Name)
. (Token.Punctuation)
emplace_back (Token.Name)
( (Token.Punctuation)
func (Token.Name)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
max_element (Token.Name)
( (Token.Punctuation)
res (Token.Name)
. (Token.Punctuation)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
res (Token.Name)
. (Token.Punctuation)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
- (Token.Operator)
> (Token.Operator)
second (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
min (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
min_element (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Tuple (Token.Name)
< (Token.Operator)
S (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
minmax (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
itrs (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
minmax_element (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Tuple (Token.Name)
< (Token.Operator)
S (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
itrs (Token.Name)
. (Token.Punctuation)
first (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
itrs (Token.Name)
. (Token.Punctuation)
second (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
min (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
pair (Token.Name)
< (Token.Operator)
decltype (Token.Keyword)
( (Token.Punctuation)
func (Token.Name)
( (Token.Punctuation)
S (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
res (Token.Name)
. (Token.Punctuation)
emplace_back (Token.Name)
( (Token.Punctuation)
func (Token.Name)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
min_element (Token.Name)
( (Token.Punctuation)
res (Token.Name)
. (Token.Punctuation)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
res (Token.Name)
. (Token.Punctuation)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
- (Token.Operator)
> (Token.Operator)
second (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
argmax (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
distance (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)

 (Token.Text.Whitespace)
                          (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
max_element (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
argmin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
distance (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)

 (Token.Text.Whitespace)
                          (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
min_element (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
find (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
distance (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)

 (Token.Text.Whitespace)
                          (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
find (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
a (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
contains (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
find (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
: (Token.Operator)
: (Token.Operator)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
pair (Token.Name)
< (Token.Operator)
Itr (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Itr (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
equal_range (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
equal_range (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
a (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
all_of (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
all_of (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
any_of (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
any_of (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
none_of (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
none_of (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
count (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
s (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
s (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
is_sorted (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
is_sorted (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
void (Token.Keyword.Type)
  (Token.Text.Whitespace)
output (Token.Name)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
sep (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
" (Token.Literal.String)
\n (Token.Literal.String.Escape)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
string (Token.Name)
  (Token.Text.Whitespace)
end (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
" (Token.Literal.String)
\n (Token.Literal.String.Escape)
" (Token.Literal.String)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
first (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
true (Token.Name.Builtin)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
! (Token.Operator)
first (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
         (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
sep (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
first (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
false (Token.Name.Builtin)
; (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
i (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
end (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
/***********/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/* map.hpp */ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/***********/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<map> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
Map (Token.Name.Class)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
public (Token.Keyword)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
map (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Map (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
map (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
contains (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
! (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
count (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
map (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
S (Token.Name)
> (Token.Operator)
: (Token.Operator)
: (Token.Operator)
count (Token.Name)
( (Token.Punctuation)
t (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
/***************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/* ordered.hpp */ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/***************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
Ordered (Token.Name.Class)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
operator (Token.Keyword)
= (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
! (Token.Operator)
( (Token.Punctuation)
static_cast (Token.Keyword)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
| (Token.Operator)
| (Token.Operator)

 (Token.Text.Whitespace)
              (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
operator (Token.Keyword)
! (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
| (Token.Operator)
| (Token.Operator)

 (Token.Text.Whitespace)
            (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
operator (Token.Keyword)
> (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
operator (Token.Keyword)
< (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
! (Token.Operator)
( (Token.Punctuation)
static_cast (Token.Keyword)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
operator (Token.Keyword)
> (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
V (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
! (Token.Operator)
( (Token.Punctuation)
static_cast (Token.Keyword)
< (Token.Operator)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
static_cast (Token.Keyword)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
/**************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/* vector.hpp */ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/**************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<numeric> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name.Class)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
public (Token.Keyword)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
default (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
default (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Itr (Token.Name.Class)
> (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
Itr (Token.Name)
  (Token.Text.Whitespace)
first (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Itr (Token.Name)
  (Token.Text.Whitespace)
last (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
first (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
last (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
initializer_list (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Input (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
in (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
Container (Token.Name)
< (Token.Operator)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
> (Token.Operator)
( (Token.Punctuation)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
in (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
+ (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
resize (Token.Name)
( (Token.Punctuation)
v (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
+ (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
+ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
- (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
resize (Token.Name)
( (Token.Punctuation)
v (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
- (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
- (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
- (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
* (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
* (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
* (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
/ (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
/ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
/ (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
/ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
% (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
% (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
operator (Token.Keyword)
% (Token.Operator)
= (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
% (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
+ (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
+ (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
- (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
- (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
- (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
- (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
* (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
* (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
/ (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
/ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
/ (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
/ (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
% (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
% (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
% (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
% (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
operator (Token.Keyword)
- (Token.Operator)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
  (Token.Text.Whitespace)
-1 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
inner_product (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
v (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
inner_product (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
partial_sort (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
k (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
reverse (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
false (Token.Name.Builtin)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
! (Token.Operator)
reverse (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
partial_sort (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
k (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)
  (Token.Text.Whitespace)
else (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
partial_sort (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
k (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)

 (Token.Text.Whitespace)
                         (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
greater (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
sort (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
sort (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
sort (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
sort (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
rsort (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
sort (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
rbegin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
rend (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
int (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
argsort (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
Tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
emplace_back (Token.Name)
( (Token.Punctuation)
( (Token.Punctuation)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
sort (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
f (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
[ (Token.Punctuation)
] (Token.Punctuation)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
Tuple (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
t (Token.Name)
. (Token.Punctuation)
template (Token.Keyword)
  (Token.Text.Whitespace)
get (Token.Name)
< (Token.Operator)
1 (Token.Literal.Number.Integer)
> (Token.Operator)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
transform (Token.Name)
( (Token.Punctuation)
f (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
nth_element (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
reverse (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
false (Token.Name.Builtin)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
! (Token.Operator)
reverse (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
nth_element (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)
  (Token.Text.Whitespace)
else (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
nth_element (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)

 (Token.Text.Whitespace)
                        (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
greater (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
subvector (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
b (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
-1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
b (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
-1 (Token.Literal.Number.Integer)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
transform (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
decltype (Token.Keyword)
( (Token.Punctuation)
func (Token.Name)
( (Token.Punctuation)
T (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
transform (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
back_inserter (Token.Name)
( (Token.Punctuation)
res (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
partial_sum (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
partial_sum (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
back_inserter (Token.Name)
( (Token.Punctuation)
res (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
partial_sum (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
partial_sum (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
back_inserter (Token.Name)
( (Token.Punctuation)
res (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
reverse (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
reverse (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
count_if (Token.Name)
( (Token.Punctuation)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
count_if (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
adjacent_difference (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
adjacent_difference (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)

 (Token.Text.Whitespace)
                              (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
back_inserter (Token.Name)
( (Token.Punctuation)
res (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
lower_bound (Token.Name)
( (Token.Punctuation)
T (Token.Name)
  (Token.Text.Whitespace)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
lower_bound (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
upper_bound (Token.Name)
( (Token.Punctuation)
T (Token.Name)
  (Token.Text.Whitespace)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
upper_bound (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
t (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
accumulate (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
accumulate (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Function (Token.Name.Class)
> (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
S (Token.Name)
  (Token.Text.Whitespace)
accumulate (Token.Name)
( (Token.Punctuation)
S (Token.Name)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Function (Token.Name)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
accumulate (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
func (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Int (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
static (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
makeVector (Token.Name)
( (Token.Punctuation)
Int (Token.Name)
  (Token.Text.Whitespace)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Int (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
static (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
makeVector (Token.Name)
( (Token.Punctuation)
Input (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
in (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Int (Token.Name)
  (Token.Text.Whitespace)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
( (Token.Punctuation)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Int (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
Ints (Token.Name)
> (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
static (Token.Keyword)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
makeVector (Token.Name)
( (Token.Punctuation)
Input (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
in (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Int (Token.Name)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Ints (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
ints (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
decltype (Token.Keyword)
( (Token.Punctuation)
makeVector (Token.Name)
( (Token.Punctuation)
in (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
ints (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
n (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
res (Token.Name)
. (Token.Punctuation)
emplace_back (Token.Name)
( (Token.Punctuation)
makeVector (Token.Name)
( (Token.Punctuation)
in (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
ints (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
Int (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
Ints (Token.Name)
> (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
static (Token.Keyword)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
makeVector (Token.Name)
( (Token.Punctuation)
Int (Token.Name)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Ints (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
  (Token.Text.Whitespace)
ints (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
decltype (Token.Keyword)
( (Token.Punctuation)
makeVector (Token.Name)
( (Token.Punctuation)
ints (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
n (Token.Name)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
res (Token.Name)
. (Token.Punctuation)
emplace_back (Token.Name)
( (Token.Punctuation)
makeVector (Token.Name)
( (Token.Punctuation)
ints (Token.Name)
. (Token.Punctuation)
. (Token.Punctuation)
. (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
unique (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
erase (Token.Name)
( (Token.Punctuation)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
unique (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
bool (Token.Keyword.Type)
  (Token.Text.Whitespace)
next_permutation (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
next_permutation (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
rotate (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
rotate (Token.Name)
( (Token.Punctuation)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Map (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
countAll (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
Map (Token.Name)
< (Token.Operator)
T (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
int (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
* (Token.Operator)
this (Token.Keyword)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
res (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
res (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
matmul (Token.Name)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
transform (Token.Name)
( (Token.Punctuation)
[ (Token.Punctuation)
& (Token.Operator)
] (Token.Punctuation)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)
  (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
i (Token.Name)
. (Token.Punctuation)
inner_product (Token.Name)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
} (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
iota (Token.Name)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
m (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
( (Token.Punctuation)
n (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
iota (Token.Name)
( (Token.Punctuation)
v (Token.Name)
. (Token.Punctuation)
begin (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
v (Token.Name)
. (Token.Punctuation)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
m (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
void (Token.Keyword.Type)
  (Token.Text.Whitespace)
read (Token.Name)
( (Token.Punctuation)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
S (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
s (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
t (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
t (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
S (Token.Name)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
S (Token.Name.Class)
, (Token.Punctuation)
  (Token.Text.Whitespace)
typename (Token.Keyword)
  (Token.Text.Whitespace)
U (Token.Name.Class)
> (Token.Operator)

 (Token.Text.Whitespace)
void (Token.Keyword.Type)
  (Token.Text.Whitespace)
read (Token.Name)
( (Token.Punctuation)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
t (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
S (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
s (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
U (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
u (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
t (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
+ (Token.Operator)
+ (Token.Operator)
i (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
t (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
T (Token.Name)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
S (Token.Name)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
u (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
U (Token.Name)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
operator (Token.Keyword)
+ (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
b (Token.Name)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
operator (Token.Keyword)
- (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
- (Token.Operator)
b (Token.Name)
  (Token.Text.Whitespace)
+ (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
template (Token.Keyword)
  (Token.Text.Whitespace)
< (Token.Operator)
typename (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name.Class)
> (Token.Operator)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
operator (Token.Keyword)
* (Token.Operator)
( (Token.Punctuation)
const (Token.Keyword)
  (Token.Text.Whitespace)
T (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
a (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
T (Token.Name)
> (Token.Operator)
  (Token.Text.Whitespace)
& (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
b (Token.Name)
  (Token.Text.Whitespace)
* (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
/************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/* main.cpp */ (Token.Comment.Multiline)

 (Token.Text.Whitespace)
/************/ (Token.Comment.Multiline)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name.Function)
( (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
< (Token.Operator)
int (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
( (Token.Punctuation)
n (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
auto (Token.Keyword)
  (Token.Text.Whitespace)
b (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
b (Token.Name)
. (Token.Punctuation)
nth_element (Token.Name)
( (Token.Punctuation)
1 (Token.Literal.Number.Integer)
, (Token.Punctuation)
  (Token.Text.Whitespace)
true (Token.Name.Builtin)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
for (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
b (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
  (Token.Text.Whitespace)
= (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
? (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
[ (Token.Punctuation)
1 (Token.Literal.Number.Integer)
] (Token.Punctuation)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
[ (Token.Punctuation)
0 (Token.Literal.Number.Integer)
] (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
endl (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
