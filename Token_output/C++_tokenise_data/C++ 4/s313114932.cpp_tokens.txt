# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<bits/stdc++.h> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
define rep(i,n) for (int i = 0;i < (n);++i) (Token.Comment.Preproc)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
define all(x) (x).begin(),(x).end() (Token.Comment.Preproc)

 (Token.Comment.Preproc)
using (Token.Keyword)
  (Token.Text.Whitespace)
namespace (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name.Namespace)
; (Token.Punctuation)

 (Token.Text.Whitespace)
typedef (Token.Keyword)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
ll (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
N (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
cin (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
N (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
vector (Token.Name)
< (Token.Operator)
int (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
A (Token.Name)
( (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
rep (Token.Name)
( (Token.Punctuation)
i (Token.Name)
, (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
cin (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
A (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
A_max (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
rep (Token.Name)
( (Token.Punctuation)
i (Token.Name)
, (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
A_max (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
max (Token.Name)
( (Token.Punctuation)
A_max (Token.Name)
, (Token.Punctuation)
A (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
A2 (Token.Name)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
rep (Token.Name)
( (Token.Punctuation)
i (Token.Name)
, (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
if (Token.Keyword)
( (Token.Punctuation)
A (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
= (Token.Operator)
A_max (Token.Name)
) (Token.Punctuation)
continue (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
A2 (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
max (Token.Name)
( (Token.Punctuation)
A2 (Token.Name)
, (Token.Punctuation)
A (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
rep (Token.Name)
( (Token.Punctuation)
i (Token.Name)
, (Token.Punctuation)
N (Token.Name)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
if (Token.Keyword)
( (Token.Punctuation)
A (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
= (Token.Operator)
A_max (Token.Name)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
           (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
A2 (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
endl (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
           (Token.Text.Whitespace)
continue (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
A_max (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
endl (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
     (Token.Text.Whitespace)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
