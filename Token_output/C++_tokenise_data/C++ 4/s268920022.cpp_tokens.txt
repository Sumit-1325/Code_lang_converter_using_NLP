# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
<bits/stdc++.h> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
using (Token.Keyword)
  (Token.Text.Whitespace)
namespace (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name.Namespace)
; (Token.Punctuation)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)

 (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
n (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
cin (Token.Name)
> (Token.Operator)
> (Token.Operator)
n (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
map (Token.Name)
< (Token.Operator)
int (Token.Keyword.Type)
, (Token.Punctuation)
int (Token.Keyword.Type)
> (Token.Operator)
  (Token.Text.Whitespace)
v (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
a (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
for (Token.Keyword)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
i (Token.Name)
< (Token.Operator)
n (Token.Name)
; (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
+ (Token.Operator)
) (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
{ (Token.Punctuation)
cin (Token.Name)
> (Token.Operator)
> (Token.Operator)
a (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
    (Token.Text.Whitespace)
v (Token.Name)
[ (Token.Punctuation)
a (Token.Name)
] (Token.Punctuation)
= (Token.Operator)
i (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
map (Token.Name)
< (Token.Operator)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
, (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
> (Token.Operator)
: (Token.Operator)
: (Token.Operator)
iterator (Token.Name)
  (Token.Text.Whitespace)
it (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
it (Token.Name)
= (Token.Operator)
v (Token.Name)
. (Token.Punctuation)
end (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
it (Token.Name)
- (Token.Operator)
- (Token.Operator)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
a (Token.Name)
= (Token.Operator)
it (Token.Name)
- (Token.Operator)
> (Token.Operator)
first (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
a1 (Token.Name)
= (Token.Operator)
it (Token.Name)
- (Token.Operator)
> (Token.Operator)
second (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
it (Token.Name)
- (Token.Operator)
- (Token.Operator)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
b (Token.Name)
= (Token.Operator)
it (Token.Name)
- (Token.Operator)
> (Token.Operator)
first (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
for (Token.Keyword)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
i (Token.Name)
< (Token.Operator)
n (Token.Name)
; (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
+ (Token.Operator)
) (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
    	 (Token.Text.Whitespace)
if (Token.Keyword)
( (Token.Punctuation)
i (Token.Name)
= (Token.Operator)
= (Token.Operator)
a1 (Token.Name)
) (Token.Punctuation)

 (Token.Text.Whitespace)
    		 (Token.Text.Whitespace)
cout (Token.Name)
< (Token.Operator)
< (Token.Operator)
b (Token.Name)
< (Token.Operator)
< (Token.Operator)
endl (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
		 (Token.Text.Whitespace)
else (Token.Keyword)
  (Token.Text.Whitespace)
cout (Token.Name)
< (Token.Operator)
< (Token.Operator)
a (Token.Name)
< (Token.Operator)
< (Token.Operator)
endl (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
    (Token.Text.Whitespace)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)

 (Token.Text.Whitespace)
