import (Token.Keyword)
  (Token.Text.Whitespace)
java (Token.Name)
. (Token.Punctuation)
lang (Token.Name)
. (Token.Punctuation)
Math (Token.Name)
. (Token.Punctuation)
* (Token.Operator)
; (Token.Punctuation)

 (Token.Text.Whitespace)
import (Token.Keyword)
  (Token.Text.Whitespace)
java (Token.Name)
. (Token.Punctuation)
util (Token.Name)
. (Token.Punctuation)
* (Token.Operator)
; (Token.Punctuation)

 (Token.Text.Whitespace)
import (Token.Keyword)
  (Token.Text.Whitespace)
java (Token.Name)
. (Token.Punctuation)
io (Token.Name)
. (Token.Punctuation)
Console (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
import (Token.Keyword)
  (Token.Text.Whitespace)
java (Token.Name)
. (Token.Punctuation)
nio (Token.Name)
. (Token.Punctuation)
file (Token.Name)
. (Token.Punctuation)
Paths (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
import (Token.Keyword)
  (Token.Text.Whitespace)
java (Token.Name)
. (Token.Punctuation)
io (Token.Name)
. (Token.Punctuation)
IOException (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
import (Token.Keyword)
  (Token.Text.Whitespace)
java (Token.Name)
. (Token.Punctuation)
io (Token.Name)
. (Token.Punctuation)
* (Token.Operator)
; (Token.Punctuation)

 (Token.Text.Whitespace)
import (Token.Keyword)
  (Token.Text.Whitespace)
java (Token.Name)
. (Token.Punctuation)
math (Token.Name)
. (Token.Punctuation)
* (Token.Operator)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
test (Token.Name.Class)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
public (Token.Keyword)
  (Token.Text.Whitespace)
static (Token.Keyword)
  (Token.Text.Whitespace)
void (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
String (Token.Name)
[ (Token.Punctuation)
] (Token.Punctuation)
  (Token.Text.Whitespace)
args (Token.Name)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
		 (Token.Text.Whitespace)
Scanner (Token.Name)
  (Token.Text.Whitespace)
cin (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
new (Token.Keyword)
  (Token.Text.Whitespace)
Scanner (Token.Name)
( (Token.Punctuation)
System (Token.Name)
. (Token.Punctuation)
in (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
		 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
a (Token.Name)
= (Token.Operator)
cin (Token.Name)
. (Token.Punctuation)
nextInt (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
, (Token.Punctuation)
b (Token.Name)
= (Token.Operator)
cin (Token.Name)
. (Token.Punctuation)
nextInt (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
		 (Token.Text.Whitespace)
for (Token.Keyword)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
= (Token.Operator)
( (Token.Punctuation)
a (Token.Name)
< (Token.Operator)
= (Token.Operator)
b (Token.Name)
) (Token.Punctuation)
? (Token.Operator)
a (Token.Name)
: (Token.Operator)
b (Token.Name)
; (Token.Punctuation)
i (Token.Name)
> (Token.Operator)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
; (Token.Punctuation)
i (Token.Name)
- (Token.Operator)
- (Token.Operator)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
			 (Token.Text.Whitespace)
if (Token.Keyword)
( (Token.Punctuation)
a (Token.Name)
% (Token.Operator)
i (Token.Name)
= (Token.Operator)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
  (Token.Text.Whitespace)
& (Token.Operator)
& (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
% (Token.Operator)
i (Token.Name)
= (Token.Operator)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
				 (Token.Text.Whitespace)
System (Token.Name)
. (Token.Punctuation)
out (Token.Name)
. (Token.Punctuation)
println (Token.Name)
( (Token.Punctuation)
i (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
			 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
		 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
