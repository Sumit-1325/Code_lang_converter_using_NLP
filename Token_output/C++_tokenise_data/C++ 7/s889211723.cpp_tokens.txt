# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
<bits/stdc++.h> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
using (Token.Keyword)
  (Token.Text.Whitespace)
namespace (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name.Namespace)
; (Token.Punctuation)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
string (Token.Name)
  (Token.Text.Whitespace)
s (Token.Name)
; (Token.Punctuation)
cin (Token.Name)
> (Token.Operator)
> (Token.Operator)
s (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
stack (Token.Name)
< (Token.Operator)
char (Token.Keyword.Type)
  (Token.Text.Whitespace)
> (Token.Operator)
st (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
for (Token.Keyword)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
i (Token.Name)
< (Token.Operator)
( (Token.Punctuation)
int (Token.Keyword.Type)
) (Token.Punctuation)
s (Token.Name)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)
i (Token.Name)
+ (Token.Operator)
+ (Token.Operator)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
  	 (Token.Text.Whitespace)
if (Token.Keyword)
( (Token.Punctuation)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
! (Token.Operator)
= (Token.Operator)
' (Token.Literal.String.Char)
B (Token.Literal.String.Char)
' (Token.Literal.String.Char)
) (Token.Punctuation)
st (Token.Name)
. (Token.Punctuation)
push (Token.Name)
( (Token.Punctuation)
s (Token.Name)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
else (Token.Keyword)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
    	 (Token.Text.Whitespace)
if (Token.Keyword)
( (Token.Punctuation)
! (Token.Operator)
st (Token.Name)
. (Token.Punctuation)
empty (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
st (Token.Name)
. (Token.Punctuation)
pop (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
vector (Token.Name)
< (Token.Operator)
char (Token.Keyword.Type)
  (Token.Text.Whitespace)
> (Token.Operator)
final (Token.Keyword)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
while (Token.Keyword)
( (Token.Punctuation)
! (Token.Operator)
st (Token.Name)
. (Token.Punctuation)
empty (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
  	 (Token.Text.Whitespace)
final (Token.Keyword)
. (Token.Punctuation)
push_back (Token.Name)
( (Token.Punctuation)
st (Token.Name)
. (Token.Punctuation)
top (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
st (Token.Name)
. (Token.Punctuation)
pop (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
for (Token.Keyword)
( (Token.Punctuation)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
= (Token.Operator)
final (Token.Keyword)
. (Token.Punctuation)
size (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
-1 (Token.Literal.Number.Integer)
; (Token.Punctuation)
i (Token.Name)
> (Token.Operator)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
i (Token.Name)
- (Token.Operator)
- (Token.Operator)
) (Token.Punctuation)
cout (Token.Name)
< (Token.Operator)
< (Token.Operator)
final (Token.Keyword)
[ (Token.Punctuation)
i (Token.Name)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
