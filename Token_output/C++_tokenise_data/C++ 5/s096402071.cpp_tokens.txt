# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<cstdio> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<cmath> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<iostream> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<vector> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<set> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<map> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<memory> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<algorithm> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<cstring> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
namespace (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name.Namespace)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
unsigned (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
w (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
h (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
x (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
y (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
cin (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
w (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
h (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
x (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
y (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
l (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
min (Token.Name)
( (Token.Punctuation)
( (Token.Punctuation)
( (Token.Punctuation)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
) (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
  (Token.Text.Whitespace)
h (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
( (Token.Punctuation)
( (Token.Punctuation)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
) (Token.Punctuation)
( (Token.Punctuation)
w (Token.Name)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
x (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
  (Token.Text.Whitespace)
h (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
c (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
min (Token.Name)
( (Token.Punctuation)
( (Token.Punctuation)
( (Token.Punctuation)
long (Token.Keyword.Type)
   (Token.Text.Whitespace)
double (Token.Keyword.Type)
) (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
  (Token.Text.Whitespace)
w (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
( (Token.Punctuation)
( (Token.Punctuation)
long (Token.Keyword.Type)
   (Token.Text.Whitespace)
double (Token.Keyword.Type)
) (Token.Punctuation)
( (Token.Punctuation)
h (Token.Name)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
y (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
* (Token.Operator)
  (Token.Text.Whitespace)
w (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
max (Token.Name)
( (Token.Punctuation)
l (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
c (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
" (Token.Literal.String)
  (Token.Literal.String)
" (Token.Literal.String)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
fabs (Token.Name)
( (Token.Punctuation)
l (Token.Name)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
c (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
1e-9 (Token.Literal.Number.Float)
  (Token.Text.Whitespace)
? (Token.Operator)
  (Token.Text.Whitespace)
" (Token.Literal.String)
1 (Token.Literal.String)
" (Token.Literal.String)
  (Token.Text.Whitespace)
: (Token.Operator)
  (Token.Text.Whitespace)
" (Token.Literal.String)
0 (Token.Literal.String)
" (Token.Literal.String)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
