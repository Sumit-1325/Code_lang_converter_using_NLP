# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<bits/stdc++.h> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
typedef (Token.Keyword)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
long (Token.Keyword.Type)
  (Token.Text.Whitespace)
ll (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
# (Token.Comment.Preproc)
define rep(i,n) for (ll i = 0; i < (n); ++i) (Token.Comment.Preproc)

 (Token.Comment.Preproc)
using (Token.Keyword)
  (Token.Text.Whitespace)
namespace (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name.Namespace)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
w (Token.Name)
, (Token.Punctuation)
h (Token.Name)
, (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
y (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
cin (Token.Name)
> (Token.Operator)
> (Token.Operator)
w (Token.Name)
> (Token.Operator)
> (Token.Operator)
h (Token.Name)
> (Token.Operator)
> (Token.Operator)
x (Token.Name)
> (Token.Operator)
> (Token.Operator)
y (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
s (Token.Name)
= (Token.Operator)
w (Token.Name)
* (Token.Operator)
h (Token.Name)
/ (Token.Operator)
2 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
ans (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
x (Token.Name)
= (Token.Operator)
= (Token.Operator)
w (Token.Name)
  (Token.Text.Whitespace)
& (Token.Operator)
& (Token.Operator)
  (Token.Text.Whitespace)
2 (Token.Literal.Number.Integer)
* (Token.Operator)
y (Token.Name)
= (Token.Operator)
= (Token.Operator)
h (Token.Name)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
ans (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
cout (Token.Name)
< (Token.Operator)
< (Token.Operator)
fixed (Token.Name)
< (Token.Operator)
< (Token.Operator)
setprecision (Token.Name)
( (Token.Punctuation)
9 (Token.Literal.Number.Integer)
) (Token.Punctuation)
< (Token.Operator)
< (Token.Operator)
s (Token.Name)
< (Token.Operator)
< (Token.Operator)
' (Token.Literal.String.Char)
  (Token.Literal.String.Char)
' (Token.Literal.String.Char)
< (Token.Operator)
< (Token.Operator)
ans (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
