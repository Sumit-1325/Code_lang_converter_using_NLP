# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<iostream> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)
# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
  (Token.Text.Whitespace)
<cmath> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
static (Token.Keyword)
  (Token.Text.Whitespace)
const (Token.Keyword)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
EPS (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
1e-9 (Token.Literal.Number.Float)
; (Token.Punctuation)

 (Token.Text.Whitespace)
using (Token.Keyword)
  (Token.Text.Whitespace)
namespace (Token.Keyword)
  (Token.Text.Whitespace)
std (Token.Name.Namespace)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
class (Token.Keyword)
  (Token.Text.Whitespace)
Vector (Token.Name.Class)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
private (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
public (Token.Keyword)
: (Token.Operator)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
x (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
y (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
) (Token.Punctuation)
: (Token.Operator)
x (Token.Name)
( (Token.Punctuation)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
, (Token.Punctuation)
  (Token.Text.Whitespace)
y (Token.Name)
( (Token.Punctuation)
0 (Token.Literal.Number.Integer)
) (Token.Punctuation)
{ (Token.Punctuation)
} (Token.Punctuation)
; (Token.Punctuation)
  (Token.Text.Whitespace)
//Default constructor
 (Token.Comment.Single)
   (Token.Text.Whitespace)
//Constructor
 (Token.Comment.Single)
   (Token.Text.Whitespace)
Vector (Token.Name)
( (Token.Punctuation)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
x_ (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
y_ (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
x (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
x_ (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
this (Token.Keyword)
- (Token.Operator)
> (Token.Operator)
y (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
y_ (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
W (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
H (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
x (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
y (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
cin (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
W (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
H (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
x (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
y (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
p (Token.Name)
( (Token.Punctuation)
x (Token.Name)
, (Token.Punctuation)
  (Token.Text.Whitespace)
y (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
Vector (Token.Name)
  (Token.Text.Whitespace)
cent (Token.Name)
( (Token.Punctuation)
W (Token.Name)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
, (Token.Punctuation)
  (Token.Text.Whitespace)
H (Token.Name)
/ (Token.Operator)
2.0 (Token.Literal.Number.Float)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
double (Token.Keyword.Type)
  (Token.Text.Whitespace)
max_area (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
W (Token.Name)
  (Token.Text.Whitespace)
* (Token.Operator)
  (Token.Text.Whitespace)
H (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
/ (Token.Operator)
  (Token.Text.Whitespace)
2 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
has_other (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
if (Token.Keyword)
  (Token.Text.Whitespace)
( (Token.Punctuation)
( (Token.Punctuation)
fabs (Token.Name)
( (Token.Punctuation)
cent (Token.Name)
. (Token.Punctuation)
x (Token.Name)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
p (Token.Name)
. (Token.Punctuation)
x (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
EPS (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
& (Token.Operator)
  (Token.Text.Whitespace)
( (Token.Punctuation)
fabs (Token.Name)
( (Token.Punctuation)
cent (Token.Name)
. (Token.Punctuation)
y (Token.Name)
  (Token.Text.Whitespace)
- (Token.Operator)
  (Token.Text.Whitespace)
p (Token.Name)
. (Token.Punctuation)
y (Token.Name)
) (Token.Punctuation)
  (Token.Text.Whitespace)
< (Token.Operator)
  (Token.Text.Whitespace)
EPS (Token.Name)
) (Token.Punctuation)
) (Token.Punctuation)
  (Token.Text.Whitespace)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
has_other (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
  (Token.Text.Whitespace)
1 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
max_area (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
" (Token.Literal.String)
  (Token.Literal.String)
" (Token.Literal.String)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
has_other (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
endl (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
