# (Token.Comment.Preproc)
include (Token.Comment.Preproc)
<stdio.h> (Token.Comment.PreprocFile)

 (Token.Comment.Preproc)

 (Token.Text.Whitespace)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name.Function)
( (Token.Punctuation)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
char (Token.Keyword.Type)
  (Token.Text.Whitespace)
a (Token.Name)
[ (Token.Punctuation)
21 (Token.Literal.Number.Integer)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
char (Token.Keyword.Type)
  (Token.Text.Whitespace)
b (Token.Name)
[ (Token.Punctuation)
21 (Token.Literal.Number.Integer)
] (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
A (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
B (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
i (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
l (Token.Name)
= (Token.Operator)
1 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
fgets (Token.Name)
( (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
sizeof (Token.Keyword)
( (Token.Punctuation)
a (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
stdin (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
fgets (Token.Name)
( (Token.Punctuation)
b (Token.Name)
, (Token.Punctuation)
sizeof (Token.Keyword)
( (Token.Punctuation)
b (Token.Name)
) (Token.Punctuation)
, (Token.Punctuation)
stdin (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
sscanf (Token.Name)
( (Token.Punctuation)
a (Token.Name)
, (Token.Punctuation)
" (Token.Literal.String)
%dツ”, &A); (Token.Literal.String)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
sscanf (Token.Name)
( (Token.Punctuation)
b (Token.Name)
, (Token.Punctuation)
" (Token.Literal.String)
%d (Token.Literal.String)
" (Token.Literal.String)
, (Token.Punctuation)
  (Token.Text.Whitespace)
& (Token.Operator)
B (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
i (Token.Name)
= (Token.Operator)
A (Token.Name)
+ (Token.Operator)
B (Token.Name)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
while (Token.Keyword)
( (Token.Punctuation)
i (Token.Name)
   (Token.Text.Whitespace)
> (Token.Operator)
= (Token.Operator)
  (Token.Text.Whitespace)
10 (Token.Literal.Number.Integer)
) (Token.Punctuation)
{ (Token.Punctuation)

 (Token.Text.Whitespace)
		 (Token.Text.Whitespace)
i (Token.Name)
= (Token.Operator)
i (Token.Name)
/ (Token.Operator)
10 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
		 (Token.Text.Whitespace)
l (Token.Name)
= (Token.Operator)
l (Token.Name)
+ (Token.Operator)
1 (Token.Literal.Number.Integer)
; (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
	 (Token.Text.Whitespace)
printf (Token.Name)
( (Token.Punctuation)
" (Token.Literal.String)
%d (Token.Literal.String)
" (Token.Literal.String)
  (Token.Text.Whitespace)
, (Token.Punctuation)
l (Token.Name)
) (Token.Punctuation)
; (Token.Punctuation)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
