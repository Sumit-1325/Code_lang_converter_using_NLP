include (Token.Name)
< (Token.Operator)
iostream (Token.Name)
> (Token.Operator)
                                                                  (Token.Text.Whitespace)

 (Token.Text.Whitespace)
                                                                                    (Token.Text.Whitespace)

 (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
main (Token.Name)
( (Token.Punctuation)
void (Token.Keyword.Type)
) (Token.Punctuation)
{ (Token.Punctuation)
                                                                     (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
int (Token.Keyword.Type)
  (Token.Text.Whitespace)
a (Token.Name)
, (Token.Punctuation)
b (Token.Name)
, (Token.Punctuation)
c (Token.Name)
, (Token.Punctuation)
i (Token.Name)
= (Token.Operator)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
                                                                    (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
cin (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
a (Token.Name)
  (Token.Text.Whitespace)
> (Token.Operator)
> (Token.Operator)
  (Token.Text.Whitespace)
b (Token.Name)
; (Token.Punctuation)
                                                               (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
c (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
a (Token.Name)
+ (Token.Operator)
b (Token.Name)
; (Token.Punctuation)
                                                                           (Token.Text.Whitespace)

 (Token.Text.Whitespace)
  (Token.Text.Whitespace)
FLAG (Token.Name.Label)
: (Token.Punctuation)
                                                                              (Token.Text.Whitespace)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
c (Token.Name)
  (Token.Text.Whitespace)
= (Token.Operator)
c (Token.Name)
/ (Token.Operator)
10 (Token.Literal.Number.Integer)
; (Token.Punctuation)
                                                                        (Token.Text.Whitespace)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
i (Token.Name)
+ (Token.Operator)
+ (Token.Operator)
; (Token.Punctuation)
                                                                            (Token.Text.Whitespace)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
if (Token.Keyword)
( (Token.Punctuation)
0 (Token.Literal.Number.Integer)
< (Token.Operator)
c (Token.Name)
) (Token.Punctuation)
{ (Token.Punctuation)
                                                                        (Token.Text.Whitespace)

 (Token.Text.Whitespace)
       (Token.Text.Whitespace)
goto (Token.Keyword)
  (Token.Text.Whitespace)
FLAG (Token.Name)
; (Token.Punctuation)
                                                                    (Token.Text.Whitespace)

 (Token.Text.Whitespace)
     (Token.Text.Whitespace)
} (Token.Punctuation)
                                                                               (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
cout (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
i (Token.Name)
  (Token.Text.Whitespace)
< (Token.Operator)
< (Token.Operator)
  (Token.Text.Whitespace)
std (Token.Name)
: (Token.Operator)
: (Token.Operator)
endl (Token.Name)
; (Token.Punctuation)
                                                      (Token.Text.Whitespace)

 (Token.Text.Whitespace)
   (Token.Text.Whitespace)
return (Token.Keyword)
  (Token.Text.Whitespace)
0 (Token.Literal.Number.Integer)
; (Token.Punctuation)
                                                                         (Token.Text.Whitespace)

 (Token.Text.Whitespace)
} (Token.Punctuation)

 (Token.Text.Whitespace)
